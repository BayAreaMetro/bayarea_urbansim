{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"configuration/","title":"Configuration","text":""},{"location":"configuration/#baus-configuration","title":"BAUS Configuration","text":"<p>The configuration file structure for Bay Area UrbanSim (BAUS) and a description of each file. Model configurations files are stored in a <code>configs</code> folder in the model repository. They specify model settings such as model estimation constants and assumptions.</p>"},{"location":"configuration/#bayarea_urbnasimconfigs","title":"bayarea_urbnasim/configs","text":""},{"location":"configuration/#adjusters","title":"adjusters/","text":"name description cost_shifters.yaml Multipliers to cost, currently specified by county, used to calibrate the model. development_caps_asserted.yaml Caps on development, either residential or office, used to calibrate the model. (TODO: remove any base year existing policy caps entangled here). employment_relocation_rates_overwrites.csv These overwrite the relocation rates in employment_relocation_rates.csv to calibrate the model, e.g. leave government sector jobs in San Francisco City Hall's TAZ. sqft_per_job_adjusters Multipliers to the number of sqft used by each job, defined in the model's developer settings, which modify the number of jobs that can occupy a building. This is used to calibrate the model, e.g. reflect CBD job densities or adjust vacancy rates by superdistrict. The inputs file telecommute_sqft_per_job_adjusters.csv uses alternative multipliers for for the forecast years in place of these, if the strategy is enabled. (TODO: Disentangle the k-factors and the policy application in these two files. In the meantime, use both files as is done in the PBA50 No Project). zoning_adjusters.yaml Adjusters used to modify the model's zoning data."},{"location":"configuration/#accessibility","title":"accessibility/","text":"name description accessibility_settings.yaml Settings for Pandana, the model's endogenous accessibility calculations. neighborhood_vars.yaml Settings for calculating local accessibility variables during the model run. regional_vars.yaml Settings for calculating regional accessibility variables during the model run. price_vars.yaml Settings for calculating local accessibility variables on price during the model run."},{"location":"configuration/#developer","title":"developer/","text":"name description developer_settings.yaml Settings for the model's developer and feasibility models. residential_vacancy_rates.csv Residential vacancy rates for the residential developer model, separated from the main developer settings into this file to allow them to vary by year."},{"location":"configuration/#hedonics","title":"hedonics/","text":"name description price_settings.yaml Settings for the model's price simulation and supplydemand equilibration of price. nrh.yaml Non-residential hedonic price model specification. rrh.yaml Residential rent hedonic price model specification. rsh.yaml Residential sales hedonic price model specification."},{"location":"configuration/#location_choice","title":"location_choice/","text":"name description elcm.yaml Employment location choice model specification, segemented by six employment sectors. hlcm_owner.yaml Household location choice model specification segmented by income quartiles. The models are estimated for owner households. hlcm_owner_lowincome.yaml This uses the same specification and estimated coefficients as hlcm_owner. The only difference is that it is used to only low income households to choose deed-restricted owner units. hlcm_owner_lowincome_no_unplaced.yaml This uses the same specification and estimated coefficients as hlcm_owner, but allows owners of all incomes into deed-restricted owner units to cover any gaps in assignment. hlcm_owner_no_unplaced.yaml This uses the same specification and estimated coefficients as hlcm_owner, but does another round of placements of owners, this time into non-deed-restricted owner units, to cover any gaps in assignment. hlcm_renter.yaml Household location choice model specification segmented by income quartiles. The models are estimated for rental households. hlcm_renter_lowincome.yaml This uses the same specification and estimated coefficients as hlcm_renter. The only difference is that it is used to only low income households to choose deed-restricted rental units. hlcm_renter_lowincome_no_unplaced.yaml This uses the same specification and estimated coefficients as hlcm_renter, but allows renters of all incomes into deed-restricted rental units to cover any gaps in assignment. hlcm_renter_no_unplaced.yaml This uses the same specification and estimated coefficients as hlcm_renter, but does another round of placement of renters, this time into non-deed-restricted rental units, to cover any gaps in assignment. HLCM Model Estimation Choosers: Filters Estimation Alternatives: Filters Simulation Choosers: Filters Simulation Alternatives: Filters owner Owners - Owners Owner Units owner_lowincome Owners - Low-Income Owners Affordable Owner Units owner_lowincome_no_unplaced - - Owners Affordable Owner Units owner_no_unplaced Owners - Owners Market-Rate Owner Units renter Renters - Renters Renters Units renter_lowincome Renters - Low-Income Renters Affordable Rental Units renter_lowincome_no_unplaced - - Renters Affordable Rentual Units renter_no_unplaced Renters - Renters Market Rate Rental Units"},{"location":"configuration/#transition_relocation","title":"transition_relocation/","text":"name description employment_relocation_rates.csv A file with the probability of a job relocating during a time step in the forecast, by TAZ and by employment sector. Pairs with employment_relocation_rates.csv which overwrites the model probabilities with calibration factors. household_relocation_rates.csv A file with the probability of a household relocating during a time step in the forecast, by TAZ, income, and tenure. Pairs with renter_protections_relocation_rates_overwrites.csv which overwrites model probabilities with different relocation rates when the renter protections strategy is enabled. transition_relocation_settings.yaml Settings for the transition and relocation models."},{"location":"configuration/#mappingyaml","title":"mapping.yaml","text":"<p>Mapping used in the model to relate variables to one another.</p>"},{"location":"configuration/#pathsyaml","title":"paths.yaml","text":"<p>Variables that store file names for use in the model code.</p>"},{"location":"input/","title":"Input","text":""},{"location":"input/#baus-inputs","title":"BAUS Inputs","text":"<p>The inputs structure for BAUS and a description of each input. Model input files are stored in an <code>inputs</code> folder to be called by the model. They are often run-specific and contain the data used to run the model, such as base year datasets and policy inputs.</p>"},{"location":"input/#inputs","title":"inputs/","text":""},{"location":"input/#accessibility","title":"accessibility/","text":""},{"location":"input/#pandana","title":"pandana/","text":"name description tmnet.h5 Travel model network information for calculating accessibility within the model using Pandana osm_bayarea4326.h5 Street network information for calculating accessibility within the model using Pandana landmarks.csv Locations of a few major landmarks in the region for accessibility calculations. regional_poi_distances.csv The pre-computed distances from each travel model node to each landmark. bart_stations.csv A list of BART stations and their locations so that distance to BART can calculated. logsums.csv A set of base year logsums from the travel model. #### travel_model/ name description ----- ----- AccessibilityMarkets_[year].csv A travel model output file that incorportates travel model run logsums into the forecast, by year. mandatoryAccessibilities_[year].csv A travel model output file that incorportates travel model run logsums into the forecast, by year. nonMandatoryAccessibilities_[year].csv A travel model output file that incorportates travel model run logsums into the forecast, by year."},{"location":"input/#basis_inputs-in-progress","title":"basis_inputs (in progress)/","text":""},{"location":"input/#crosswalks","title":"crosswalks/","text":"name desription parcel_to_maz22.csv A lookup table from parcels to Travel Model Two MAZs. parcel_to_taz1454sub.csv A lookup table from parcels to Travel Model One TAZs. parcels_geography.csv A lookup table from parcels to jurisdiction, growth geographies, UGB areas, greenfield areas, and a concatenation of these used to join these geographies zoning_mods.csv, to apply zoning rules within them. census_id_to_name.csv Maps census id from parcels_geography to name so it can be used. maz_geography A lookup between MAZ, TAZ2, and county. maz22_taz1454 A lookup between MAZ and TAZ1. superdistricts_geography.csv A map of superdistrict numbers, names, and their subregion. taz_geography.csv A lookup between TAZ1, supedisctrict, and county."},{"location":"input/#edits","title":"edits/","text":"name description data_edits.yaml Settings for editing the input data in the model code, e.g. clipping values. manual_edits.csv Overrides the current h5 data using the table name, attribute name, and new value, so we don't have to generate a new one each time. household_building_id_overrides.csv Moves households to match new city household totals during the data preprocessing. tpp_id_2016.csv Updates tpp_ids after changes were made to the ids."},{"location":"input/#existing_policy","title":"existing_policy/","text":"name description development_caps.yaml Base year job cap policies in place in jurisdictions (TODO: remove the asserted development capsk-factors entangled here.) inclusionary.yaml Base year inclusionary zoning policies in place in jurisdictions (TODO: have all model runs inherit these, even if an inclusionary stratey is applied)."},{"location":"input/#hazards","title":"hazards/","text":"name desctiption slr_progression.csv The sea level rise level, for each forecast year. slr_inundation.csv The sea level rise level at which each inundation parcel becomes inundated, for each forecast year. Rows marked with \"100\" are parcels where sea level rise has been mitigated, either through planned projects or a plan strategy."},{"location":"input/#parcels_buildings-agents","title":"parcels_buildings-agents/","text":"name description bayarea_v3.h5 Base year database of households, jobs, buildings, and parcels. The data is pre-processed in pre-processing.py. costar.csv Commercial data from CoStar, including non-residential price to inform the price model. development_projects.csv The list of projects that have happened since the base data, or buildings in the development pipeline.  This file tends to have more attributes than we use in the model. deed_restricted_zone_totals.csv An approximate number of deed restricted units per TAZ to assign randomly within the TAZ. baseyear_taz_controls.csv Base year control totals by TAZ, to use for checking and refining inputs. The file includes number of units, vacancy rates, and employment by sector (TODO: add households). sfbay_craisglist.csv Craigslist data to inform rental unit information and model tenure."},{"location":"input/#zoning","title":"zoning/","text":"name description zoning_parcels.csv A lookup table from parcels to zoning_id, zoning area information, and a \"nodev\" flag (currently all set to 0). zoning_lookup.csv The existing zoning for each jurisdiction, assigned to parcels with the \"id\" field. Fields include the city name, city id, and the name of the zoning. The active attributes are max_dua, max_far, and max_height, all of which must be respected by each development."},{"location":"input/#plan_strategies-optional","title":"plan_strategies (optional)/","text":"name description accessory_units.csv A file to add accessory dwelling units to jurisdictions by year, simulating policy to allow or reduce barriers to ADU construction in jurisdictions (TODO: Make this a default policy). account_strategies.yaml This files contains the settings for all strategies in a model run that use accounts. The file may include account settings (e.g., how much to spend, where to spend) for development_caps_strategy.yaml A file that specifies a strategy to limit development (generally office development) to a certain number of residential units andor job spaces. inclusionary_strategy.yaml A file to apply an inclusionary zoning strategy by geography and inclusionary housing requirement percentage. preservation.yaml A file to apply an affordable housing preservation strategy through specifying geography and target number of units for preservation. profit_adjustment_stratgies.yaml This file contains the settings for all strategies in a model run which modify the profitability of projects thus altering their feasibility. The file may include profit adjustment settings (e.g., the percent change to profit) for renter_protections_relocation_rates_overwrites The rows in this file overwrite the household relocation rates in the model's settings. telecommute_sqft_per_job_adjusters These are multipliers which adjust the sqft per job setting by superdistrict by year to represent changes from a telework strategy. (TODO: Disentangle the k-factors and the policy application within this file and sqft_per_job_adjusters.csv. In the meantime, use both files as is done in the PBA50 No Project). vmt_fee_zonecats.csv This file pairs with the VMT Fee and SB-743 strategies. It provides VMT levels by TAZ1, which map to the corresponding price adjustments in the strategies. zoning_mods.csv A file which allows you to upzone or downzone. If you enter a value in \"dua_up\" or \"far_up\", the model will apply that as the new zoning or maintain the existing zoning if it is higher. If you enter a value in \"dua_down\" or \"far_down\", the model will apply that as the zoning or maintain the existing zoning if it is lower. UGBs are also controlled using this file, using zoning changes to enforce them. This file is mapped to parcels using the field \"zoningmodcat\", which is the concatenated field of growth designations in parcels_geography.csv."},{"location":"input/#regional_controls","title":"regional_controls/","text":"name description employment_controls.csv The total number of jobs in the region for the model to allocate, by year. The controls are provided by 6-sector job category. household_controls.csv The total number of households in the region for the model to allocate, by year. The controls are provided by household income quartile."},{"location":"input/#zone_forecasts","title":"zone_forecasts/","text":"name description taz_growth_rates_gov_ed.csv This file has ratios of governement and education employment per population by County and TAZ. The files has two header rows prportional_retail_jobs_forecast.csv This contains the field \"minimum_forecast_retail_jobs_per_household\" by jurisdiction, which is used to keep local numbers of retail jobs reasonable through the forecast. tm1_taz1_forecast_inputs.csv This is closely related to regional_controls.csv. These are zone level inputs used for the process of generating variables for the travel model, while the other file contains regional-level controls. These inputs provide TAZ1454 information, used for Travel Model One summaries. tm2_taz2_forecast_inputs.csv The same as above, except these inputs provide TAZ2 information, usED for Travel Model Two summaries. tm1_tm2_maz_forecast_inputs.csv The same as above, except these inputs provide MAZ information, used for btoh Travel Model One and Travel Model Two summaries. tm2_emp27_employment_shares The forecasted share of jobs by 26 sectors, used to apportion that 6 sectors used in the model into more detailed categories Travel Model Two. The shares are provided by county and by year. tm2_occupation_shares The forecasted share of jobs by occupation, used for Travel Model Two. The shares are provided by county and by year. tm1_tm2_regional_controls.csv Controls from the regional forecast which give us employed residents and the age distribution by year, used to forecast variables used by the travel model. tm1_tm2_regional_demographic_forecast Similar to regional_controls.csv, this file provides regional-level information to produce travel model variables, in this case using forecasts of shares by year."},{"location":"model/","title":"Bay Area UrbanSim (BAUS)","text":""},{"location":"model/#model-overview","title":"Model Overview","text":"<p>Bay Area UrbanSim (BAUS) is a microeconomic land use model used to forecast intraregional growth and study urban policies in the San Francisco Bay Area using the UrbanSim framework. BAUS simulates the movement of households and firms within the region and the construction of built space. The total number of households and jobs in the region in future years is forecast using the REMI regional economic model and additional demographic processing scripts. BAUS is used to incrementally forecast potential future urban growth trajectories, with forecasted land use patterns then entered into the regional travel demand model to evaluate future travel patterns.</p> <p>Households, firms, and developers in BAUS act on the parcel as the model's base unit of analysis. Developers determine feasible parcels in the region to build housing units and jobs space. Households and firms choose where to locate based on behavioral model preferences for particular locations. The price of buildings in BAUS in each model time step to reflect the influence of demand and accessibility changes in particular areas, in turn changing the feasibility landscape for developers. The core BAUS models run iteratively to produce a dynamic land use forecast.</p> <p></p>"},{"location":"model/#baus-sub-model-flow","title":"BAUS Sub-Model Flow","text":"<p>A series of sub-models are used to simulate the decisions of households and firms in a land use forecast. The BAUS sub-models and their modeling methods are described below. Some BAUS models have been segmented to capture key elements of real estate markets, such as housing tenure, or to capture varying preferences among households and firms, such as the varying location preferences of different employment sectors. Additional models have been added that help model urban policies, such as the option to locate in affordable housing units.</p> <p></p>"},{"location":"model/#accessibility-calculations","title":"Accessibility Calculations","text":"<p>Pandana is open-source software package used to calculate endogenous accessibility variables. These generally describe how close a parcel is to something (e.g., BART) or how many things are nearby a parcel (e.g., number of jobs), informing both price prediction models and location choice models. Both local (local street network from Open Street Map) and regional (travel model network) networks are used to compute these variables.</p>"},{"location":"model/#price-rent-prediction","title":"Price &amp; Rent Prediction","text":"<p>Hedonic regression models are applied to current model year conditions to estimate both prices and rents in that year. Accessibillity information from the regional travel model is entered into these models, allowing future year travel conditions to influence real estate prices. This feature is central to MTC's integrated land use and travel modeling.</p>"},{"location":"model/#household-firm-relocation","title":"Household &amp; Firm Relocation","text":"<p>Households and firm are selected to move based on historic relocation probabilities. Household move-out choice is conditional on tenure status. Households and firms that are selected to relocate are added to the set of relocation agents looking for homes and job space, to be placed with the model's location choice models.</p>"},{"location":"model/#household-firm-transition","title":"Household &amp; Firm Transition","text":"<p>REMI is used to generate the model's control totals for region's total number of households and jobs, while BAUS outputs on housing production are used to adjust regional housing prices in REMI. Additional households and employees are added or subtracted from BAUS in each model time step to reflect the exogenous control totals. Any net additional households and firms are added to the set of relocation agents looking for homes and job space, to be placed with the model's location choice models. </p>"},{"location":"model/#pipeline-project-development","title":"Pipeline Project Development","text":"<p>Buildings in the region's development pipeline are constructed by entering the projects into the development poipeline list. These are often large approved development projects and development that has occurred after the model's base year. </p>"},{"location":"model/#market-rate-developer-model","title":"Market-Rate Developer Model","text":"<p>The for-profit real estate development model in BAUS samples locations in the region in order to evaluate potential development sites using a simplified pro forma model. Sub-features of the developer model include a zone-level model that asserts ADU development to reflect ADU policy and a ground floor retail model adds retail to multi-story buildings to reflect typical policy.</p>"},{"location":"model/#affordable-housing-developer-model","title":"Affordable Housing Developer Model","text":"<p>In many simulations, a similar not-for-profit real estate development process produces affordable housing units based on money available within BAUS affordable housing funding accounts.</p>"},{"location":"model/#household-firm-location-choice-models","title":"Household &amp; Firm Location Choice Models","text":"<p>Households and firms are assigned to new locations based on logistic regresssion models that capture the preferences of particular segments of households and jobs (e.g., lower income households, retail jobs). Additional household location choice models are also run that allow low-income households to have priority for selecting affordable housing units, allowing affordable housing to be explicity modeled in BAUS.</p>"},{"location":"model/#institutional-jobs-model","title":"Institutional Jobs Model","text":"<p>Particular industry sectors which don't follow traditional market economics are forecast separately from. For government and education jobs, the number of jobs grow over the simulation period in proportion to their zonal shares. The buildings that house these jobs are off-limits from redevelopment.</p>"},{"location":"model/#retail-model","title":"Retail Model","text":"<p>An additional retail model takes into account where demand for retail is high and supply is low to ensure there are retail services in each jurisdiction. Retail demand is a function of the number of households and household incomes.</p>"},{"location":"output/","title":"Output","text":""},{"location":"output/#baus-outputs","title":"BAUS Outputs","text":"<p>The outputs of BAUS and a description of each file. Model output files are written to an <code>outputs</code> folder during a BAUS model run.</p>"},{"location":"output/#outputs","title":"outputs/","text":""},{"location":"output/#core-summaries","title":"core summaries","text":"name description parcel_summary_[year].csv Development, households, and jobs on each parcel in a given year. parcel_growth_summary.csv Change in development, households, and jobs on each parcel between the model's base year and forecast year. building_summary_[year].csv Inventory of buildings in a given year, linked to the parcel they sit on. diagnostic_output.csv Interim model data."},{"location":"output/#geographic-summaries","title":"geographic summaries","text":"name description jurisdiction_summary_[year].csv Jurisdiction-level summary of development, households, and jobs in a given year. jurisdiction_summary_growth.csv Jurisdiction-level change in development, households, and jobs between the model's base year and forecast year. superdistrict_summary_[year].csv Superdistrict-level summary of development, households, and jobs in a given year. superdistrict_summary_growth.csv Superdistrict-level change in development, households, and jobs between the model's base year and forecast year. county_summary_[year].csv County-level summary of development, households, and jobs in a given year. county_summary_growth.csv County-level change in development, households, and jobs between the model's base year and forecast year. subregion_summary_[year].csv Subregion-level change in development, households, and jobs in a given year. subregion_summary_growth.csv Subregion-level change in development, households, and jobs between the model's base year and forecast year. region_summary_[year].csv Regional summary of development, households, and jobs in a given year. region_summary_growth.csv Regional change in development, households, and jobs between the model's base year and forecast year."},{"location":"output/#travel-model-summaries","title":"travel model summaries","text":"name description taz1_summary_[year].csv TAZ1/TAZ1454-level summaries of development, households, jobs, demographics, and density attributes used for travel modeling. taz1_summary_growth.csv TAZ1/TAZ1454-level change in development, households, jobs, demographics, and density attributes used for travel modeling. maz_marginals_[year].csv MAZ-level summaries of households and demographics used to create the synthesized population for travel modeling. maz_summary_[year].csv MAZ-level summaries of development, households, jobs, and density attributes used for travel modeling. maz_summary_growth.csv MAZ-level change in development, households, jobs, and density attributes used for travel modeling. taz2_marginals_[year].csv TAZ2-level summaries of households and demographics used to create the synthesized population for travel modeling. county_marginals_[year].csv County-level summaries of demographics and jobs used to create the synthesized population for travel modeling. region_marginals_[year].csv Region-level summaries of demographics used to create the synthesized population for travel modeling."},{"location":"output/#affordable-housing-summaries","title":"affordable housing summaries","text":"name description juris_dr_summary_[year].csv Jurisdiction-level summary of deed-restricted units by type in a given year. juris_dr_growth.csv Jurisdiction-level change in deed-restricted units by type between the model's base year and forecast year. superdistrict_dr_summary_[year].csv Superdistrict-level summary of deed-restricted units by type in a given year. superdistrict_dr_growth.csv Superdistrict-level change in deed-restricted units by type between the model's base year and forecast year. county_dr_summary_[growth].csv County-level summary of deed-restricted units by type in a given year. county_dr_growth County-level change in deed-restricted units by type between the model's base year and forecast year. region_dr_summary_[year].csv Region-level summary of deed-restricted units by type in a given year. region_dr_growth.csv Region-level change in deed-restricted units by type between the model's base year and forecast year."},{"location":"output/#hazards-summaries","title":"hazards summaries","text":"name description slr_summary_[year].csv Sea level rise impacted parcels, buildings, households, and jobs in a given year. eq_codes_summary_[year].csv Summary of earthquake codes assigned to buildings, in the earthquake year. eq_fragilities_summary_[year].csv SUmmary of fragilities assigned to buildings, in the earthquake year. slr_summary_[year].csv Earthquake impacted parcels, buildings, households, and jobs in the earthquake year. eq_demolish_buildings_[year].csv Inventory of buildings impacted by earthquake, by TAZ for the resilience team. eq_demolish_buildings_[year].csv Inventory of buildings retrofit for earthquake, by TAZ for the resilience team. eq_buildings_list_[year].csv Inventory of buildings in key earthquake years, by TAZ for the resilience team."},{"location":"output/#metrics","title":"metrics","text":"name description growth_geog_summary_[year].csv Households and jobs in growth geographies and combinations of growth geographies, by year. growth_geog_growth_summary_[year].csv Change in households and jobs in growth geographies and combinations of growth geographies between the model's base year and forecast year. dr_units_metrics.csv Change in deed-restricted units by HRA and COC. household_income_metrics_[year].csv Low income households by growth geography, by year. equity_metrics.csv Change in low income households in Displacement tracts and COC tracts. jobs_housing_metrics.csv Jobs-Housing ratios by county, by year. jobs_metrics.csv Change in PPA and manufacturing jobs. slr_metrics.csv Sea level rise affected and protected total households, low-income households and COC households. earthquake_metrics.csv Total housing units retrofit and total retrofit cost, for all units and for COC units. Earthquake affected and protected total households, low-income households, and COC households. greenfield_metric.csv Change in annual greenfield development acres."},{"location":"scenarios/","title":"Scenarios","text":""},{"location":"scenarios/#baus-scenarios","title":"BAUS Scenarios","text":"<p>BAUS model runs modify optional policies and other levers to observe potential outcomes. Packages of changes are simulated to forecast impact on the future urban landscape and are enterered into the travel model to predict future year travel patterns and greenhouse gas emmissions.</p> <p></p>"},{"location":"scenarios/#hazards","title":"Hazards","text":"<ul> <li>Earthquake: Simulates the impact of an earthquake by destroying buildings based on their characteristics, displacing their inhabitants, and leaving them open to redevelopment.</li> <li>Sea level rise: Simulates the impact of earthquakes and sea level rise by destroying buildings, displacing their inhabitants, and marking these parcels off-limits.</li> </ul>"},{"location":"scenarios/#housing-preservation","title":"Housing Preservation","text":"<ul> <li>Selects buildings to spend preservation funding on, by marking them as deed restricted units. The selection is not tied to price, and housing cost is calculated off model. <ul> <li>The buildings are randomly selected based on the total number of buildings to preserve within a geography. </li> <li>The \"deed restricted\" column is updated in the residential units table, which is used to filter units in the household location choice models and assign Q1 households to deed restricted units. The \"deed restricted units\" and \"preserved units\" columns are updated in the buildings table.</li> </ul> </li> </ul>"},{"location":"scenarios/#inclusionary-zoning","title":"Inclusionary Zoning","text":"<ul> <li>Inclusionary zoning requirements set x% of new housing development have to be affordable. The default setting represents the existing requirements without plan strategy interventions. Plan strategies can set inclusionary rates at certain geographic level: </li> <li>Modeling Inclusionary Zoning in BAUS:<ul> <li>datasources.py reads inclusionary strategy input and maps it to parcels using the corresponding field.</li> <li>In subsidies.py, the inclusionary_housing_revenue_reduction function calculates median household AMI, feasible new affordable housing count and revenue_reduction amount of each inclusionary geography. </li> </ul> </li> </ul>"},{"location":"scenarios/#profitability-adjustment-policies","title":"Profitability Adjustment Policies","text":"<ul> <li>One way to (indirectly) subsidize housing is to reduce housing development cost reduction, for example, SB743 CEQA reform, lowering parking requirements, etc. This is defined in profitability_adjustment_policies. For each policy, profitabiity_adjustment_formula picks the parcels of a certain geography and then decreases the required profitability level needed for the model to build on those parcels, e.g. multiplying by 2.5% or 0.</li> <li>Modeling Inclusionary Zoning in BAUS:</li> </ul>"},{"location":"scenarios/#affordable-housing-fund-lump-sum-accounts","title":"Affordable Housing Fund Lump Sum Accounts","text":"<p>Lump-sum accounts represent direct housing subsidies. Each county has a <code>lump-sum account</code> to hold all the available affordable housing funding for that county. BAUS assumes a constant annual funding amount (an independent input), for each county during the plan period, doesn't consider inflation or fluctuations in funding availability over time. In each simulation iteration, funding available in each county's account equals the annual amount multiplies by years per iteration (5 years in BAUS). Residential development projects that are not feasible under market conditions are potentially qualified for subsidy. Final Blueprint requires the projects to be also located within the Growth Geography. A qualified project draws money from the corresponding account to fill the feasibility gap. Not all qualified projects will be subsidized. * Modeling Affordable Housing funds in BAUS:     * Set up the account in policy.yaml     * Calculate each account's subsidy amount for each iteration and add it to coffer     * Set up the filter in <code>run_subsidized_developer()</code>     * Update the config in 'summaries.py'     * Check <code>subsidized_residential_developer_lump_sum_accts()</code> and make sure it is included in the model list in <code>baus.py</code></p>"},{"location":"scenarios/#office-lump-sum-account","title":"Office Lump Sum Account","text":"<ul> <li>Similar to the residential funding lump sum account, office lump sum account provides funding to subsidize office development in targeted areas.  </li> </ul>"},{"location":"scenarios/#vmt-fees-transportation-impact-fees","title":"VMT Fees / Transportation Impact Fees","text":"<ul> <li>Apply fees on new commercial or residential development that reflects transportation impacts associated with such development, focusing primarily on new commercial spaces or residential units anticipated to have high employment-related or residence-related vehicle miles traveled (VMT). The fees could be set at county, jurisdiction, or TAZ level, usually on a $/sqft basis for commercial development and $/unit basis for residential development. Draft Blueprint applies VMT on new office development based on the county and associated VMT per worker associated with the TAZ to incentivize development inside low-VMT job centers.</li> <li>Modeling VMT Fees in BAUS:<ul> <li>BAUS has three types of VMT fees - \"com_for_res\" (apply fees on commercial development to subsidize residential development), \"res_for_res\" (apply fees on residential development to subsidize residential development), and \"com_for_com\" (apply fees on commercial development to subsidize commercial development). </li> <li>Each parcel is assigned a \"vmt_res_cat\" value and a \"vmt_nonres_cat\" value based on its categorized VMT-level. This is then mapped to the fee table to decide the fee amount for new residential and commercial development on the parcel.</li> <li>During each model iteration period (currently five years), VMT fees collected from new development go into one of the two accounts - \"vmt_res_acct\" and \"vmt_com_acct\" - for each geography (regional or sub-regional). Policies that aim to support/incentivize certain types of housing development or commercial activities can draw funding from respective account. In Draft Blueprint, VMT fees revenue is not applied into any job/housing incentive, but is accumulated to help to understand how much revenue is raised to support other economy strategies.</li> </ul> </li> </ul>"},{"location":"scenarios/#jobs-housing-balance-fee","title":"Jobs-housing Balance Fee","text":"<ul> <li>Apply a regional jobs-housing linkage fee to generate funding for affordable housing when new office development occurs in job-rich places, thereby incentivizing more jobs to locate in housing-rich places. The $/sqft fee assigned to each jurisdiction is a composite fee based on the jobs-housing ratio and jobs-housing fit for both cities and counties.</li> <li>Modeling Jobs-Housing fee in BAUS:<ul> <li>Jobs-housing fee is tracked in BAUS under the \"jobs_housing_com_for_res\" account at the county level, which is similar to the \"com_for_res\" account of the VMT strategy.</li> <li>In each model interation period, jobs-housing fees applies to new office development in each county based on the $/sqft level of jurisdiction where the development occurs. The fees collected goes to each county's account. </li> <li>The account then acts similarly to the county-level lump-sum account to subsidize affordable housing in that county. </li> </ul> </li> </ul>"}]}