<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20212.23.0623.1515                               -->
<workbook original-version='18.1' source-build='2021.2.25 (20212.23.0623.1515)' source-platform='win' version='18.1' xml:base='https://10ay.online.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <SpatialFileLayer />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='CensusvsPBA50vsContingencyPlanrunscomparison' path='/t/metropolitantransportationcommission/workbooks' revision='1.6' site='metropolitantransportationcommission' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='TAZ-level data' inline='true' name='federated.0kyp62f0hvmbrs19zsgps0kbnizi' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='superdistrict-county' name='textscan.1v8s6if1ujs6u516sh0g90n8mu4t'>
            <connection class='textscan' directory='X:/travel-model-one-master/utilities/geographies' filename='superdistrict-county.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='Travel Analysis Zones' name='ogrdirect.1c8sxet1mhg3lx173fw1q0zgbv0n'>
            <connection class='ogrdirect' directory='M:/Data/Urban/BAUS/visualization_design/data/data_viz_ready/spatial' filename='Travel Analysis Zones.shp' password='' server='' tablename='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='taz_data_long' name='textscan.0qjh7st1rvhg341gqhhlx0kenr0m'>
            <connection class='textscan' directory='.' filename='taz_data_long.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='ogrdirect.1c8sxet1mhg3lx173fw1q0zgbv0n' name='Travel Analysis Zones.shp' table='[Travel Analysis Zones.shp]' type='table'>
          <columns>
            <column datatype='integer' name='SUPERD' ordinal='0' />
            <column datatype='integer' name='TAZ1454' ordinal='1' />
            <column datatype='real' name='Shape__Are' ordinal='2' />
            <column datatype='real' name='Shape__Len' ordinal='3' />
            <column datatype='integer' name='within_5mi' ordinal='4' />
            <column datatype='integer' name='within_3mi' ordinal='5' />
            <column datatype='integer' name='within_2mi' ordinal='6' />
            <column datatype='spatial' name='Geometry' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.0qjh7st1rvhg341gqhhlx0kenr0m' name='taz_data_long.csv' table='[taz_data_long#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='ZONE' ordinal='0' />
              <column datatype='string' name='variable' ordinal='1' />
              <column datatype='real' name='value' ordinal='2' />
              <column datatype='string' name='source' ordinal='3' />
              <column datatype='integer' name='year' ordinal='4' />
            </columns>
          </relation>
          <relation connection='ogrdirect.1c8sxet1mhg3lx173fw1q0zgbv0n' name='Travel Analysis Zones.shp' table='[Travel Analysis Zones.shp]' type='table'>
            <columns>
              <column datatype='integer' name='SUPERD' ordinal='0' />
              <column datatype='integer' name='TAZ1454' ordinal='1' />
              <column datatype='real' name='Shape__Are' ordinal='2' />
              <column datatype='real' name='Shape__Len' ordinal='3' />
              <column datatype='integer' name='within_5mi' ordinal='4' />
              <column datatype='integer' name='within_3mi' ordinal='5' />
              <column datatype='integer' name='within_2mi' ordinal='6' />
              <column datatype='spatial' name='Geometry' ordinal='7' />
            </columns>
          </relation>
          <relation connection='textscan.1v8s6if1ujs6u516sh0g90n8mu4t' name='taz-superdistrict-county.csv' table='[taz-superdistrict-county#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='ZONE' ordinal='0' />
              <column datatype='integer' name='SD' ordinal='1' />
              <column datatype='integer' name='COUNTY' ordinal='2' />
              <column datatype='string' name='SD_NAME' ordinal='3' />
              <column datatype='string' name='COUNTY_NAME' ordinal='4' />
              <column datatype='string' name='SD_NUM_NAME' ordinal='5' />
              <column datatype='string' name='COUNTY_NUM_NAME' ordinal='6' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[COUNTY]' value='[taz-superdistrict-county.csv].[COUNTY]' />
          <map key='[COUNTY_NAME]' value='[taz-superdistrict-county.csv].[COUNTY_NAME]' />
          <map key='[COUNTY_NUM_NAME]' value='[taz-superdistrict-county.csv].[COUNTY_NUM_NAME]' />
          <map key='[Geometry]' value='[Travel Analysis Zones.shp].[Geometry]' />
          <map key='[SD]' value='[taz-superdistrict-county.csv].[SD]' />
          <map key='[SD_NAME]' value='[taz-superdistrict-county.csv].[SD_NAME]' />
          <map key='[SD_NUM_NAME]' value='[taz-superdistrict-county.csv].[SD_NUM_NAME]' />
          <map key='[SUPERD]' value='[Travel Analysis Zones.shp].[SUPERD]' />
          <map key='[Shape__Are]' value='[Travel Analysis Zones.shp].[Shape__Are]' />
          <map key='[Shape__Len]' value='[Travel Analysis Zones.shp].[Shape__Len]' />
          <map key='[TAZ1454]' value='[Travel Analysis Zones.shp].[TAZ1454]' />
          <map key='[ZONE (taz-superdistrict-county.csv)]' value='[taz-superdistrict-county.csv].[ZONE]' />
          <map key='[ZONE]' value='[taz_data_long.csv].[ZONE]' />
          <map key='[source]' value='[taz_data_long.csv].[source]' />
          <map key='[value]' value='[taz_data_long.csv].[value]' />
          <map key='[variable]' value='[taz_data_long.csv].[variable]' />
          <map key='[within_2mi]' value='[Travel Analysis Zones.shp].[within_2mi]' />
          <map key='[within_3mi]' value='[Travel Analysis Zones.shp].[within_3mi]' />
          <map key='[within_5mi]' value='[Travel Analysis Zones.shp].[within_5mi]' />
          <map key='[year]' value='[taz_data_long.csv].[year]' />
        </cols>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[taz_data_long.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[taz-superdistrict-county.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ZONE</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ZONE]</local-name>
            <parent-name>[taz_data_long.csv]</parent-name>
            <remote-alias>ZONE</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz_data_long.csv_7DEF6B455F6F48C4A4E2CFCFE2A26C3F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>variable</remote-name>
            <remote-type>129</remote-type>
            <local-name>[variable]</local-name>
            <parent-name>[taz_data_long.csv]</parent-name>
            <remote-alias>variable</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz_data_long.csv_7DEF6B455F6F48C4A4E2CFCFE2A26C3F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[value]</local-name>
            <parent-name>[taz_data_long.csv]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz_data_long.csv_7DEF6B455F6F48C4A4E2CFCFE2A26C3F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source</remote-name>
            <remote-type>129</remote-type>
            <local-name>[source]</local-name>
            <parent-name>[taz_data_long.csv]</parent-name>
            <remote-alias>source</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz_data_long.csv_7DEF6B455F6F48C4A4E2CFCFE2A26C3F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[taz_data_long.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz_data_long.csv_7DEF6B455F6F48C4A4E2CFCFE2A26C3F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SUPERD</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SUPERD]</local-name>
            <parent-name>[Travel Analysis Zones.shp]</parent-name>
            <remote-alias>SUPERD</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TAZ1454</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TAZ1454]</local-name>
            <parent-name>[Travel Analysis Zones.shp]</parent-name>
            <remote-alias>TAZ1454</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shape__Are</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shape__Are]</local-name>
            <parent-name>[Travel Analysis Zones.shp]</parent-name>
            <remote-alias>Shape__Are</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shape__Len</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shape__Len]</local-name>
            <parent-name>[Travel Analysis Zones.shp]</parent-name>
            <remote-alias>Shape__Len</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>within_5mi</remote-name>
            <remote-type>20</remote-type>
            <local-name>[within_5mi]</local-name>
            <parent-name>[Travel Analysis Zones.shp]</parent-name>
            <remote-alias>within_5mi</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>within_3mi</remote-name>
            <remote-type>20</remote-type>
            <local-name>[within_3mi]</local-name>
            <parent-name>[Travel Analysis Zones.shp]</parent-name>
            <remote-alias>within_3mi</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>within_2mi</remote-name>
            <remote-type>20</remote-type>
            <local-name>[within_2mi]</local-name>
            <parent-name>[Travel Analysis Zones.shp]</parent-name>
            <remote-alias>within_2mi</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Geometry</remote-name>
            <remote-type>8</remote-type>
            <local-name>[Geometry]</local-name>
            <parent-name>[Travel Analysis Zones.shp]</parent-name>
            <remote-alias>Geometry</remote-alias>
            <ordinal>12</ordinal>
            <local-type>spatial</local-type>
            <aggregation>Collect</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ZONE</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ZONE (taz-superdistrict-county.csv)]</local-name>
            <parent-name>[taz-superdistrict-county.csv]</parent-name>
            <remote-alias>ZONE</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz-superdistrict-county.csv_35F675E99FDD426CAB6A334DE6C59C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SD</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SD]</local-name>
            <parent-name>[taz-superdistrict-county.csv]</parent-name>
            <remote-alias>SD</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz-superdistrict-county.csv_35F675E99FDD426CAB6A334DE6C59C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[COUNTY]</local-name>
            <parent-name>[taz-superdistrict-county.csv]</parent-name>
            <remote-alias>COUNTY</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz-superdistrict-county.csv_35F675E99FDD426CAB6A334DE6C59C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SD_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SD_NAME]</local-name>
            <parent-name>[taz-superdistrict-county.csv]</parent-name>
            <remote-alias>SD_NAME</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz-superdistrict-county.csv_35F675E99FDD426CAB6A334DE6C59C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTY_NAME]</local-name>
            <parent-name>[taz-superdistrict-county.csv]</parent-name>
            <remote-alias>COUNTY_NAME</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz-superdistrict-county.csv_35F675E99FDD426CAB6A334DE6C59C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SD_NUM_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SD_NUM_NAME]</local-name>
            <parent-name>[taz-superdistrict-county.csv]</parent-name>
            <remote-alias>SD_NUM_NAME</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz-superdistrict-county.csv_35F675E99FDD426CAB6A334DE6C59C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY_NUM_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTY_NUM_NAME]</local-name>
            <parent-name>[taz-superdistrict-county.csv]</parent-name>
            <remote-alias>COUNTY_NUM_NAME</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz-superdistrict-county.csv_35F675E99FDD426CAB6A334DE6C59C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Measure Names' datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:TOTHH:qk:6]&quot;' value='Difference' />
          <alias key='&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:TOTHH:qk:4]&quot;' value='% Difference' />
        </aliases>
      </column>
      <column caption='County' datatype='integer' name='[COUNTY]' role='measure' type='quantitative' />
      <column caption='County Name' datatype='string' name='[COUNTY_NAME]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='County Num Name' datatype='string' name='[COUNTY_NUM_NAME]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Growth' datatype='real' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN(SUM([value])) - LOOKUP(ZN(SUM([value])), FIRST())'>
          <table-calc ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[year]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Growth Real' datatype='real' name='[Calculation2]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN(SUM([value])) - LOOKUP(ZN(SUM([value])), FIRST())'>
          <table-calc ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Value by SD Num Name' datatype='real' name='[Calculation_878764944827150358]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [SD_NUM_NAME]: SUM([value]) }' />
      </column>
      <column caption='Shape' datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
      <column caption='Measure Values' datatype='real' name='[Multiple Values]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='SD1' datatype='integer' name='[SD]' role='dimension' type='ordinal' />
      <column caption='Sd Name' datatype='string' name='[SD_NAME]' role='dimension' type='nominal' />
      <column caption='Sd Num Name' datatype='string' name='[SD_NUM_NAME]' role='dimension' type='nominal' />
      <column caption='Superd' datatype='integer' name='[SUPERD]' role='measure' type='quantitative' />
      <column caption='Taz1454' datatype='integer' name='[TAZ1454]' role='measure' type='quantitative' />
      <column caption='Zone' datatype='integer' name='[ZONE]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Travel Analysis Zones.shp' datatype='table' name='[__tableau_internal_object_id__].[Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='taz-superdistrict-county.csv' datatype='table' name='[__tableau_internal_object_id__].[taz-superdistrict-county.csv_35F675E99FDD426CAB6A334DE6C59C51]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='taz_data_long.csv' datatype='table' name='[__tableau_internal_object_id__].[taz_data_long.csv_7DEF6B455F6F48C4A4E2CFCFE2A26C3F]' role='measure' type='quantitative' />
      <column datatype='string' hidden='true' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
      <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
      <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
      <column caption='Within 2Mi' datatype='integer' name='[within_2mi]' role='measure' type='quantitative' />
      <column caption='Within 3Mi' datatype='integer' name='[within_3mi]' role='measure' type='quantitative' />
      <column caption='Within 5Mi' datatype='integer' name='[within_5mi]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
      <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:10]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:11]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]' ordering-type='Field' type='Difference'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:12]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Table' type='Difference'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:13]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='Difference'>
          <order field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NUM_NAME:nk]' />
          <order field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk]' />
          <order field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' />
          <order field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]' />
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:14]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='Difference'>
          <order field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk]' />
          <order field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' />
          <order field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]' />
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:15]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='Difference'>
          <order field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' />
          <order field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]' />
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[source]' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='Difference'>
          <order field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' />
          <order field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]' />
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:3]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:4]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:5]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:6]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='Difference'>
          <order field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' />
          <order field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[year]' />
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:7]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[year]' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:8]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[year]' ordering-type='Field' type='Difference'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:9]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[source]' ordering-type='Field' type='Difference'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[COUNTY_NUM_NAME]' derivation='None' name='[none:COUNTY_NUM_NAME:nk]' pivot='key' type='nominal' />
      <column-instance column='[SD_NUM_NAME]' derivation='None' name='[none:SD_NUM_NAME:nk]' pivot='key' type='nominal' />
      <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
      <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
      <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[value]' derivation='Sum' name='[pcdf:sum:value:qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[source]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[pcdf:sum:value:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[source]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[pcto:sum:value:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[year]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[year]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation2]' derivation='User' name='[usr:Calculation2:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]' ordering-type='Field' />
      </column-instance>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/dlevitt/Documents/GitHub/bayarea_urbansim/visualization/Tableau/pba50plus_validation/TAZ-level data.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='10/25/2023 09:22:08 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7' table='[Extract].[Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
            <relation name='taz_data_long.csv_7DEF6B455F6F48C4A4E2CFCFE2A26C3F' table='[Extract].[taz_data_long.csv_7DEF6B455F6F48C4A4E2CFCFE2A26C3F]' type='table' />
            <relation name='Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7' table='[Extract].[Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7]' type='table' />
            <relation name='taz-superdistrict-county.csv_35F675E99FDD426CAB6A334DE6C59C51' table='[Extract].[taz-superdistrict-county.csv_35F675E99FDD426CAB6A334DE6C59C51]' type='table' />
          </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
          <cols>
            <map key='[COUNTY]' value='[taz-superdistrict-county.csv_35F675E99FDD426CAB6A334DE6C59C51].[COUNTY]' />
            <map key='[COUNTY_NAME]' value='[taz-superdistrict-county.csv_35F675E99FDD426CAB6A334DE6C59C51].[COUNTY_NAME]' />
            <map key='[COUNTY_NUM_NAME]' value='[taz-superdistrict-county.csv_35F675E99FDD426CAB6A334DE6C59C51].[COUNTY_NUM_NAME]' />
            <map key='[Geometry]' value='[Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7].[Geometry]' />
            <map key='[SD]' value='[taz-superdistrict-county.csv_35F675E99FDD426CAB6A334DE6C59C51].[SD]' />
            <map key='[SD_NAME]' value='[taz-superdistrict-county.csv_35F675E99FDD426CAB6A334DE6C59C51].[SD_NAME]' />
            <map key='[SD_NUM_NAME]' value='[taz-superdistrict-county.csv_35F675E99FDD426CAB6A334DE6C59C51].[SD_NUM_NAME]' />
            <map key='[SUPERD]' value='[Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7].[SUPERD]' />
            <map key='[Shape__Are]' value='[Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7].[Shape__Are]' />
            <map key='[Shape__Len]' value='[Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7].[Shape__Len]' />
            <map key='[TAZ1454]' value='[Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7].[TAZ1454]' />
            <map key='[ZONE (taz-superdistrict-county.csv)]' value='[taz-superdistrict-county.csv_35F675E99FDD426CAB6A334DE6C59C51].[ZONE]' />
            <map key='[ZONE]' value='[taz_data_long.csv_7DEF6B455F6F48C4A4E2CFCFE2A26C3F].[ZONE]' />
            <map key='[source]' value='[taz_data_long.csv_7DEF6B455F6F48C4A4E2CFCFE2A26C3F].[source]' />
            <map key='[value]' value='[taz_data_long.csv_7DEF6B455F6F48C4A4E2CFCFE2A26C3F].[value]' />
            <map key='[variable]' value='[taz_data_long.csv_7DEF6B455F6F48C4A4E2CFCFE2A26C3F].[variable]' />
            <map key='[within_2mi]' value='[Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7].[within_2mi]' />
            <map key='[within_3mi]' value='[Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7].[within_3mi]' />
            <map key='[within_5mi]' value='[Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7].[within_5mi]' />
            <map key='[year]' value='[taz_data_long.csv_7DEF6B455F6F48C4A4E2CFCFE2A26C3F].[year]' />
          </cols>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='TAZ-level data' increment-value='%null%' refresh-type='create' rows-inserted='612155' timestamp-start='2023-10-25 21:22:08.618' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>ZONE</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ZONE]</local-name>
              <parent-name>[taz_data_long.csv_7DEF6B455F6F48C4A4E2CFCFE2A26C3F]</parent-name>
              <remote-alias>ZONE</remote-alias>
              <ordinal>0</ordinal>
              <family>taz_data_long.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6110</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>variable</remote-name>
              <remote-type>129</remote-type>
              <local-name>[variable]</local-name>
              <parent-name>[taz_data_long.csv_7DEF6B455F6F48C4A4E2CFCFE2A26C3F]</parent-name>
              <remote-alias>variable</remote-alias>
              <ordinal>1</ordinal>
              <family>taz_data_long.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>value</remote-name>
              <remote-type>5</remote-type>
              <local-name>[value]</local-name>
              <parent-name>[taz_data_long.csv_7DEF6B455F6F48C4A4E2CFCFE2A26C3F]</parent-name>
              <remote-alias>value</remote-alias>
              <ordinal>2</ordinal>
              <family>taz_data_long.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18358</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>source</remote-name>
              <remote-type>129</remote-type>
              <local-name>[source]</local-name>
              <parent-name>[taz_data_long.csv_7DEF6B455F6F48C4A4E2CFCFE2A26C3F]</parent-name>
              <remote-alias>source</remote-alias>
              <ordinal>3</ordinal>
              <family>taz_data_long.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[taz_data_long.csv_7DEF6B455F6F48C4A4E2CFCFE2A26C3F]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>4</ordinal>
              <family>taz_data_long.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SUPERD</remote-name>
              <remote-type>20</remote-type>
              <local-name>[SUPERD]</local-name>
              <parent-name>[Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7]</parent-name>
              <remote-alias>SUPERD</remote-alias>
              <ordinal>5</ordinal>
              <family>Travel Analysis Zones.shp</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>34</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TAZ1454</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TAZ1454]</local-name>
              <parent-name>[Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7]</parent-name>
              <remote-alias>TAZ1454</remote-alias>
              <ordinal>6</ordinal>
              <family>Travel Analysis Zones.shp</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1454</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Shape__Are</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Shape__Are]</local-name>
              <parent-name>[Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7]</parent-name>
              <remote-alias>Shape__Are</remote-alias>
              <ordinal>7</ordinal>
              <family>Travel Analysis Zones.shp</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Shape__Len</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Shape__Len]</local-name>
              <parent-name>[Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7]</parent-name>
              <remote-alias>Shape__Len</remote-alias>
              <ordinal>8</ordinal>
              <family>Travel Analysis Zones.shp</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>within_5mi</remote-name>
              <remote-type>20</remote-type>
              <local-name>[within_5mi]</local-name>
              <parent-name>[Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7]</parent-name>
              <remote-alias>within_5mi</remote-alias>
              <ordinal>9</ordinal>
              <family>Travel Analysis Zones.shp</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>within_3mi</remote-name>
              <remote-type>20</remote-type>
              <local-name>[within_3mi]</local-name>
              <parent-name>[Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7]</parent-name>
              <remote-alias>within_3mi</remote-alias>
              <ordinal>10</ordinal>
              <family>Travel Analysis Zones.shp</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>within_2mi</remote-name>
              <remote-type>20</remote-type>
              <local-name>[within_2mi]</local-name>
              <parent-name>[Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7]</parent-name>
              <remote-alias>within_2mi</remote-alias>
              <ordinal>11</ordinal>
              <family>Travel Analysis Zones.shp</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Geometry</remote-name>
              <remote-type>128</remote-type>
              <local-name>[Geometry]</local-name>
              <parent-name>[Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7]</parent-name>
              <remote-alias>Geometry</remote-alias>
              <ordinal>12</ordinal>
              <family>Travel Analysis Zones.shp</family>
              <local-type>spatial</local-type>
              <aggregation>Collect</aggregation>
              <approx-count>1454</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ZONE</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ZONE (taz-superdistrict-county.csv)]</local-name>
              <parent-name>[taz-superdistrict-county.csv_35F675E99FDD426CAB6A334DE6C59C51]</parent-name>
              <remote-alias>ZONE</remote-alias>
              <ordinal>13</ordinal>
              <family>taz-superdistrict-county.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1475</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SD</remote-name>
              <remote-type>20</remote-type>
              <local-name>[SD]</local-name>
              <parent-name>[taz-superdistrict-county.csv_35F675E99FDD426CAB6A334DE6C59C51]</parent-name>
              <remote-alias>SD</remote-alias>
              <ordinal>14</ordinal>
              <family>taz-superdistrict-county.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>35</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>COUNTY</remote-name>
              <remote-type>20</remote-type>
              <local-name>[COUNTY]</local-name>
              <parent-name>[taz-superdistrict-county.csv_35F675E99FDD426CAB6A334DE6C59C51]</parent-name>
              <remote-alias>COUNTY</remote-alias>
              <ordinal>15</ordinal>
              <family>taz-superdistrict-county.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SD_NAME</remote-name>
              <remote-type>129</remote-type>
              <local-name>[SD_NAME]</local-name>
              <parent-name>[taz-superdistrict-county.csv_35F675E99FDD426CAB6A334DE6C59C51]</parent-name>
              <remote-alias>SD_NAME</remote-alias>
              <ordinal>16</ordinal>
              <family>taz-superdistrict-county.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>45</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>COUNTY_NAME</remote-name>
              <remote-type>129</remote-type>
              <local-name>[COUNTY_NAME]</local-name>
              <parent-name>[taz-superdistrict-county.csv_35F675E99FDD426CAB6A334DE6C59C51]</parent-name>
              <remote-alias>COUNTY_NAME</remote-alias>
              <ordinal>17</ordinal>
              <family>taz-superdistrict-county.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SD_NUM_NAME</remote-name>
              <remote-type>129</remote-type>
              <local-name>[SD_NUM_NAME]</local-name>
              <parent-name>[taz-superdistrict-county.csv_35F675E99FDD426CAB6A334DE6C59C51]</parent-name>
              <remote-alias>SD_NUM_NAME</remote-alias>
              <ordinal>18</ordinal>
              <family>taz-superdistrict-county.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>35</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>COUNTY_NUM_NAME</remote-name>
              <remote-type>129</remote-type>
              <local-name>[COUNTY_NUM_NAME]</local-name>
              <parent-name>[taz-superdistrict-county.csv_35F675E99FDD426CAB6A334DE6C59C51]</parent-name>
              <remote-alias>COUNTY_NUM_NAME</remote-alias>
              <ordinal>19</ordinal>
              <family>taz-superdistrict-county.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='2000' show-hidden-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:value:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:value:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:10]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:11]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:12]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:13]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:14]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:15]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:2]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:3]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:4]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:5]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:6]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:7]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:8]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_878764944825671700:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_878764944826802197:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcto:sum:value:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[usr:Calculation1:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[usr:Calculation2:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:1]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:9]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:source:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;census&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BAUS main current with PBA50 equivalent inputs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;v3: aligned 2020 HHINC control totals&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;PBA50&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;v1: BASIS buildings in dev pipeline&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BAUS main current with BASIS buildings, updated control totals&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;v2: BASIS buildings, updated control totals&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;baus_main_current&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;BAUS main current with BASIS buildings in dev pipeline&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;run182&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;v0: PBA50 equivalent inputs&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:source:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Census&quot;</bucket>
            <bucket>&quot;PBA50&quot;</bucket>
            <bucket>&quot;BAUS main current with PBA50 equivalent inputs&quot;</bucket>
            <bucket>&quot;BAUS main current with BASIS buildings in dev pipeline&quot;</bucket>
          </dictionary>
        </manual-sort>
        <manual-sort column='[none:variable:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;TOTHH&quot;</bucket>
            <bucket>&quot;TOTEMP&quot;</bucket>
            <bucket>&quot;RES_UNITS&quot;</bucket>
            <bucket>&quot;HHINCQ1&quot;</bucket>
            <bucket>&quot;HHINCQ2&quot;</bucket>
            <bucket>&quot;HHINCQ3&quot;</bucket>
            <bucket>&quot;HHINCQ4&quot;</bucket>
            <bucket>&quot;AGREMPN&quot;</bucket>
            <bucket>&quot;FPSEMPN&quot;</bucket>
            <bucket>&quot;HEREMPN&quot;</bucket>
            <bucket>&quot;MWTEMPN&quot;</bucket>
            <bucket>&quot;OTHEMPN&quot;</bucket>
            <bucket>&quot;RETEMPN&quot;</bucket>
            <bucket>&quot;AGE0004&quot;</bucket>
            <bucket>&quot;AGE0519&quot;</bucket>
            <bucket>&quot;AGE2044&quot;</bucket>
            <bucket>&quot;AGE4564&quot;</bucket>
            <bucket>&quot;AGE65P&quot;</bucket>
            <bucket>&quot;COLLFTE&quot;</bucket>
            <bucket>&quot;COLLPTE&quot;</bucket>
            <bucket>&quot;EMPRES&quot;</bucket>
            <bucket>&quot;gqpop&quot;</bucket>
            <bucket>&quot;HHPOP&quot;</bucket>
            <bucket>&quot;HSENROLL&quot;</bucket>
            <bucket>&quot;MFDU&quot;</bucket>
            <bucket>&quot;OPRKCST&quot;</bucket>
            <bucket>&quot;PRKCST&quot;</bucket>
            <bucket>&quot;SFDU&quot;</bucket>
            <bucket>&quot;SHPOP62P&quot;</bucket>
            <bucket>&quot;TOTPOP&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Travel Analysis Zones.shp' id='Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7'>
            <properties context=''>
              <relation connection='ogrdirect.1c8sxet1mhg3lx173fw1q0zgbv0n' name='Travel Analysis Zones.shp' table='[Travel Analysis Zones.shp]' type='table'>
                <columns>
                  <column datatype='integer' name='SUPERD' ordinal='0' />
                  <column datatype='integer' name='TAZ1454' ordinal='1' />
                  <column datatype='real' name='Shape__Are' ordinal='2' />
                  <column datatype='real' name='Shape__Len' ordinal='3' />
                  <column datatype='integer' name='within_5mi' ordinal='4' />
                  <column datatype='integer' name='within_3mi' ordinal='5' />
                  <column datatype='integer' name='within_2mi' ordinal='6' />
                  <column datatype='spatial' name='Geometry' ordinal='7' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7' table='[Extract].[Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7]' type='table' />
            </properties>
          </object>
          <object caption='taz-superdistrict-county.csv' id='taz-superdistrict-county.csv_35F675E99FDD426CAB6A334DE6C59C51'>
            <properties context=''>
              <relation connection='textscan.1v8s6if1ujs6u516sh0g90n8mu4t' name='taz-superdistrict-county.csv' table='[taz-superdistrict-county#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='ZONE' ordinal='0' />
                  <column datatype='integer' name='SD' ordinal='1' />
                  <column datatype='integer' name='COUNTY' ordinal='2' />
                  <column datatype='string' name='SD_NAME' ordinal='3' />
                  <column datatype='string' name='COUNTY_NAME' ordinal='4' />
                  <column datatype='string' name='SD_NUM_NAME' ordinal='5' />
                  <column datatype='string' name='COUNTY_NUM_NAME' ordinal='6' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='taz-superdistrict-county.csv_35F675E99FDD426CAB6A334DE6C59C51' table='[Extract].[taz-superdistrict-county.csv_35F675E99FDD426CAB6A334DE6C59C51]' type='table' />
            </properties>
          </object>
          <object caption='taz_data_long.csv' id='taz_data_long.csv_7DEF6B455F6F48C4A4E2CFCFE2A26C3F'>
            <properties context=''>
              <relation connection='textscan.0qjh7st1rvhg341gqhhlx0kenr0m' name='taz_data_long.csv' table='[taz_data_long#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='ZONE' ordinal='0' />
                  <column datatype='string' name='variable' ordinal='1' />
                  <column datatype='real' name='value' ordinal='2' />
                  <column datatype='string' name='source' ordinal='3' />
                  <column datatype='integer' name='year' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='taz_data_long.csv_7DEF6B455F6F48C4A4E2CFCFE2A26C3F' table='[Extract].[taz_data_long.csv_7DEF6B455F6F48C4A4E2CFCFE2A26C3F]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[ZONE]' />
              <expression op='[TAZ1454]' />
            </expression>
            <first-end-point object-id='taz_data_long.csv_7DEF6B455F6F48C4A4E2CFCFE2A26C3F' />
            <second-end-point object-id='Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[ZONE]' />
              <expression op='[ZONE (taz-superdistrict-county.csv)]' />
            </expression>
            <first-end-point object-id='taz_data_long.csv_7DEF6B455F6F48C4A4E2CFCFE2A26C3F' />
            <second-end-point object-id='taz-superdistrict-county.csv_35F675E99FDD426CAB6A334DE6C59C51' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='County Chart'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>As of 2023-09-07, we have not prepared &quot;new BAUS&quot; 2023 metrics, so these exist only for Census and PBA50 (run182).</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TAZ-level data' name='federated.0kyp62f0hvmbrs19zsgps0kbnizi' />
          </datasources>
          <datasource-dependencies datasource='federated.0kyp62f0hvmbrs19zsgps0kbnizi'>
            <column caption='County Num Name' datatype='string' name='[COUNTY_NUM_NAME]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[COUNTY_NUM_NAME]' derivation='None' name='[none:COUNTY_NUM_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]'>
            <groupfilter function='level-members' level='[none:source:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]'>
            <groupfilter function='member' level='[none:variable:nk]' member='&quot;TOTHH&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]'>
            <groupfilter function='member' level='[none:year:ok]' member='2025' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NUM_NAME:nk] / [federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk])</rows>
        <cols>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]</cols>
      </table>
      <simple-id uuid='{081D57D3-BC8F-41A3-BD52-1C86D0808A36}' />
    </worksheet>
    <worksheet name='County Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='TAZ-level data' name='federated.0kyp62f0hvmbrs19zsgps0kbnizi' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0kyp62f0hvmbrs19zsgps0kbnizi'>
            <column caption='County Name' datatype='string' name='[COUNTY_NAME]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Shape' datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column-instance column='[COUNTY_NAME]' derivation='None' name='[none:COUNTY_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]'>
            <groupfilter function='member' level='[none:source:nk]' member='&quot;PBA50&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]'>
            <groupfilter function='member' level='[none:variable:nk]' member='&quot;OTHEMPN&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]'>
            <groupfilter function='member' level='[none:year:ok]' member='2020' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]' />
              <text column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NAME:nk]' />
              <text column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]' />
              <color column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]' />
              <lod column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[clct:Geometry:nk]' />
              <lod column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]' />
              <geometry column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[clct:Geometry:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NAME:nk]</run>
                <run>&gt; County&#10;&lt;</run>
                <run>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</run>
                <run>&gt;: &lt;</run>
                <run>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NAME:nk]</run>
                <run>&gt; County&#10;&lt;</run>
                <run>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</run>
                <run>&gt;: &lt;</run>
                <run>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[Latitude (generated)]</rows>
        <cols>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{018838E5-E38D-43ED-81DC-71021EA334D3}' />
    </worksheet>
    <worksheet name='Input Files'>
      <table>
        <view>
          <datasources>
            <datasource caption='TAZ-level data' name='federated.0kyp62f0hvmbrs19zsgps0kbnizi' />
          </datasources>
          <datasource-dependencies datasource='federated.0kyp62f0hvmbrs19zsgps0kbnizi'>
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' value='156' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk] / [federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok])</rows>
        <cols />
      </table>
      <simple-id uuid='{CF51FF8D-9010-4C0F-8353-071F587979AF}' />
    </worksheet>
    <worksheet name='SD Table (Census vs BAUS)'>
      <table>
        <view>
          <datasources>
            <datasource caption='TAZ-level data' name='federated.0kyp62f0hvmbrs19zsgps0kbnizi' />
          </datasources>
          <datasource-dependencies datasource='federated.0kyp62f0hvmbrs19zsgps0kbnizi'>
            <column caption='County Num Name' datatype='string' name='[COUNTY_NUM_NAME]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Sd Num Name' datatype='string' name='[SD_NUM_NAME]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:1]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[source]' ordering-type='Field' type='Difference'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[COUNTY_NUM_NAME]' derivation='None' name='[none:COUNTY_NUM_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[SD_NUM_NAME]' derivation='None' name='[none:SD_NUM_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[value]' derivation='Sum' name='[pcdf:sum:value:qk:1]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[source]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:value:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:1]&quot;</bucket>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:value:qk:1]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:source:nk]' member='&quot;Census&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;v0: PBA50 equivalent inputs&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]'>
            <groupfilter function='member' level='[none:variable:nk]' member='&quot;TOTHH&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:year:ok]' member='2020' />
              <groupfilter function='member' level='[none:year:ok]' member='2023' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' value='81' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' value='32' />
            <format attr='width' field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk]' value='216' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NUM_NAME:nk] / [federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk])</rows>
        <cols>([federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok] / ([federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk] / [federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]))</cols>
        <subtotals>
          <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NUM_NAME:nk]</column>
        </subtotals>
      </table>
      <simple-id uuid='{010B7512-0A6E-4046-99EC-A17FAC78EEDF}' />
    </worksheet>
    <worksheet name='SD Table (PBA50 vs BAUS)'>
      <layout-options>
        <caption>
          <formatted-text />
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TAZ-level data' name='federated.0kyp62f0hvmbrs19zsgps0kbnizi' />
          </datasources>
          <datasource-dependencies datasource='federated.0kyp62f0hvmbrs19zsgps0kbnizi'>
            <column caption='County Num Name' datatype='string' name='[COUNTY_NUM_NAME]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Sd Num Name' datatype='string' name='[SD_NUM_NAME]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:1]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[source]' ordering-type='Field' type='Difference'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[COUNTY_NUM_NAME]' derivation='None' name='[none:COUNTY_NUM_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[SD_NUM_NAME]' derivation='None' name='[none:SD_NUM_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[value]' derivation='Sum' name='[pcdf:sum:value:qk:1]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[source]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:value:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:1]&quot;</bucket>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:value:qk:1]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:source:nk]' member='&quot;PBA50&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;v0: PBA50 equivalent inputs&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]'>
            <groupfilter function='member' level='[none:variable:nk]' member='&quot;RES_UNITS&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' value='81' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' value='32' />
            <format attr='width' field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk]' value='216' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NUM_NAME:nk] / [federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk])</rows>
        <cols>([federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok] / ([federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk] / [federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]))</cols>
        <subtotals>
          <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NUM_NAME:nk]</column>
        </subtotals>
      </table>
      <simple-id uuid='{0563DCC6-FBCD-4BBE-9C5E-57718B92C15A}' />
    </worksheet>
    <worksheet name='SD Table (compare two or more)'>
      <layout-options>
        <caption>
          <formatted-text />
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TAZ-level data' name='federated.0kyp62f0hvmbrs19zsgps0kbnizi' />
          </datasources>
          <datasource-dependencies datasource='federated.0kyp62f0hvmbrs19zsgps0kbnizi'>
            <column caption='County Num Name' datatype='string' name='[COUNTY_NUM_NAME]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Sd Num Name' datatype='string' name='[SD_NUM_NAME]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:9]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[source]' ordering-type='Field' type='Difference'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[COUNTY_NUM_NAME]' derivation='None' name='[none:COUNTY_NUM_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[SD_NUM_NAME]' derivation='None' name='[none:SD_NUM_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[value]' derivation='Sum' name='[pcdf:sum:value:qk:1]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[source]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[value]' derivation='Sum' name='[pcdf:sum:value:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[source]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:9]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:value:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:9]&quot;</bucket>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:value:qk:1]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:source:nk]' member='&quot;Census&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;v2: BASIS buildings, updated control totals&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;v3: aligned 2020 HHINC control totals&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]'>
            <groupfilter function='member' level='[none:variable:nk]' member='&quot;HHINCQ4&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' value='81' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' value='32' />
            <format attr='width' field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk]' value='216' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NUM_NAME:nk] / [federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk])</rows>
        <cols>([federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok] / ([federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk] / [federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]))</cols>
        <subtotals>
          <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NUM_NAME:nk]</column>
        </subtotals>
      </table>
      <simple-id uuid='{B5C822A8-5E71-470C-9AFB-63E387C7A03B}' />
    </worksheet>
    <worksheet name='Superdistrict Chart'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>As of 2023-09-07, we have not prepared &quot;new BAUS&quot; 2023 metrics, so these exist only for Census and PBA50 (run182).</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TAZ-level data' name='federated.0kyp62f0hvmbrs19zsgps0kbnizi' />
          </datasources>
          <datasource-dependencies datasource='federated.0kyp62f0hvmbrs19zsgps0kbnizi'>
            <column caption='County Num Name' datatype='string' name='[COUNTY_NUM_NAME]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Sd Num Name' datatype='string' name='[SD_NUM_NAME]' role='dimension' type='nominal' />
            <column-instance column='[COUNTY_NUM_NAME]' derivation='None' name='[none:COUNTY_NUM_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[SD_NUM_NAME]' derivation='None' name='[none:SD_NUM_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]'>
            <groupfilter function='level-members' level='[none:source:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]'>
            <groupfilter function='member' level='[none:variable:nk]' member='&quot;TOTHH&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]'>
            <groupfilter function='member' level='[none:year:ok]' member='2025' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NUM_NAME:nk] / ([federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk] / [federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]))</rows>
        <cols>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]</cols>
      </table>
      <simple-id uuid='{F4D0E8B4-0F53-4422-A716-462EE03712FA}' />
    </worksheet>
    <worksheet name='Superdistrict Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='TAZ-level data' name='federated.0kyp62f0hvmbrs19zsgps0kbnizi' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0kyp62f0hvmbrs19zsgps0kbnizi'>
            <column caption='Shape' datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column aggregation='Sum' caption='SD1' datatype='integer' name='[SD]' role='dimension' type='ordinal' />
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column-instance column='[SD]' derivation='None' name='[none:SD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]'>
            <groupfilter function='member' level='[none:source:nk]' member='&quot;PBA50&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]'>
            <groupfilter function='member' level='[none:variable:nk]' member='&quot;TOTHH&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]'>
            <groupfilter function='member' level='[none:year:ok]' member='2020' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]' />
              <text column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD:ok]' />
              <text column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]' />
              <color column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]' />
              <lod column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[clct:Geometry:nk]' />
              <lod column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]' />
              <geometry column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[clct:Geometry:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run>SD: &lt;</run>
                <run>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD:ok]</run>
                <run>&gt;&#10;&lt;</run>
                <run>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</run>
                <run>&gt;: &lt;</run>
                <run>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run>SD: &lt;</run>
                <run>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD:ok]</run>
                <run>&gt;&#10;&lt;</run>
                <run>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</run>
                <run>&gt;: &lt;</run>
                <run>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[Latitude (generated)]</rows>
        <cols>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{7982E75D-E929-4B44-9DCF-D01BE5CD878F}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Input Files'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NAME:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_761108404206759937:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Path:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD:ok]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NAME:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:county_name:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ED5DA773-1332-4A2B-A83F-2C97D74C6DB2}' />
    </window>
    <window class='worksheet' name='SD Table (PBA50 vs BAUS)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]' show-all='false' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NAME (superdistrict-county.csv):nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NUM_NAME:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_761108404205641728:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_761108404206759937:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3B8B2B57-7262-48BB-AE63-3FB524760644}' />
    </window>
    <window class='worksheet' name='SD Table (Census vs BAUS)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]' show-all='false' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NAME (superdistrict-county.csv):nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NUM_NAME:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_761108404205641728:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_761108404206759937:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{337C3C97-20B1-4D5E-AB7C-1CC9FEE2D5DD}' />
    </window>
    <window class='worksheet' maximized='true' name='SD Table (compare two or more)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' type='filter' />
            <card mode='radiolist' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]' show-all='false' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NAME (superdistrict-county.csv):nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NUM_NAME:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_761108404205641728:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_761108404206759937:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{05D51691-180F-48AB-8727-B407647822ED}' />
    </window>
    <window class='worksheet' name='Superdistrict Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]' show-all='false' type='filter' />
            <card param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' type='filter' />
            <card mode='radiolist' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]' show-all='false' type='filter' values='relevant' />
            <card pane-specification-id='0' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NAME (superdistrict-county.csv):nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NUM_NAME:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_761108404205641728:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_761108404206759937:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{495ED3E9-0896-4DED-904F-A6040D347F8A}' />
    </window>
    <window class='worksheet' name='County Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]' show-all='false' type='filter' />
            <card param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' type='filter' />
            <card mode='radiolist' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]' show-all='false' type='filter' values='relevant' />
            <card pane-specification-id='0' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NAME (superdistrict-county.csv):nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NUM_NAME:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_761108404205641728:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_761108404206759937:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7CE9FDEB-44C4-428E-8D79-9DF37A671F72}' />
    </window>
    <window class='worksheet' name='Superdistrict Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card mode='radiolist' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]' show-all='false' type='filter' values='relevant' />
            <card mode='radiolist' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]' show-all='false' type='filter' values='relevant' />
            <card mode='radiolist' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' show-all='false' type='filter' values='relevant' />
            <card pane-specification-id='0' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[clct:Geometry:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_761108404205641728:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_761108404206759937:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Path:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:district:ok]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C3CC919E-9911-4977-BBF7-0058454EA72A}' />
    </window>
    <window class='worksheet' name='County Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card mode='radiolist' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]' show-all='false' type='filter' values='relevant' />
            <card mode='radiolist' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]' show-all='false' type='filter' values='relevant' />
            <card mode='radiolist' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' show-all='false' type='filter' values='relevant' />
            <card pane-specification-id='0' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[clct:Geometry:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_761108404205641728:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_761108404206759937:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Path:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:district:ok]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DC76B74E-D277-4331-9936-139521787848}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='County Chart' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9V49lWXqm92xztjnehveREemzbFtySM5wQAIj3QjQj9Ct7nSvH6ELXQkQ
      IA0GIEagSIEUKZIzzTZV1VWVmZUmfJw43vvtjS4iu7qrK7tMZuSJjMzzAAFknDxnvytWxLfX
      Xt/61ruEMAxDZsx4SxEvuwEzZlwmswC4QBzHuewmzPiezALgAhmPx5fdhBnfk1kAzHirmQXA
      jLeaWQDMeKuZBcCMt5pZAMx4q5F/8w/HcWZZjJdk2v0XhiGCILzRmq9aT5itBF8ch5UyT4aD
      qekFYYAoCMD0/iCDIEAUp/fg8Kr15K+/5HP0+S+RVn/ARk7hyYNPGLsR7ty7gx6RLlQ88H0e
      fPorhPg8hWhAtTVgdfsGGdGiNA7ZLqj88tM9Ftc3idg92obAnZvbz37prx9Dy+JnxePLbsaM
      78FzAkBie2udY/f8OzUSwRQUnFGTf/iXn3Pjgx/QPKsiReP8+P07L6ceBGTmVzAHA3qmQD6b
      YjQcM3aG2H6AKcsIiRyFbIqz4xZZVWZseyS1yMvpzpjxjOeMLT61WoNmo0EQhOiJFBHHpNps
      kZ/PM+gNWdy4zlw6diENKB4+gVgGRZSIxuL4rkX59JDi0QljNc9aTuPp033CMCQIQ17Tm/+M
      K8pzRgBQMqtsChIIkEylUWJZUnGVQWFCLB5DEmUg/tLigiTxzgc/JpVK0SgdcVausr61RS79
      R2Tj0Bi6NGp1ltauIZhtOqbIivLcJs+Y8ULMJsEXyHG1wrExvUzQtCekl6H5qvWeGwDdVp1A
      0sllU1PML1x9ut0u2Wx2anqu6yLL8lTTkq7rEolMbw72qvWe+zxROjtjYX0H1zax3QDPNolE
      E0iBg2H7pFNx+r0+ghCgRFNY4xGpTJrxsI8WS2KOh8SSGdQLzhq99nR68C+/mpqcHDLNDOgz
      zZBpTsRetd5zA2A86NIbjKme7rG4vsXTTz/G1AosJwVCUabbUAmUOCoTmBg8fXzEjRtrjAyB
      lNZiYEcI613u3d79To0Iw5An9z9h4Kv8+IN7CECnfMxBrU0ys4DZPsEJdO7+4ANqjz8lsXkX
      v3VEqWOzc22No/0DEnNr3Nxa/gaVgF5vSCaT/sqrjtWl2RZZWfnq6+64j62licvQ6/ZIZzPf
      /rfm+dCb3jrAZYzO09Z81XrPDYC1a7dYXVvlrATzSYWDeJ6UqpLOZ4hpMubEptrqkM/FiOpx
      kpqA5YkYow6JaI5xv02qsPSt4p7RoT6S8a0+SiLLiufR7vZIZdJ4XsjK+jrdVu98o0kkihg6
      BGqMfq2OZJtIisZ4PGL39ns0qkUIXD75xS8w5RQrWZlKq8/S0hLJdJ5ht4cQ+gwGQ6IRcAOP
      R0+OuPv+HUzD42f/38dohXVUp0/fhIWYzVlQ4M8/uEG/36dTL9LqjNnaWefgrEE6UyAq+6iy
      SG5hDS0yqyq5ilzqJDgMfB5//isSS7fpN47xfZFbd24SiURonR7SC2XWllcpHj5GCQLCqE6x
      0kEI4c7NbZxBk7YdQdNUHNvh3s4if//PHzO/uIwkOCgy+CgIksx4bBNTZFJ6SNNRifp9Gu0W
      2ZVriKZFsVRndXsDXZbQCNCjAfUgx82lNI8fPSGqq8zHJOqmjyVHcQcDQneE6/ns3nyXmCrS
      fnrI/Ef3L6s7Z7wAl54FGvX7RFMpzEEHM1RJRETkWJTAcZAUBUkQaFSK2KgUcikURcNzLDzX
      pjMwWV6ap12vEs/NE1Mj9Nt1DD9CJiZxXCySn9/CNfsk0jkUSUCJgOEIyKFFd2SRzaQREBn2
      mqAmSUZVREKkiEil1mFtZRHDMJFEgYgkYPSaHPQcrm+sY4/amL5MOhFFlgSaT45Z+fThZXbn
      jO/JpQfAm0S30SA7xQJbz/eRJGmqz+We5yPL00tuvGq92arSBRKIIqauTk3P8zxkebq/wmlr
      vmq91yQAQnzPIxQkZOn8Dhr4LoZpo2o6EUnAcX0URcY2TZAiRCQRBAHLNFE0HVkEPxSQxK/e
      D8MgIAAkUcR/dsd8Ub7t863SMf/X//m/vPD1Z0yfSw2AMPAJECEMqJYOMMMs22t5BEmiVTyh
      ZroEgcSNhRgfHXf54ztLfPJFifm5OXTRwfUdeiOPheVVFqMuh52QrcUsonCeOnZMg9FgxCgU
      WC1kOTo5Y7mQIZLMgOcgR1RC38UPz5/vHT9EVxXa7TaZTBrHcVE1DRGwLItStcrm2ip+KCBL
      IoIgfPk142pyqQHg2wNO6hZCYLO9uUmxOMAxDOREAgiYTCYkU3kqnSHzMQlDjJNWwXRcdA3S
      uTk6nUM8/3wa065XGLTqxHSRuXiEnqcguxBEAh4+/IKxA1HPRRi1qXRMYrEE7rDLyIWMNKEn
      5PmTH96l2WrQa1axfQMtfZt5tc9+rY8oS/zjX/8numKed6+vE1UjzK1tosuzALiqXGryWtbS
      mM1D4vkl9h8/4OneHhPHJwQEQUQUBBzbYdDv4nsTzoo1bD/ANgwQRWzTIBQEDMMARDzXRBAl
      3EmfJ8clRFH48st17fPriiJSROP6jRtEFQnXcfB8n/z8IqNuhwAQRZFINMntOzeQfR8IsWwb
      QRDJzC1zc2eTuaRGywzQZJHhoIcxGjKxvcvszhkvwFudBQp8j6df3EeIF7i5vfbS13v62Uf8
      8j/9rxfQsu9GSIgw5bXZaWu+ar23OgAumlkx3NXTmwXABVKv18Cb3mOQ7/uIkjjVO/LLZtJe
      N73XIw0ahrRrRdqWzI2tFQCsYYdH+6esXrvBXFKm1hyzuJDldP8xQmKeuaSGHJHYe7rPyvYN
      0iqMPZH4722X9F0b0w2IR3XG4wnx+MvtZHMNg0DTUJ9To26Mxxw9evBS158xXS45CzTGRCd0
      DAQtCd0a/V6caDrFoDfmxrt3OXx8gJyNctYxyEVtmk6Mm3GVbruJYYxJL24gE4Az4f4XZ2xu
      bhNXBVRZYGJamCMLOyIz6dZ4dNrh7vocSjpNtVxmfnULu1NhFOrMxwQqA5db19YBGA6HJGIR
      RlZA4/SU2NwKacXl848esfWjezROSuzcvE1UectKvt8wLjULJEgS1eIhjVYfdzIktbBEKp0i
      AuCb3P/sIWoswWmpyKByRk/IsZ7y2TsqEQKr125iNE+otvoA5JfW6ddLnFVKDDs12sMJtuMT
      WGN6jszaQhZzOGHUa5AoLNGoFBl5Cs6kR7vdwpiY/OZ5sFQpg9On3GwRSHl6jRKnlSbXr61j
      TAbYZpe9g/ol9dyMi+JSA0CUNCTHpLC8RKl0SuW0RL/XxwVUPYpEgB+E5JY2+Xf/7qcYrTqV
      Zg9N09D1KKNOg6HpomkaSCqD+jGhFkcLXQ4rHeLRKLF4lHgiid1v0BlZ6IkEeixJKhElnUoz
      apeod4ZEo1ECz6NcLOIB2WiET784JhqVKR/vIWgJdMnnqNJERkBWYyRiMr3egF6vx2widTV5
      qyfBYeCx//gLooU1VuezQMh4bPzePMFhNIJEQvnW65WKp7RrlVfW3t/nUpzhghBBnGIa9BXr
      fRkAM2vEl2c8HhOPv7xbxndl2hmZy9B81Xpv9Qhw0RyUS9zvd6amFwThuUveFAeBIAgRX9Ed
      Oalq/MXOja+8dgmb4l2++PQhQw9++OH77D34CMNX/6A14kf/+k9s3/splS9+SWLrHpvzGQDa
      7Tb5fP4bxQPf4/Nf/xKic8zHodYasry1S0ayOBsF7M5p/PzTfZY3thCNNm1T4N6t3a9VfL4u
      jGybj8uly27GlWUuFv9aALxqnhMAMhtba9R7JqIAsaiOaYjYgzp/8//+M3d+/Ee0yjUkPcZP
      P7xHNpel16rioiE4Y/72P/89ieWb2J0y27fu8Ojjn6MtXKOg+hhOyL0f/pjYb1SDkNzC2rk1
      ohEQT0QxDYuJ2ccPAoyehK8myKaTVAdt5qISY8cjNbNGnHFBfD0LFFh8+tnj86xGGCJFzjM1
      tXaHlY1VJqMJy5s3WMgmzi+gJph0qqRzOUxzRCq3ghjA4uI8EQkSmUVW5jIEgoQmC3jBV+WK
      h0+Qknl0RWdpYR7bHFMpHnJ2fMJILXB7c479vT1838f1/dfWGHfG1eTrI4Cg8t4H7xAKEoIA
      cwvLZOZW0DUZ07RRVQ1BFCE8D4C11TVYWUEQJcIwxFqyiCgqQugRIJNLZwklBVlYwvUFYr+T
      TBEkiXd/8FOSiQTNisX+UZHNnWvM5/+EdDykPXQplc5Y29xFMNq0LZH4bOFpxgUymwRfIKe1
      KiXbnJpe4D+zDZzioOj7AZL0apaPohGFD5ZXv/LapTjDzXgxkqrGv1n8dj+ki+JtqAZ91cwC
      4CJpd+Ef/nVqctO2KZyK5l/+KaSSr+76v8drEQBhGPDos48ZeCo//eG7CED77JCDRpdEah6r
      fYITaNz90YdUH35CYvsd/OYh5Z7LztYKR4eHxHMr3N75pk0tz7dGtK0OjZbI2mrmK6+7wy6W
      niUR+R7WiH4A48mLdMEL8UZaIwbBt7/nArnUAHCNDrW+SGD30VIF0p5Hq9sjnUnj+1CYn8cY
      2bieC3IUKXQIY2mG9Rqy6yJFJEaTCddvf0CjVoTA4ef//M8YcobNBZ1qs8/i0iKpTIFBu4uA
      T6/XJxoBL3D59P5TPvjJB1iGxz/+7c/QFrZI+GN6VshS3P3SGrHT6dKqntDujtm6ts5BqUUq
      nSMqe2gRidziBvrMGvFKcqkBIOtphk9+QWr1HQaVPfq+xJ21Vc7zPAKSrLC7u8LBoxGRECpn
      Z9RaXUIfbu1uIPYajA2HiXFKEArg25iBzFw2hWkbZFI6nuNSr5ax7JC4KpOJutTGKjF/RC6j
      MxhaiK5NIMfJJKJoUpw8AdFYgGGeD8WO4xCNpnmvkKNu+iTzBbBsxuMebTcgkVlARsJyZ3uC
      rxqXGgCCILF1/V3UWIx8dAc7jHy5MJFbXqUQiSAKAsvLy7gopJMxtreu43kOgeciSCob+QyD
      bgc9mYGIzA8/fBc7kEhoEqVKiVRuBTwDPZ4kIgrIMiRdASkskDFtkokEAiLzizmIxIhpEQRA
      kkUWOudOz9vbWwiigCzCXL+FOYat3RXcyQA7lGbGuFeYWRr0Auk2m2Tlb68avSg833tmjTi9
      2cArd4ZLJuB3rBBnadArhE/IMHSmpucFHrIgTTUT5IUecvgKJ6qDDrFUFmlK9ouvSQCEuLZF
      ICpfnirjuxa9wZhYMoUeETEsl6iuMh4OQNbQFAlREBgMhsQSKRQJ3FA4t0z83SsHPl4QEpHl
      l76bfNvn2+VTfj6zRnxp/rv/8X8mu7j67W+8AC7XGtF38ZEJA49G4wzTS7G5kkWMRGiXS/QC
      gVKtxc58jE+LfX5yc4EHe3WWFgpEAhPHsxnbEvNEmNNs9us2m0sFIpKAKIBtGYwHE8YILGUS
      HJyUWZvLoqQyOKaBFo0TOAZuKKHJYLohqUSMZrNJJpPCmBjEkmlkAYaDPtVWh82VRdxQQo2c
      B6AgSbP6pCvM5W6KdyecVEcIoc/25hrF4gDPcZEjEQh9Ot0RqWSeSrNHSvKZiAlyeo3hxCCn
      C+Tmlujv72M6edBgPOzzZNBF1UTmf88a8elBE9MJGTTbCEaX1shHiSh4xpiJ45OSTHpk+OMP
      79DutBh0GiB5CKNt5iJ9Tvs2BB7/8nf/N0M5x+3tFXRFZmF9C21mjXhluVxrRDWF0zkjObfE
      /uOH7B/sM7acc3tCSULk/LHDtC1iUYlqqc7EdnFtB1GSMCcj/BAc2wFBwjFHIEUIzCFPTyrI
      koQsS8iShGsZuH6AJMtEFJ2trS1imoJtTrAcl1x+jkm/TwDIsowSS3FtZwslDJFk8fzRS5DI
      zi1ybXON+VSUriOgzqwRrzRvdRYo8D2ePrqPlFjg+uY3HbD33di7/wmf/Of/7QJa9t24hEMi
      p6L5H/6H/4nM/PnvY+YMd4WYWSNePb3XJAv0ZuDYFuXT46npvcrS5MvSnF9aIaJMby3ltQiA
      MAxplk/oWBI3d9YRAHPQ4tFBkeXNXRbSCuX6iJWlHMd7jxETc8yldGRJYG//kJWt62R1gZEr
      ktB/23lhEOA5NqYfkoxFGY1GxKJRBFF64dS5Mx4TRKNoz7NGnExm1ogvSTqbe3sCwLdGGKFO
      4ExQE1nEQYVBt0c0k2bYm7B96wal4zMUQ6PeM5lPeLQdnZsJnX6nhWlNSM6tokgCOGPuPyiy
      vrFJQhPQIiITy8EaW9iSzLhd4clZj3sb80RSScpnZRZWtzA7ZcahznxcoDrwubO7AUCv3ycd
      VxiYPrXjE+LzK6QVh/ufPGH7x+9QPzpj59Yd4uprcQ+Z8YJcrjWiHKF6dkC7O8YY9sgurZLO
      ZlAEAQKbo8NjFC3K6dkpndIpnTDDVl7m4PiMEFjeukEwrFFpnFuRzK9uMm7XKNWqDDt1OsMJ
      tu3jWyNGgcbGUh5zOGE8aJNbWqPVKGERJbCHDPp9TMP40uGtWqsSOn2q7Q6SvsiwXaVU73F7
      dxNjNMBzBuwfzqwRrzqXa40oqyiBR2F5gVq1xNnxKb1uDycM0WJRgmfpzfn1Xf7yL/8Mp9ek
      XG+jx+JEY3Em3SbdkUUsFgdZY1A/Bj1JTAw4qQ9IxmPEkzFS6QzOoElvbBNNpYjFUiRiOtl0
      lkGzSLU1RNd1RODs5AQPyCc0Pn9cJB6PUDp6ghxNE4+EHFbbqLKMrMZIJ5SZNeIV563OAoWB
      z+HeY2L5NZYKKSDEMEyi0ejvvMthMoFY7NufS8tnRbrN6Y0Kb6I14u7tu2j6b/t/amnQmTXi
      yzOzRrx6em/1CHDR7JXO+KTTnJreq7QpfF00X7Xe11MYocPDzx4ycEJ+/MMPefL5L7FC/bnW
      iL1mk/jcHC86QAW+x2cf/4JAz7OQEGh0Riys75CTbYojnxsLOj/79QGrm1swbtAyBN67e/O1
      tUacOA4P6rXLbsaM78FzjLEUcukYk56HKEAqmcQcepj9Kn/1N3/PO3/8Z3QrDURdJTLqEtu8
      zvDoc8p2gv/+v/23329WHYTkl9YxBwP6hktEieC5HuX+AIKASXeMLSqkkwkaww7LSZmR45LW
      ppcnnvFm8/UAcAw6ExfftfCCkCAMwbZodLps39jFMSxWtm+C00dJK4zxCLUseVnE5/unlYqH
      T1jZfQ/FGbG8WODgtEGnfIjtCqR+/FN+fE/i6d4emiJiCiEJYbb9cMbF8fU5QBjiui6I55WU
      gefiP9to4noekiw/24IXAiF+ECKEAQgSkix9r0KpMAiYGAbxeJx2rchptcO1G7vgiqRiId2x
      R6V4zMr2DQSjQ9sUuba+OPXMx3fl06ND/uPBk8tuxozvwWwSfIGc1WrUPXdqekHgn1sjTvOY
      1MBHEqeYBXrFes8NgMmgTWPgMJ9LokfjvKZzzteOWTXo1dN7bhbo8LjG2tYa1bMii2tr1Gtt
      VlcWGY+HiLJMpzNkfWPta/tv33paHfh//nlqcvIlbAiYtuar1vt6AAQmaixPJpWiUysz7rcp
      HT5kZFh4ssxaQuRk7zG+nub6Uvo5l/z+hGHAg1//iqGn8sc/fh8BaJ0ecNjqEUsUsNonuKHO
      3R/9gPKDX5Hcfo+gdUCl77OzuczB4RHx7BJ3r298g8ofsEY029SaIhvrX71zO4M2VjRP8vtY
      IwYh2NNzhXgjrRGnrPf1AJCSCM4Rnz4ckI/rBL5PMpND0zTyS4sEnRLpbBblAu7+rtGm0oXA
      HhLPzJP/HWvEIIRkKo3nefiBD5KIHNqIiTlGjRpqECJJAoPxhFt3PqBeK0Jg809/93cYco7d
      1QS1Vp+FxUXS2Tn6rQ4CHp1O99wa0Xf45a+/4Cd/+hMc0+Vv/uofiS7tkBFN+iYsJT1Kz6wR
      W602zfIxne6YjWvrHFZaJJPZL60RC0tb6MpsNLyKPKeWV+D6nfe/8srS2rXffhPfYX5952LE
      9Syj2r+S2XyPdvERLT/CveXl81SqIJHNZ8gnU3xhtJFDgfLZGfV2n9AP2d1aIek2sRyf4+N9
      xIgGvougJVmbm8N2RsRjKoEfUC6e4AYySS1CVnWoGCoxb8LKYobRyEb0XbTkHAuFNKqQYY6A
      aDxk0FeBczOoaDzDe/N56qaHnkgihAHjfoemc26NKIUShu0yvRnAjIvg0rNAtmkS0TRcy8BD
      RpUExEiE0Pe/tBwZD/t4SMR0DUmWCTyPIPAwLI9kMo4xGqJE4yjy+UZ5N5TQIwL1ehU9tUhE
      cFC1KJIoIIng+gJi6GI4HlFdRwgFLGsMkoqmyAiAIAoMRwbpVALXdREEAUkAq9+i5kZYyWfx
      7QluKKIrEURRoP30kPmP7l9md874nlx6ALxJdFstspo+NT3vWaHYNJ/LPc9HlqeXBn3VerPt
      TBeI53t0htM7J/hSAsD3kadYDfqq9V6TAAixzQm+qBJVz3O+rmXQaHdJ5+aIayLDsUMyodNr
      N0GJE9fOHztarTapXAFdBscXUH6vYC/wPdwgRI1EcBwH5SX2m37b5zvVs5k14hXjUgMg8Gw8
      IoS+S6dTx3DirC2mkDSNbq2Gq6gcHB5xrRDlQXnIj27M8bTYYW1JwOiNsR0LW9CRdQtdsXhS
      GrO5soAqgyQKWKbJZDhhIojMxVX2T2tsLeSIpNIYwyHxVAbPHGKHEeIKDK2AuVyaer1GJp1m
      0B+QLsyjiCHtVpNmb8T6UgEnjKCrErIgIsiR17Y6dca3c7kB4NsUy3UEYHtzmWJx8Nv/DF1q
      1S6pVIFSo43quYyEFHOxFu3egHxMorC0ysn+HqNogrwCnudydHBARP09a0TZ57jXJQwDhu0u
      gjWgb0uIvT6B7WA4DknJohukKOTSdHtdxr0OSlTgrBIlL3dp2yJB6PPzf/oHTDXH7voiakRm
      aX1rFgBXmMu1RlQSeIMq6YVza8TDowOGEwsfkOTzwzJczyUQRBYXMrQqNQYTi8APkCIRzNEA
      xw8JvAAEGWvUBVlFsMfsndZQIhEiSgRFUXCMEabjIysKihZlbXWFeFTHnPQZGTbpbB5rNCIA
      FEVBTaRZXVtBE0HRFLqtJggyufkF1laWWUjHGXoSyswa8UrzVmeBAt9j79EDIqlFrq0vvvT1
      9h98yud/+39cQMu+G2+qNeI09d7qALhoZsVwV09vFgAXSK1awTamd0xqEDw7KX6KBH6AOMUi
      yFet91qkQcMwpHZ2SMeUuHNjCwGY9Bo8OSqxsHaN5axCsTpkfSXP4dNza8T5lI4kCewfHLG8
      eZ18VGDgSKR+x74k8D1c28YKIBWPMRgMiEV1RFl54RJvezgkjMefa41oGgZHjx6+YC/MuAwu
      2RpxyDjQCe0Jiew8w2KJYbeHnkkzHkxY2dqkVaujWgrtvsliBjq2yo2VOMNeE9MxiWUX0RUJ
      3BEPHp6yurpOUhfRIyIT28OeWNiSxLBZZr8y4N7GAnIixtlZmcXVLcx2iTFR5uMC9VHAnd1N
      ADrdLtmkSm/iUzs+Jja3TEZxefjZHts/ukf9+IztG3dI6tN7HJhx8VyuNWJEpV7cpzMwGHRa
      FFbXSf3GGjH0abU6yBGFYumUXrlI20uys5zg+PiUAFhc20H1B5SqLQAW1rYwek0q9TqDboPu
      6DfWiGMMIcr6Yg5zOGYy6jK/tkm3VcGVkoTOmPF4hDE2+M3xb/V6ncDqUet2UWLLTHoNKu0B
      t3Y3GY8GuPaAg6PGpfXdjIvhcq0RJQVdEplfXqDZqHFycPylNaIei2KOhsiKxvLWTf79X/4Z
      4bhHqVInlkwRTySxhh2a3TGpdApknVH9BDmeIRmBctsgnUyQTCfIZHP4ozZDyyeezRBPZEhE
      NbLZHJ3KAdX2CF3TkWWJs6NjPGA+HeXBfpV0QuHs6AlqIkdSFTludImrGoqeJJ/RZtaIV5y3
      ehIcBj5np8fomQXmMgkgxLJsNE37nXe5mCbo3+FRp1w6Y9hpv7L2/j6XMgmesuar1ptZI14g
      M2vEq6f3/BEgDPH84LwMNQzxggBZEp/Z1H17NIZBAII4zfObXwuenBX5eXN6znCXYo47Zc1X
      rfecLFBI5eyYYnPIT3/wHv1Whb1ii/fe3+HwaZe4OsZVc+S0gFKjiyIKFNY2GdZOUbPLqN6A
      J0+P2bl3j2qxzO6tW0SV50dw4Pu0u12M4YhIPMpSPkup2kaXYBwErKcj1P0sS6kIJ8fHyJLA
      3NI6auT13H5oui777dZlN2PG9+BrAeCOm3z+6AjXD7D9gNPjQ3pdg+ZgBfDo9yc0e2389Xmy
      2RgyCpWjQxqdNsmJTVyJc31zhdFwwGTU47TS4Nbm0vPVg4CnD3+NoBfIGl2qxVOyS9cwBk2C
      MMTUM5wcfoaxsAp+QFyOYPgeamRmjTjjYvhaAETi8/w3/+EvKFfKqJJAfuUa73yYpdzsk0xF
      6Tt9MrksyXQGXY8QQSKUZFzHJJbKIRpdis2AhcUcih4jEVX/sLogsL5zm/XV1fNAECVsq0+n
      WkdTBM70FJokMp5MEI0mVUfiR0urr7I/ZrxlvNVZoItmZo149ZgFwAUyK4a7enqvRS3QG4Pt
      QLE8NTnR90EUmWa6TfR9mGIa9FXrvSYBENJrVhkHGqsLOQDsUZenJ2XWt2/Qrx5iCTF2t9cY
      dtro6RzuqM3RWYOt69fplk9IL22Sin7/ybHv21iW8J3OAPtW+kP4xacvf53vyHRXAC5H81Xr
      XW4xnD3BEs6L4SrNHkIQMtRl9GSSfmfIxu4OxYNDYnoE1R4xcDzq5X0i1k0iZpft6zfwBnUC
      Pc3ZyTF3b9+gXTvDlhLkdDgqt1hbXSKiqLi2Tb/XJZ3JocohE9Ok3hqytpqg3hDQxAFKegHJ
      HtAce0QnNYpCgX9zd5vSWYl0QqPc6LO9scTpWYn84gYRwUUSBFQ9NtsWeUW53BFAFKicHCGI
      EVRNR/U8pHj8vFGBxaOHD5mbX6N5+hBFz5E2O5TaPsrkkFvreR5/9ivkRI7NtQ1UnbYAAB0o
      SURBVE3scR+cIb9+sIcWS9PPRUnFFEqlEpm5RXr1JgIhllkGUUSTA+rlY0TtFsFkwv5ZmfSC
      QVKR0GSZaDbHRmoNgNFojDEekI9GqNTqSOlFysVjZClEj0jMr+0SVWYBcBW51BUlSdYR7RGF
      1TUCa0DTDggHQ1xAiWV4/4MPuba2gK7reL7PcOjwwQ/fZ3Mpj+F4ICqsLs5x9PRzJD0NEZ2F
      XIpcLosmBhydVtD0GGcHT/BEmVg8xmJex5dTCGFIIpVBUxQS6Rz5bJxsNkM2XyCdThFNJjg7
      OAIgHo+RzuRIptKoEpwePkVPZMGeUG4NsMZDTGPEwLAvsztnvABvdBbIMkYEok5Uu7iBzjfH
      WHKU2HNWo7tHJ2T3Ty9M69sInpUJTHPsCcIQcYqT7let90YHwLSZpUGvnt5rkgV6Mxh1mjz9
      L38zNb0gCBAFcao2DW9aOfTrEQBhSK10RKjPsVRIAjBqVXlyWiW/uMrmnM7T4oAbW3M8+uIx
      kUSB+bSOKIYcHhVZ3NhlMSHQsWVyid/W8nuOhWXaWKFAPp2k0+kQ01RkPY78DX36h8qaO50O
      uVzuD37OGA148vN/fPF+mDF1LjUAPLPPwNEInDHZ+QK1qsFY8lEyaYzxhHgmjTkZU6+OsR0b
      29AY2gK762mMQRM3cJH1FKm4Bt6ALx4es7C4RCoqE1clJi74ho0lCfRrRYptg3sbS4jRESfF
      GgsrGxitMyZEWYgLtC2Ju9e36PV7mMMu5Vqd1d33yCg2D77Yw1eiGIMWI18jm9SJRmTUZBp1
      im7JMy6Wy80CKTFapSeMrBDlWYVn/Dd7ggWJVCpF6HuUyqf0KkVqpsKd6xuUT48JgOz8GisF
      nZPTKgDLmzv4kwGtTptBp8FgPMGyPXxrgq9nWFvIYQ5HWKbB+s4u40ELKZpHDm0832c8GOED
      o9GQoelw951thu0J3WqN1Zt3SekCjx/tMej3MYZDKq0O8uyctCvNpY4AgiSTSqTJLOU4ePw5
      3XFAPKGSzKWJJ2M8Pi4yt7zB4nyebCZBu9Xn7LRCKr9MKqEQ2mOKpSbr125ARMBoPSFdWEN2
      urRHLiurGUQfkAU61TNMMc78fBpBlZE1FTk/x/2P/iuGUmBhd4F4QkEE5ubmkSUZSdLIZiAZ
      XeLBo8fkFle4eStk6KmsLGVpjAMkQWA46CGL0swa8QryVmeBwjBg0OsS0RPE9G8o2/6OlE4O
      6Z48vYCWfTf8ZxPEaaZB34pzgme8GLM06NXTez2yQG8Io0GfJ599Mj3BMJxqJeilaL5ivdci
      AMIw5ODx5zQHAT/56QdIQKd0xEG9SyyZ58ZSjE8OOvzo9jIff75HPFOgEJcJ8DmrNFla32El
      EVI2Iqzkfpu+dKwJ4+GESSiyOp+nXK6QiUeJJDO86Kmm41oNr1AgLX+963zfxxiPXrAXZlwG
      l5sGNTrUhhKhM2Jje5egWMXo9lAzaTzXxQdEQaDaHJCJClh+iBAGxOIxPHeEpEYIQ5FYVINw
      zOHTfRrJNOmYTDYqM/QjiLaHI8P9Tz+mNQ64vVxAmHQ5LLWZW1hm0i4zCVTmNJdemORH79wA
      4Oj4mK2lBMcdh/peES2fI6s6lE5bbH0Y8tHHn7Lzzp+wuZi8zC6c8ZJcbhpUSzOoPAI1xeMv
      viCVzqLEouc14EKE1dVVHGtCrXpGr1mh2JiwvL5Gr1HDB2Q1xupynkqlDkAmP4cceIxHfSq1
      Grbj4HoBoWsjaAmyqRiuZeEjcOvuPfBNIloKRQxJpNKMul1MyyIAHHNMrVrBcFxi6TlkXAw3
      ZGkuT7/XJ5VJ0Gn1sG0b27ZnznBXlEufBI+HQ/REglblDNuXKeQzKNHzPQLVRodMfh5FAk1T
      MA2LQb+LlswRjYgQ+jRbXQoLi6hSSK1eJ5bKI3oTxnZIOpVACAFRwBj2cASVTFQFSUSUIniO
      xcc/+yf85Ao/uLHK0AFr2GNtexvfHNMejMlkFJ4+aHDt9hZyYNIb2uRyCTq9Ielk+vwZlXMr
      x5PDA44ePbjM7pzxPfkyAIIgwHXdy27Plabbme7C2MwZ7uX5cg4wC4CXxwsDQml6nkW+IOCL
      0z0n2EcgmGYAvGK95z4CHT65jynEuX19G3vUYe+kyu7Nrzu8+Z6HKMsv/AsIw5DJeIgY0ZCF
      ANNyiSUSSPg4HqgRgeFwTETVkcUA1xfQdXXq52J9V2a2KFeP52SBAkwXdq6vIQhwUqpy69YN
      fNfgweNj1na26ZZK2LLGoHhIfPMm89EQy5cZd5ukFjdYyqe+k3joeTx59BA31EinIkiiTNBK
      kpFtyhOf91Z07h+M2d1apnn6FMOTeOe999FeU2vEGVePr/8lhSFxXeXz+/fx/BBBlJAliUbl
      jNXta5RO93HCOFros7S5xbXNZer1FrmkztgwONg//F4NMI0xoSiB7zIajVE1nfZwguyaWH4E
      ORjTH4zQEzm25vOY/qzeZsbF8ZwA8DFMi1gygyQKLGQTfPrZfaLpPMdPH5NfWCdfSJHKpInq
      MicnFRZX1lAiMhFFZW7uD9fLfw1BYHP3Dn/0o/eQRREEEcceMh6OkVyD0sBHEUVs28Eat9mr
      tYg9ZwFqxowX5dLToG8Snx8f8VdH+1PTCwmZ7o7g6Wu+ar1ZAFwgs2K4q6f33PMBDp88YOip
      vHP7+lcNnzyTkSeT0GYnIz4Xy4KDk6nJiUFwbo04RcTAhymWQ79qvedUdA1xpQLv31yidPSE
      asdgbXWOs7MWyzmRB2WXD64vcFKsc/Ode6QuoI6eMKRdP2Po62ytzAFgDts8OiiytXubbnkP
      U4hza3eLfqtBNFfAGzTZO6mxe/s2reIhmZVtsnHtm0Q4/3v56t3S9ywMSyAR/+rPcT4wCgjC
      +RqJ8F3q7gfjmTXiFdP7egCIGo5RxbQy9CYOO4sJGlaIGBiI+irb15KYgzLWsE29N3mpAPCt
      ESZRAntMoztBDEb0oxGimTTD3oSb79zj6Mk+8VicpG0xdD1a9WNkJ0LEHnL73XexOxWUzALV
      4gnZWzeol4+xpBRzMdg7rbO1uYaiajiWxaDfI5XOoskhY9OgXOtzbStLsynQrbVRc8uIZo/6
      0CVh1TgOCvz5Bzcol8ok4wrFcofrO+scHR8zt3oNBRdJFNBiCeSZNeKV5OsBIKhsrqY5KTXY
      Wl3irDVmaznFwThLbm6JyfExiXyBeTSWsy93IJwgy1SODhAlHUVVUDwPJZtBAfBN7n/2OQuL
      6zRPHqBF8yQmLQ4rBlp/n3d2lvji458jxLJsbxSYSAK4Qx48LRKLp5mkNZbnYlQqla9YIzpW
      lUAUicoB416JUksjnEw4rDTJjH3iikw6IpNYWOZ2ZguA8XiCZYzZyGvUGg3iyzvUyydI4m+t
      EeWZNeKV5Lk5xWRukVvPspm3MgUA7t49X9zauX4dgFx+4aXFRVkj4tnkt67TOHhAx9fIdXs4
      mTRqIscHG7uoosi4HsX0PCZGwJ/9+Z8xbleZWBahpLK9tsTx3n0yi1sQibGYSyDoKaKyxZOD
      Imvr1ygfPkXPLJDWFbLxgPJQRQx7qLEUMU1HVmIYxpB4OkU6qqEQokXhyZOnLLx3g2QygaJE
      0FURLRjy+MkDNlY3cXtnVIchqewQQZMYGDbTmwLPuAje6CyQbY4JRQ1NvUBrRGuCI+vozzEW
      6h6fkj0uXZjWtzGzRnx53ugAmDazNOjV05sFwAVysv+Es0//69T0pn03vgzNV633etQVhCHl
      0z2E6CLL8+dzjUGjzN5ZjczcCtsLUR6d9LlzbZ6HDx8RSRRYyOgIQsjR8RmL6zsspURapkwh
      pX95Wdc2MQwLB5FCJkWr1SKmKURiKb6pnm4wHJBKfr2gr9VqUSgU/uDnrPGQw09//uL9MGPq
      XLI1Yo+erRHYIxZWViiXx4y7AUomjTUxkHUdz7GpVycEgYNtjRnbcG0jizls4uNDJEY6GQOv
      z+MvnlCYnycdi5BQJSa+SGjamAJ0K6eUehbvbiyDNeb4mTXipHmGIZxbI3bsCPdubDEaDrGG
      XSr1Bis775NTLT57uA9a7KvWiIqMlsqizawRryyXuydYTdAuPcJwpS93/XxpjShGWFtfx7NN
      SuUi/coZlZHEvbs3qJ0e4QOp/DK76zmOTs4nnitbu2CN6fS6DLpNhuMJpuXh2wbEc6zNZzGG
      Q2zbYvvGTcxRByUxjyI4AIwHA3xgOBoycQLeeX+XcdegU2uwceceSV3gyeM9xqMR9nhMtd0j
      MrNGvNJcrjWiKJHNzJNeynLw+DP6RvilNWIiHePx3h4La9usLC+QTsfptgecHR2QWVglG48Q
      eAaHJ1U2d2+CAmb7CZn5DWS7Q3vssTyXQwwAWaBbK2FKMTL5PKIiIakq8tw8n/zsH7Giyyxm
      kyQzKiKwuLCIJMmIgko+B/HoKl988Zj88hp374n0nQgryzlak5k14lXnrZ4Eh2GIaUyQIhqq
      8vL3gnLxmGH5+AJa9t3wgwBpyrVA09Z81XpvdQBcNLM06NXTez2yQG8Iw36PLz7+xdT0Zs6I
      L89rEQBhGHLw6HPqA4+f/tEPkIFW8ZDDZo9oPMvNpRgfHXT4yZ1lPvp8n2R2jlxMJAh9ytU2
      Sxs7rCQCzsYKa4Xfs0YcjBmHAmsLc5ydlcgl4y9ljTiqVvHn5p5rjRgEAbZlvWAvzLgMLjUA
      XKNDtS8QOmPWt64RlJuYz6wRA98jACRRpNoaUkhIWIFERAjRdI3AM4joKiGgqQqEBsf7j2hW
      kyRjErlYhKEXQXICXDnks08+omOE3FzIIozbHJe75OcWMdoVxoFCQbHpkuaP3r8FwP7hATsr
      KQ5b59aIej5LRnWonHXY+iDkv/zsF9z88N+zs5K+zC6c8ZJcag5P1jMMq4+RYhke3L+PpulI
      2nkmBkFmrlDAtUzqtRK9ZpVibUBufp5Bu4kPCJLCXD5No9ECIJFKIxFgjPqclau4nofnB4Se
      i6DoJOM6vusSChK37t5DDB0kJYYshqRzecbdLpOJgQ8EtsHpaRHL89BiaSTRx3ID8pkUvV6f
      haV5ht0BhmFiGMbMGvGKcumTYHMyQYlGGXSauL5EKhUnoqqErkWnNySeyhARQVFkbMthMh6h
      xJJoskgY+vQHY9KZLBExpNvrosVSCJ6F6YXEY9EvrRGtyQhPiBBXIwiSiCBKeK7NZ7/8GUFi
      ifeur2K6MOp1Wd3cILBNBhOTeELk6GmPjd0VpMBmNHFJpaIMRxNisfiX1oiqps2sEa8gXwaA
      7/s4jnPZ7bnS9LpdlClmSM5PTxGZ5jmpb6w14oyXxxdgMsUUiS8ISILA9w2AmKIQU17MwtHz
      POQpWtO8ar0vryxJErp+XkhWLR4wdFWuX1ujVT6m2rO5des6iiQCPu3WgHzh5fPdYRjSazeR
      tASq6DMYm2TyeSKhh+FBTBFptTuosSSq6GO6Aqlk7LW1RmxVTf7jg+ntCX5R/mLnOn++vftC
      n33z1wH8EWe1CddvLkII1XqLhbVr+NaIz/ePWd3eptXsYI1bDD2NxVSE02qT9c0t6sVjkgvr
      rMxlvpN46Hmclc5wPJFEUiWqqhwdW6Rlh5rhc29Z47jhs7MWp3j8FCcQuXXvHfTIrPhsxsXw
      XGe4IAw52H+K4wVcv3GDdvmM/eNj1q/tUi0VgYBeb0D5aJ92b8zG+jKl0jHxwjrdRuV7NWDY
      7+AJMqFr0er0UaM6zV4fbzLECjVCs0Oj3UGPp1jNZ7F8/4J+9BkznhcAcorlgko0mSUiCzRr
      FVxJZXNtjZP9p8wvrZPNZYnqOgsrK2SyOaLRGCvLawwaxyRz899dXRDYvnGPn/7gHSLS+WDk
      ORN8DzK6SKXvEhEFfD/ANfoc1jvEIrNpy4yL49LToG8SD06O+evToykqnnsXfV/+dHObP97Y
      eiHFN20OMAuAC2RWDHf19GbPExeJYUJ9eua4L2yNuL0B6vROsnmdeT0CIAxpVk4Y+Do764sA
      GP0mjw9LrF+7Qa+yj0mM2zd36NUrxAqLuP06+8UGu7du0jg9JLO8TSEV/SYRPM//Wk7Z90zG
      hkAq+VVbxTDwCQUJUTjPRUvf5SSc0QR+eQWsEZcXZwHwjEsNAN8aMgmjBNaI9shG8k36XY1o
      Js1oYHLz3XNrRE3RiXsOY9ej0y7T9zRkc8DOrVsEwyax/AqNyhmF5HWqZ0dYUpJCNOTgrMHm
      xiqqFsU2TUbDAYlkGk2GiWVSrnXZ3srTbkG3foSaWUYwuzRGHkmnwckza8RqpUpclyhWu9zY
      Wefw6ITCyhaq4CGJAtF4Cll6XVcnZnwTl7slUlaoHe4jKQlkWUbBR/09a8TllU1ap4/R9BTu
      qMFRZYLaO+Dd6yucPf4cR0myuZ5HEgF3yMO9IslUFjOpsjyfoFarkyks0K23EIUQ167jCRK6
      5DHulSm3omBMKJYb5JYgrkTIKSLx7DJ6ehM4t0a0TdguxKg326TWdmlVzq0RVVlgUU/OAuCK
      cqnVoKKsohIyv7qCHFgMQhm/28MJQ7Rkng8++ID1xTyaqmC6AY4j8m///E+5t7uGadnYYYRr
      GyuUDh8RTRUgEmd1Pk0ilSKhiuwdFonGUlRODhB1jVQ6xdJcElnPoMgy0WSOVCxGtrDAQj5G
      KpUin8+RSKfQkkmKe3sApNMpMrk8WiJFVIaDJw9JZOaQA4fWwMaeDDGNEQPDvszunPECvNFZ
      IMc2CAUVVbm4lWPfNnElFe151oinRbJntQvT+jaCIEAQxO+/Y+rDdyCqf/v7nsMsC3SFUNRv
      mhS/GJKq/+HJZzIBf7J+4Zp/CP9ZGnTq+yLfIN7oAJg2/WaNT//6f5+a3ovYBm6//1M27374
      ilp09Xg9AiAMKR49Rowvs7pwvsWwXz9jr9QglVtkdynGg+Me7+wu8vn9RyiJPIsZHYSQ45MS
      C+s7rKREGqbMfPq3d33HmjAZWziCyHwuQ6PRJK5GvnVPcK/XI5P5ekFfo9lgfu4Pl3rYxpji
      o9e7GrSw+mIrwG8ql2yN2KVjnlsjrm1tUSwOGHd7KJk0tmEQiCIEAdVqBwkH2zIwbJ+lzTzW
      qEkghPiCQjadAK/Hk0dPaOYLZOIRkprMxJfBOrdGfFw5pdp3eHdzGdMZcXDaYHF5nXGriEmM
      +QT0XZV7N7aZGGPMYYdao8ny7gfkVZNPHx4ganHMfovh71gjRtN5tFl16pXlkq0Rk3TLX2AF
      v53kfGmNKGncvXcXxxxSqZzSr5YoDeDd99+lXjy3RkxkF3jn1hqHh0UAVrevI7kmvcGAfrfJ
      aPJba0Q5WWB14Zk1ouNx/fZtbKOPnlpClTxkSWbYe2aNOBxiBRLv/+D/b+/cets4rjj+m73z
      rgtJUaIkSvJNVu0YdlIEaNKgr+0n6VfLF+hT0ocChRPUUB1bkWTKlqj7jVySIsUll7szfZBj
      IG1QRxYjW/L+nviwO4fLncOZc2bmf+7i1T3cg2Pm7j8gHYOVlTIdr0PgddivNbF+IRiOuDq8
      d2nEbG6KzNgwa8tPaXq8kUZMDyf58YfnFGdvEZ+eIp1O0KyfsLW2SrZYYjhhoMIeqy+3uXFn
      AUxFr7rCyPgsetelehpSzGXRJChDo7G/TcdMMJrPIywd3bIwCgUef/s3/PQMxWyGkZyDBhQn
      iui6AVjkcpCIl/jx+QrZyRKPHlnUujqTk1mqpxItkka80lzrNOjbUEoRBgFC09EHIHK7t1Xh
      9Ph85yEuQhi+PhN8jkB4dKLEyPjkO9uM0qDXCCEExgB/XCeZZmJ6ZmDtvY33sRv0uvFRO8Cg
      adZdnj6+vAox5z0OkMpk+P2Xf/qtvs2V5INwgJ+kEffrPl/88XMM4KhS5tVREycxxEIxwXfl
      Gl/eL/Ld05cMjeYZiUGoQnYPXIozt5hMhlTaFjP51Jt2/e4prWaLViiYmRijUtkkN5S+kDTi
      yc4OYaHA8C8oFfw0pfpQCYPoOOl/856lEavsuKD6baZKsyinTvd1GlRJiURhGAZ71TYTGYsu
      FjEdTMtEyR5OIgGqhmkaQEBlbZmj3STphE42YdIMTXRfEZqKxX99j+uB0e0iWkes79QZzRXo
      1PZohwZZs4srRvjqs3sArJZfcGcqQ/nI56C8TSw7xLDls79TZ9ZWfPPtP7j/hz8zPx0VRr3K
      vGdpxBFae8tY6RxP/70IEjDNs1Fd6KQzGfpdj8P9berVPTa2XRKZDC3XRXImypbJJKhV64DA
      icXQBXitButbu4ShREqFCkOUbhKP2cgwBM3kd588wBABmm6jazCaH6Ndq9FqtQgB+h7ltXV8
      KTGtGLoGfiBJJxM0Gk1KN0t0Gi3arVParXYkjXhFeb9pUKEx/+BzDMti6OGnhFLDdmx0IDtV
      wjn1cOIJdHEbw9Dp9wN6XQ/DjmHqApTCthPEkwkQcO+2hWnHEGEfP1Q4tv3aEASFLqHQcQwD
      tLMUbGpqimdHuziJAqOFab7KTVOvVkmkUty6vUCn5xNzJJuBzeRMDl0FeL2QWNzC83o4tgNR
      17/SvEmDBkFAN5L2vhDNRgPHsS/NXhi+rp7yKwNhITQs+2Lf79pKI2qadqn53euI1DQaUr7T
      vflkCuucL/qyOyOc9ZPLtPlb2/uZA9i2Df0Oi89X8KXOZ48esP2qzPjMTZr16v/dCPYuyDDk
      2eL3aKkCubhk96jJ9M15hrQuO23JXNbm+8UXFEqzWH6d447g3vyNSy8O/Ws59jp8vbbyTvf+
      9fMvmB0+X0AdqUJcnP+NAcw4jx4+4MVaBV0IAr/DxuYeqn+C6rY4bivGRxw2d4+ZvXmLg61X
      JLKTlMaz57cuJcNjk3jNJm5HkMtmOGmc0Oq36IUSTzcQ6Ry5kQxb68cMWwbtXkDaiUaqiMHw
      xgF836fdbgNnh9XNWJJ63UWPZSDoEOoGrVabvX0Xx5xiojhG7bhK+6SJ6ylS9vkTSkqGbJSX
      sIYmyVk6Hc/HdCykEpi6RosEaVFnfX2DmGUhdI32SYOg82HuvpRBQCGZevuFv8B5pz9AtAI8
      AD7qvUCD5rKFsYIgQNf1S3WE6yaPHu3lvcJol1wj+H3Y/K3tfRBbISLejcgBLk7kAAOmfrTD
      dtXj9vQEoanTbrbI53MXL+qhFNXDbUJrhGE7YGm1wvwn9znaWEHG84wmLWKWoB3ajKSct7f3
      Kwh6p6yslhmZmEXrVGkGNjeLQyytvGTuzj1Uv0Ov1yOXzw+kaIkKfF6sLqMlc4ynddZ36szf
      vUmlvEwqP0PcVFgiJLQzpJzBdN0oBhggrutyeHjAaCLGaV/Q9Fyy+RtM5jMXb1wpWqc1ascB
      /Z7L1EyRynoFaebRAxeBoBtI5hcWXlfyuThBz6Pb99nePgBdJxb0aGk6c6UpNjf3CU+PMIdL
      zM8VB2JPyZBmw2Vj6xDH1hjPDrFfc4mnJ2g3DjGkT1/Y3F2YZ1A6ZFEMMGCEEBi6hlISr9NF
      aAN6U0KQjCdef9bOTqzJAKEZCE0QBn38IBxo+ShFwMGBy9zs9NmClCYIEWeBN5Ke56EGOkUR
      9H0fXQikOLOjZIimGQgB/X6PvlSDe0bZi6ZAg2Y0FWPT7XCnNElucpxWrY5UaS7qB0op1paX
      OW6GLCzM8fTpKvP3H3C4voSM5ylkbeIxnfpJh/xwciDP0j2pc+zWUKZNjB4NLcZCcYhnz5a4
      MX8flc/iex6hYiD/yGHQ5eDgED0+wviQQXnriIW786yvLpEamyVh5nF0SfO0x3ByAFtONDua
      Ag2Sy06DRlycaAoU8VETOUDER03kABEfNZEDRFxLmgeb1D3J7tYmvjwLc3vNQw4b3s+ui7JA
      EdcSR2vz98VXyNoKn4k+yxWXhXyfx0dp/vLpNMeeoF5ZikaAiOuJnb+LrP8AZobdzQobi/9k
      ve7z6lUZr3HA4pPHfPPkZTQCRFxXNCZSFs6tT/G3nlAo3SA7OsbDWZMnS+tMzd7F6PvROsAg
      idYBrh7RFCjio+Y/Kejt4VpF+UoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='County Map' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Input Files' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='SD Table (Census vs BAUS)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9WZMd15Xv98s8eeZ5PjWPQBUmThBFqRWt25T6Rnd0tLvDdvhT+Ev0ux/8
      4Ptgv912+OE6HH2vW221SIkQKc4EUEBVAYWapzPP8zk5Z/oBQokiCRIkiygAdX4viEKczFy5
      M1fuvdf+77UE27ZtRow4p4hnbcCIEWfJyAGeA3RdP2sTXlhGDvAc0O12z9qEFxbprA0YMeJp
      Y5safcXCI9kjBxhxDrF13n7rBumQNBoCjTh/CJKfq1MuimZs1AOMOJ9kUikq3jjCaB3g2afR
      aBCPx8/ajBeS0RBoxLlm5AAjzjUjBxjx4mLb1IpZ8uUGpi6zv3+IbtlUC8cUqk0MbTiaBI94
      cbENmXKzy4OVD4llQoQTEQ4/bpLyudja+pB4JDjqAUa8uAiSB1FpEplboqeYvPbyKwxbNdDq
      xGcvoyv2yAFGvLho3RL//ocVHKbCYibCv/y3XzM2nuBfb9zFNlTGxoKjMOjzwCgM+sMx6gFG
      nCs0TePz3/yRA4w4V/T7/T/7e+QAI841IwcYca4ZOcCIb4VtGdSqFWT1xdilNloIG/GtKBzu
      MhS8SB4NXenj8gaxDQVFtwj5PXS6QwJBHw5RwjRNDE3GwEko4D1r07+SkQOM+Fb0NYGLy7PI
      rRz/9taHJGeXiUgquuBkIuLi/lGLpQsZAqE0tUKZVvWQwMQyryzPnrXpX8nIAUZ8K+JBJ59+
      9hmZVJSxiWnGxpM4MXFKAj7JgdPII2smhY11HJ4oqVSSo2oFnlEHGC2EPQeMFsJOj2azSTQa
      RRAEYDQJHnHOGTnAiHPNyAFGnGtGDjDiXDNygBcc29TRDAvL1NEN89H/oqra1x9nWTTrVXpD
      5eT/hv0OsqrRaXcwf6DQyaDbRtFNdE3DBmzL/Fo7rO9pxygM+qJjK+wdtEn6DOxACq9o4Pa5
      2dvNcnFpDocAtuhAHvRxewM4pYffRENVOMoeIxgWC5eXGagCx5t3SKXGKHdVXr26hGHa+NxO
      NF1HcogouonP40IeDnF6fGBqGLaIhIkpOPF6XDSrFcLJNJLwVcaa7O5sI/nCBPxBZmYmMBSF
      41wWdIvZiwsYgpe99Yd2VPoar1y+gGULeFwSmq7jcojIuonP7WQoy7g9flxOx2ObZ+QALziC
      FMRh5mn2YSKs8M5bbxGff4WYW2J3e5dxP5RMibs3bzFx4VX+w+uXHx1JIjPBhHvIbrGKLAbQ
      TAGl30eQ3Hz67lsUmyovv3QVXXIzKDzgoKTyxs9eQm7LCJILQxsST6W599l7DNwZ/qe//2ua
      1TrBVPox1or4vU4GpkGtdIzlcDMV85HITDDmHLCRy+OKzqBbAkq/h+hw88Hv/p3GwMGVa/NI
      ziCd7Dp7ZZ0fv7GMMtSRfCmuXpx4bPuMHOAcEPDYVAZu9GGX+PgMTiwEQUAftFjPtUktX2Zy
      ep7JscTnjrI43L5P1hni+uUxDuQgk1PTJHxuQpKXqtIhlA7gdXlZXJpnu1/mUiSI2+Nl/MIk
      tVKRlqwzUDTiqQkmE1MIAiAIDHttdNGJbkEk6P/cNQVm5+YpdYZUOk0UVQU8HGzdJ+sKcWUu
      RMP90I64x0Xf7cEx6JCcjuLy+Lm0OMdqp8ClaBCP18/kVJJqqUuz0cIWbOKx2JfaZrQQ9hww
      Wgg7Pb64EHbSAxiGwWAwODPDRjweWZbpdDpnbcYLgSzLiKL4ZQdwOBz4/f7HHjji7NA0bfRs
      Tgld1/H7/V92AEEQkCQJsDneXqdph3h1eY5Gfp/bDw64/OpPmEoGT98i26bdqCJ4wwTdIt2B
      SiQcBGz67SZdxSKTTiJ+ZdTg67CoFIuInhCJWIhvffjjDUbud2j2NDKZJA7hy2eW+22qjQ6J
      zAR+9/efZomi+Mdn8+QMBgNKpRLz8/PU63UsyyKTyVCv16nVasTjcbxeL7VajUwmQz6fZ3p6
      Go/H873tfZZ51JZfcoDPEwgE2djJ8+ryHPfXV0nOv0LUL3Lrg3exQuME6VGuN7ny+n8gHXJ/
      L4MMrcNhro5NhZnJFIVah0h4CbXfYi9bIZ2IoGkamqrg9rjpdvtEIyFazSa+YIiDnW2mF5YQ
      9CGiO4DLYSNrBuGgSLnSw+NqYLCAFwWnN4TTYWMaBi6XC8OyGPZ6ONxejvd3mZ6/iGjK2E4f
      bqcDwTIRJCeWaaEMu9iSj0jAy+aDLRLpCRRNZdjpEozGMOQ+iiEQj4Uplsr4gxGwTHq9IQ5R
      pD9UiMUi9DttBKcPr9OmO9SxVJlQNEyvLxOLRmg1GwTCEXrtNuF4Apfjuy3V3L59m0gkwurq
      Kq1Wi6tXrwIgSQ91+sfHx3Q6HS5cuIAsy5imyd27d/npT3/6vZ7n88ZXOIBAIBg4+WK+8R/+
      mp31T/j9UY5Bu0Zh45jldJhXLo+zmWuSvjL2vQywtD6RzBxGP0s4nqbdGwIwkPskkxnKh/cx
      1R7ZvgPfsMDucYmrP/oZR/dv4k0u4hOGqIM6H7z7Ed70LGN+m9TsMuGgm0AoymTKzd7RJrIV
      xLaKhH1uBs0K3kQGt1Oi25OxbRtdHqIpTQ4Pm4gOk1DAh6X2MN1h3KKTzqCBILh57aUrTE9m
      2Dsu4fE5uPnxR8TnruJSZBAEQj9+FUuTyWa7JGJ92rJBymfyycoDrv7oRwybHUSnE8mWiaSm
      GDaadFtFjpsmF9Jh+qKbWrmE0x+k1Ojy0qXFb92mtm3j8/k4OjoinU7T6XRYX1/nF7/4BeFw
      mMPDQ5aWlvjNb37DYDDgzTffJJvNMj09/b2e5fPIlz8vls7a6hqdeo1aT6VSOKTYsrh6ZYFY
      OMLLV5aZXVggGMswHvN9bwMcnhiV/du0Bha13B7b29vkqx1CwRiF4y1kQ8QhuVm8uEgoFGZ6
      bgEPKqHEOD63k4DHQU8xSGXGmZkcI5IcZyIVBaB8vMPdjR1SmSmUXhNbkHCLQ4Jj89RKTSLB
      IJPTs0RDAQJeJ13ZxFQ66JZAJOBCcUaQ6yWisRhjE9PEwgEAWq0WtmnQ6fWIZ8ZxYhNPjzGW
      imIDrkCMH73+OpGAn8XFOVRFY2J8HGyb8clpYmEfThHqrQ6iw0EgGsdSupiCg3a9jihJ1KpV
      nO7vPhxRVRVJkggGg3g8HizLIp/PMxgMcDqdBAIBxsbGsCyL4+NjbNs+l7XIRmHQ54DTCoMe
      HR0xMzNzMv49jzw2DPq0sSwLy7LO6vLPFZZlYRjG9z7P5OQkpml+8w9fYB615dc4gM7/+X/8
      74wvXucvf/kXfN0U17ZMjvNFZqenvrUhpmmO6t8+IYZhoGlfL14b8WQ8asuv7QFsG3BK/P6/
      /d+I6UWC3QN+vZLjr9+4QKM1xJ2YRK1mmV1+hXKlwOof/h1x/GVCegnNk8Yh12j1FS69/tdc
      mf2Grtu2qVcKOPxx/JJJodJkcmoSSbApFfK4gnESkcCXj7MM8tksptPPzMTjtCVPjtxrUai0
      GJ+ewef6k3hKkWVcXu8Ty2ZtW0dVBTwui8PDHMF4+qvt/wGwbZtKpUIsFsM0TY6OjlheXmZz
      cxO32838/DyaprG7u8vi4iLdbhdVVclkMmxvbzM7O0sg8HRsfVb4SgeIjs3w1z//MW/9vyV+
      9tPr/OqfbzOVCiDr8Nr111jd2kdw+oiF/eQKBrPzc/xhbYO5TIi5mST53RKpeJDhUP1GAwy1
      TaWpYtUPGE8nCEgauWqPhKtHc2CR8et0mzWGpkQs5KHVaBKIpfA7FPq6xGQqhCIPGCoGljZA
      cIfwSRbN7oBUKkWnUUXyBFA1Bck2ED1hXCj0NZGAy6KvCqSSUZq1BuFkjIP9AxJhP7FElFq9
      g9bvIAWCpBIpeq0qtsOFbtqkYyHK1QbJVJJ+p42Ok3jITaF0iCVMMJfWUGwfauEQ2xhDlNwY
      che3x8Pu/jFLyxexDR1d1ZACYYx+C13TKDZ7XL50Ca/r8QrGx6FpGvl8HkmS2N3dJRKJsLOz
      Q7vd5tq1awBsbm7i8/lYX19H0zQsy8LhcBCJRHjw4AE//vGPv/V1n2e+YhJsMxgM8fv9DAcD
      PH4//VYdxXIQ8LpwOl1ohomlDNAEFx6XA0MZoNpOIn4nzc6QSMhHqzsklUp85UIRPFyR03Ud
      rV+k1I9g9POMZVKUqh2mpqeQBJPD3W1kwY9TqXH/sMVrL8/jdLoYqk4uTgf58NN1kpMz6O0i
      6dllsg9WqClOZjNhXE4PpsvG0t2kEyFqzSb1/CGJucsozRoTs5Pkj4r4PBCZWEYubnPU6DI2
      tYDdb2ELJsFYhkG9iOQNYjskBv0Wqqzj8njxOUzcwRC9bh9VdyCIFgEX+EIuVC3BbFrjqOEl
      RIvWUMPhcpI92Gf2wjKtRoOLs1FWt3vMJdwMRBtdF0n4nZQ6Q5YWF3BJf+pzOp0O4XD4iR5o
      sVjE5XKRzWa5evUq6+vrNJtNXC4XP//5zzk4OGB3d5exsTEcDgeSJJFKpcjlciwsLBAM/gCL
      nc8Q3W6XYDD4dUMg4WTZ3ffHf0PRBKHP/cLpdIL3cyE635/CoRnPw2PGvE+2dC95YjQe3EX0
      J1B3txlYTgLRBGGnSneg4vC50ExIRkIIHj+ZZIxyuQOCyOziJSbHYuTzkAh7OMJJOOjDF4wS
      D/rp6ANKxyV8fi9Op5NIJESn3cMn6FTqPRyotPoCGZeI6Y/w0sQEjYaM4HTicooUS2USoTCp
      VJxWt4s3mcZQdURRQNCH5ItlEukMQVcQjAGW3KFUrhNPpUBwkNvfwBf0MT+eZmjbhPxuerKO
      qA/pySGmZmbwmi0sh0inlkPxTaH0Wii6+WcO8KQMh0Nu3bqF3+8nmUzy9ttv8+qrr9LtdhEE
      gVwuh6qqiOLDczcaDWRZRlEUSqUSPp/vhXeAL3JmYdBHPcCIb+bb9ABfR6FQYHx8/FyHQZ+g
      B3g6iKKIw/Htx7nnkdNqq/O40vtFvqirOjMHcDgcIwd4QiRJwu3+fpqrEQ+RJAmXy/UMJcay
      bYrHe1RafbqNEvce7KCZFrZlcLCzSbH+GB28pbO7eZ+t/dypmDFo12gPNDBk8qX6tz7e0Abc
      X1un1j67PRW2bXN8fIyqqnQ6HT7++GN0XefOnTvU6w/vSdM0bt++jaIo2LbN3t4e3W6XDz/8
      kF6vd2a2nxWOf/qnf/qnszRAV5rk6yb9VploIo3b7FBR3EhqjYbsJBbyMGzXqbRlPE4oZI8R
      PEE8gkJj4GB+OoMq92m0enQbJXq6iKAPyObL+INBKvkjVBPanQ6DdpWB4cCUW1RaQwS9R6U5
      IBwKUDnOUu4Podtkt9bBZaoIokW2UMXrEjk6zuPzQLVtMmzmGZoSttYnWyjjD4XQ1TY2EWq5
      PZySwQAPpeMDDHPAzZubhBNhBu0W3WYV3R2merxLp3LE3cMO4+kYkvj4b5Esy/h836y70jSN
      o6MjPB4PsiwTiUT4+OOPSafTHB0dMTU1xf3794lGoxwfHzMcDllbW2NhYYFQKMTm5uYLP0yS
      ZRmv1/vs9AC2oeALxfF4nIi2Tq7SJeCWCMUn8NHjqFChWi6ycnOFQrGAJ+CnnK8CUDzeY/e4
      yO7WBi6fl2I+x+rdNbK5Am4BDo93GJpuPA6Bfr/H0eEh3V6Ho2yFWNjJ4XENa1il1tEQJTcO
      S6djisQ8Iv1Oj2opR6XRpFbMU2o0keU+/UaeQs9JJbfP8XEBtyDQ6PVBEHC63KRCHlrtHv1u
      g+NiFR2JZDIFept8qQ/KgOrRLnogQSwSJJlOf+3L/21wu91kMhkAvF4v1WqVX/7yl5TLZUql
      0on8ZGxsDFVVuXv37klP8Mgxzhtn7gCSN0Ezu8ZAl6hXSpiWiW6aqIMOjc4QUQDdtIlHwki+
      IIl4HL/XCYKDhUvXuLw4TTw9SdTvxLJFIuEAgXCMeCxKKBSmXcvR6qu43W5CQT+9noxTUMkW
      W0iCTKWl4PdKOF0uJiIeVCmA1+PB7fHgD4Qw1SGC24+gy6iGiDsYQ2/l0HATjj68jksSEYG9
      zTXyskjC58Hl8eF32siagNKtMNBFpqcncHu8hBMxqoe7DAU/zcIhmnk6mqjBYMDNmze5e/cu
      KysrVCoVyuUymqYxPz9PNpslFovx1ltvkclk+PnPf874+DilUgld11HVb164fNEYqUGfA05L
      DVoqlchkMuc6DPrMqEFN0xypQZ8Qy7JOZc0kkUiciqr0eeaRCPPMHeC0Hup5wDCMUVudEl90
      gDOfA9i2Tf5wh1Kjh41NuZhHMx6GQfe2NihUW199oKWzfX+dB3vHT3SNbxrp6XKH9bV79JQn
      e9Fs2+bhGQ12N+6xly196Tp/+s0XbHgCe74v5XKZd955h3a7zdraGqVSCXgYBfnwww9pt9vY
      ts3W1ha6rvPxxx8zHA5/UJueRc48M5yhNBlYQaxKlqhrjK2DY66H0yhyCd0ZJeNzUi0c0dFd
      TCSDFHM54pMLRN0a7sg4s5MJ+r02nZ6KKbcQ/CnCLpNCtcX8whzl7AGeUBLD0LCVLmIghc8e
      0FBEYl6L5lBgfmac/d19phaWES2FXtdEQMcyVYqVBtMz0+SPDknPLNCv5nAEYxys3iW1dJXF
      yRBOfwq/2CdbqiMJBrbSQ/CG2X9wn6nlK0ScD/NVCk4XDrXLUIe9/X2uvfYT0rEfRn5cKBT4
      5S9/SaPRwOVycXBwQDqdRpZlrl69yv7+PsFgkN3dXVRVZXFxkY2NDV5//fUfxJ5nlbPvAUwV
      ty+E0ymxvr4Ohkq90ycYnyQo9tjLlui02+xublKuVYiPZWhUHi7q5A+32T7Mc7y/RzgWod3q
      sLu1SalaJxEMcJTbA0+CkNfJcDigVqsjy33ylQ5TmSD5Uh+v3aXW0bhw6TKl/S3qnRqFQoty
      oUC5WiMRiVCuFmh1+vTbJTa2sxwe5hifnWV6PHlyH6FIDE0eMBwOqdVqyJrF1Mwsk5kAB0dV
      wn4PvXaDpgzjExPMzc2TjPxwuX4ikQhvv/02m5ubRCKRk33Bbrebg4MDLly4wMrKCs1mk8Fg
      QCQS+cFseZY5cweQvAm6xfsotpuXr7/BwvwssZAPddCm1uzjkiRMyyYcCuHyBQn6/fh97odh
      0KWrLM1NEk9P4HeJWJZNMBQiGIoQCPiJRmK0yoc0egperxev142sGLhFjf1sA5c4pNRUCPok
      GpUiimkjOYL0W8c0+iqBUAR/wI/f58XlAB038bCPSDSKJGgc56uASKt8zP3dLJlMBo/Hg8/r
      RZZVHNbDcOv45AQupxN/MIQ5bJKrtNAHLaqt/g/Wro9CmgsLC6ytrQEP9wTv7OxQrVapVCr8
      /d//PVeuXGFubo7f/e53pNPff2PR88ZIDfoccFpq0FqtRiKRONdh0GdGDWoYBrIsn9Xlnys0
      TTuVtgoEAiiK8s0/fIF51JZn7gAPhyTPZvXwZ5FRdujTQRCEZ6tMqtyp8uknn7Bybxvrj6Mx
      +wspUyxLp9U6f0mbvi2qqvLee++xs7PD6uoqv/71r8lms6ytrZ0oPbvdLjdu3KDZbKLr+okK
      9MaNGzQajTO+g6fPmTuAN5wiGQxz+doSnVqBe1v7HG+u8/tPblKvlLizeg9FU6hUHrMeMOIE
      URS5evUqt2/f5uWXX8bhcOByucjn87RaD9tvdXWVaDTKxx9/zK1bt9ja2mJlZYVkMskHH3xw
      xnfw9DlzB/g82VKdjNdGd0W4evUSmtxD7lc5zo1e/ifB4XBwcHCAz+dD13Xa7TbpdJpUKnXy
      G4/HQz6fx+Fw8NFHH1GpVDBNk2w2SygU+pqzv5ic+UIYgC8YwAEE3SJ75Q5XlubY2t0nEfbh
      8gTwed04TjHB+YtKq9Wi0WgQCoUol8u89tprDIdD9vb2aDablEol/H4/tm0zMTHB3/zN3/DJ
      J5+QTCbZ3Nwk9hUlhF50RmrQ54DTUIPatk2pVGJsbOxch0G/qAY9cQBd159qduAn0eeMeMhg
      MBhViDklhsPhn+2uOxkCOZ3OpxpqGy2EPTmGYYwc4JQwTROfz/c1YVDb4OYfbvD//Jf/QkO2
      2brzEb/+zW/YzTe/8oTD/Cr/6z//fxj9Iv/pP/0zwz8mHzbUAfvH37xh3bYtDnfuc1xq0K4V
      WFm5Q2ugYahD1u7e5iBf4fP9RKP+5xvWdbnHvbU1Gt0hqqp9K6dqtzuATaOUZe3eAxTjq/cn
      dKp5Vu7cffwG/WcE0zS5f//+iR7pvffeQ1VVPvvsMx48eIBt2yf7gC3L4s6dO3z22Wd0Oh3e
      e+89arXaWd/CU+crJsEOXn79RxR/9WtsbAxdQbOdJKJO3vnVf6XhiJKW+vRlmYUf/y1T2hBZ
      UdnaKRAKeyjsrvPJJ3dZvDjLh7c3+O//48/49M4ai5depXa8i+CN8rd/8+bJ1Qy5geFKY3Wq
      GKLN3IUlwj4nWlcmNTOH3ShRqjup5rLML1+lVq8iOiQ8LhHB6SefzbF46QoONMq5HFv7eywt
      XyOeSmAoQ8LhIMd725ieGDEv5PNlZpav0Mjukm9p/OUbL5EvVZmcW0TQh6zd32Vifplh9Yie
      6Wb54jxKX2FifopmtYHHHtLTTILeCA40DEOhWGkws7BILbuPKzLOVOZsJpOWZeF0OhkOh+zv
      73Pt2jV2dnZYXl5ma2vrZNj5KD343Nwcq6ur7O3tMT09TTabJZlMfvOFXiC+ogfQ+Lf/+ite
      ffNviboFUjOX+OmFIG/9+vcct1UK+WMGis31q3NUWg9TgCxPhvhkr0Ey6GH3wTaCqaI5I1xc
      usggv4PlTxGwm+jBaSS1hvy5TUm2bSI53YiiSCQSpZLd5rD06Esr4PU4aTXbGKbM/kEREOg0
      q2QLFRySAwsRl+TA4bCRDYkLFy4yPRGncLRHvT0E06DbH7K7t0ez1WFpMU35MIsVGmciGQYE
      li8tUSscUCk3UAyTvf19FFMk6rZRTbBMjVqthVNyUCjUGB8LUil3qZXKNDt9piYmKBf3Efxj
      tOvFH/yhPQ6n03mS2tDhcOD1erEsi4ODAy5duoQoivj9flwuF/BwPCwIAk6nk1qtdi4nx1/u
      AWyBhaVFsrtbREJv4BJNNmoC//CPf8PBxgNc0SQRr5Nw0MNVy4NHdPOXCRfDVgef2wGWQr7a
      Z3Z+jsqxRWr6x+gP7hGducqr/kOswF8RcsGjkYrTm0DeX8MRzGCoMkMV0iEvDlGjuLuFO5hi
      MubiSPERCXlxORyEnRb7HQGnCJOZGKt37zI5N0so6Efulii1FERNITIVBwQcDgeJeJxQJIbL
      7Saa9FLIHiB4Q4BNOZ9jqIskAx6kjotQJETE78UlgkMAl8+DUmnhjY+RmZjAKfrQh7vIkpfJ
      VBSv10s8nqF4dIQzlPpSkz4tHg1vfD4f09PTvP/++7zyyivcvn37pNRqOBxmb28PURRpNpuY
      pkk4HKZSqTA3N3dmtp8Vz6UatFjIkchMPL6CoqFwXOkwPZF+IVYPTksN2u12z+Vi1+f5ohr0
      zBxgVCLpyWm1WucyZ88PQbvdJhwOn70aVBTFkzTdI76e71Ioe8RX88VC2Wf+BtqWyc79u+xl
      ywy7dVZu36Gr6JjakHt3V9jLlr/6QFNl48EuNjZ7G2v0Pzex/i4Jngy1Q6dvgNzko09vsrFz
      hGV/+Te1tvJcbB4/Pj7mt7/9Lb1ej9/+9resrKychEF///vfUygUePfdd/nXf/1XyuUyv/nN
      bzg6Ojprs586Z/5Z0eUaBKbR+yX26zKZyRk8koNhp4Iu+pmOBikc7lCTReYyIY6PsySmlxkP
      WXQaNRqdNKVcjtD0Itvbm6THxlhfu8tL13+K3CjgiozjNtqUOgbXriyjdCps7xdZWp7n6DCL
      6A0zFhTY3ttm7OJfEnZ2cMemsZQ69WqNUMjHQFbptWo4nDC0Myhih2qhR3MIF+cn2N3ZJTG5
      gNYqoLuixL0Wx4U6Xo+DcGoau1dhIARYmp98anOSXC7H2NgY2WwWQRC4ePEigiCwublJOp0m
      Go3yV3/1V9y6dYt6vc7s7Czj4+NPybpnhzPvAcBGEEQEQcC2Qe5V2T2q4o9kmMmE2Ds4pN3u
      cLyzS6XTY2FpiWGrDUAsmSS/t0UkMYbSayMbBoeFGheXlokIQw6KNcrlHJW2wXzYJNfW6bbb
      aL0S+9kyjsgETjQqjR4vXbl40hiaKiOIAvVyBXnQpd5o0tUdpCJ+wKbX7aFYDjJxL/mjAvMX
      5mm1mnS6fbZ3duj0FZYnovjHF1Fr+9zbydGsVHhaKals20aSJDRNwzRNxsbG+OijjzBNE9M0
      kWWZlZUVWq0W4XCY8fFxdF3n5s2bT8nCZ4czdwCnN4Xe3kf0Rpmdm6LdVkinI+hKn+NcgVA4
      itvjZmx8nHAogsftJhL2g+ginkrj80eYnh7D73XjdnoYS8URtAFt00U6GiIcSRD12ezWTSYi
      TtweN95QklgkTCLsIxKJEPI52Dqo4vOI4Api9muYoot4zMfuQZ5AMMzEWBqHy08k6CYaixKP
      xwkEw0QjXu7eXEGzRNxuNxPj40SiUdz+MBGfm3BqkrmJOIFw+Kk2djQapVarEY/HqVarpNNp
      7t+/z+LiIq1Wi6mpKbrdLhcuXEDTNMrl8gufGfqrGKlBvydyr8lhvsbcwuJ3quz4JJxWbtBe
      r3fuaoB9kceqQZ82hmGc+6rlT0q73T63eXtOm06nQygUOvswqG3bIwd4QizLGrXVKfGoLZ+p
      MOj2/bvsHpfIHWyxcvNTjqtddLnPnZWbPNjLfumYJ9+8rdNodMC2KRzusHpvm/5ggK6pqI9R
      fn4RUx3S6g8xdZUHW9vYts36+hrmF2OkQL1U/sJEV2Xt1m3WN7b54uV6zSbaD7gQeHBwwDvv
      vEOr1eLTTz9lMHio2+r3+7z77ruUSiVu3rzJH/7wB2q1Gjdu3BiFQc8CQ67jDM9hDMuMX1hC
      kg7xB72Y2pCxuQW6pQrdTp3DoyLzi4tk93foGY6HqkalhzeUxNBkCvk80bEZxDVJ49cAACAA
      SURBVGGdhgwLUyn29nfAnSEScDKwXLx0eYpKtUKzVWK3J3FpOkM8GkAxBLyixsb2EdMLSzSy
      m6hikOl0kL2dA8KzSwQlP91GhaGaIVdqszDb5uAwx+T0FMVCHlxBvKaC5JM4PMgxvbBMPGQS
      Ts7ismsUCnmazSYLF+YoH+SxJScxDFzuCGG/69TbtVarEYvF6HQ6JBKJEy3Q9vY20WiUYDDI
      9PQ0Gxsb+P1+Xn31VYrFsxPynRVn3gMgCNi2Bdhga/RUkaDXCZhsr92ibUgcbm+iajKFvUPC
      MxdJhn0M2nWa3SG5/W3ajRqx2ct0ayVaA5WkR+Qwm2f64mUCbgmEh6lWbNum1+8Tj6dZWrqI
      V1DZ2T1CdHkYtNtousLhcR6HJ0TM56BQ63Dp0hIux8PuMjOe4P7KDuPTGXIHO3RlmWa9hjs6
      jld6+DXPFspcvnqZcv5hz5U/2KJr+rDVHsNenXypgu2MEnWbbGwd4XGf/jfokezZ5/Mhy/Kf
      VZgURRGXy8Xa2tpJxcRms0mlUuHSpUunbsuzzpn3AJInjj3YwBkawxgOSU9OIACS28f1N/4S
      rdfFIkCuWCU1O0HhcBdPNEEi5Mdt+Ri2G0xPpdl88IDI2CyiXKM2tJmfHGN/d49YehqH00vY
      bXN/64CxTBR3wEt994jwVBzNUgi6RIY+P25viFQqgtfpwCGCR5XZOcozMX8BweEgGp/Apk0w
      6MMrxZEPcwQjUSSPH3QBDIOUR+TB/QdML1wCBC6/8iqxmJ9GKUswmiIRieCWAjhsN6+n0nR7
      Q5LR088QnU6nOTg44KWXXuLOnTv4fD4CgQDz8/Osrq4yNzfH7u4ugiAwHA5PMkVcvHjx1G15
      lnku1aCnRb/TwuEN4nWd+XfgazktNegX98OeR56Z3KCmaZ55UTanxwe2iao+2xEWwzBOpa0c
      DseZt/lZo+s6mqad/H1mDuDxePB4PGd1+ecKy7JGcuhTwrZtIpHISQ9w5oWy5U6Vjz76jNpA
      eyhjEARMTUOzLCTHw5VVy1QolR+Ovc8jT1ooezAYcOPGDSqVCpZl8cEHH+Dz+fjggw8YDAYn
      NYRv3LhxshXyX/7lXwiHw7z77rtIkvTCJ8f6YqHsMx/8esMpptIZxq8uUdjfpNzRiUgGxz2N
      a/OTZIsVFi8s0O0OGB9PnLW5zzQej4c33niDt956i729Pa5evUqv18M0TW7fvs3Vq1dpNps0
      Gg1isRh7e3sAHB4e4vF4ThzkPHH2YdDP0exrzMV94I1y6dISw24LuVcnX36205E8K/T7fX73
      u9/xD//wD3g8HrxeL/l8nr/4i79AkiREUeTu3bt0u112d3c5PDxkf3+f2dlZlpeXefvtt8/6
      Fp46Z94DAMTSSZzAWDxIvqVx6cIY2zsHJGMhQgmBsXgY4YXY3fvDoqoqXq+Xe/fu8ctf/pI7
      d+5w/fp1VldXefPNN3nvvff4xS9+wWAwQFVV0uk0Ozs7uFwu1tfX+elPf3rWt/DUGalBnwNO
      KzfocDg89xnmHlsp/mnnBh1tin9yhsPhqVV47/d/uMJ8zwPD4fDP1p++Ijeoja6qGLaIx+MC
      y0RWNNweDw7x9IYhz8JC2POCZVnnXsd/Wti2TSAQ+LowqMmD1Tu8//vfkrhwnXsf/YbDQgXB
      HSYScP/ZiUy9y8rqLuNjqZNMz0+aXexRD2BbBhurK9T7BuagztbOPq5QHKchc3ftDuWWTCYV
      RwD0Toma5iXg/tPcXVf7bGwdkkrGKBQLOEQRp8v1RDOGfquC7ggg1ysQCDx2QjRo5jkoK0SD
      JuWygiAYJ9nVngaqqn6rNRPbtrl37x537txBURTu379PtVplYmKCTqfDH/7wB7xeL2tra2Sz
      WTweDx988AFut/tUVpyfZVRVxe12f10YVCIa9tFVnQTdNrOTE3y4tsfMks4//2//C3lpgqtx
      GwQDR3yazbsbRP02/9d//s/86H/4n/n7Hy98K4P0YY1A+hLGoICsmDidDnTdwnRYTCxcpFuq
      UC4cUij3WZryMrT9rO/vIQXjXFqcoVMtY9k2imnT7zbY2XjA3OWrDBsVLHeYK8vz1HL7FOoK
      CxNRdotlovFJxGGFUr3FletpNFlGAnr1IjvHJcanZ6hmj0lMLTCRilBpDLHsIZYVp1GqcO9e
      jldefZVCPkcoMQb9GpYvwcXZiVN4RN8fQRC4du0almWxvLx8Mv4H2NnZwev14nK56PV6DIdD
      nE4nLpfrhV8D+Cq+HAY1VGodmUwY6j0D1YKxqIsHd1ZQQrPEAyJOb5g3rl/FF59gLBEiu3fA
      9Z/9hOHg26cLERxONHWAYZjImsnMRJxOfwiYHGw9wBtP0Wm26BYPaCg2SruGLzOHQ+6hY3GY
      LaB2SxwXWyB6mJufZyIEYmQSvzVAMS0ajTatwgHVlsrCy68iGh00fCxOj/2ZLcVqk6svXaVR
      LeNwCHS6HWxTIZfLUcseUxuaeMMJFhYXEeQe4/PLyN0WosNBp/NsFfEzDAPbtrEsi/n5eRRF
      wbIsPB4PCwsLbG9v8+abb5JIJJifn+f69evcuXPnrM1+6nw5CmTbDAd9TBwEAj5MTWEgawSC
      AeTBAFFyIjlEJIeAaYtoygDJ5UZTNVweL27nk0VWH80BbNsiu7+NFB4jKCocFhpcWFrCjYli
      2/g9bmqFI+odlYmpDLbko5HdRQpnmEqFaXdlIiEfrU4PARtL7dG3vDCsY3nizE4mqeQOaA9M
      MukM3mgItdtl0KrSVmF+fhGtU2InW2F2ZppCLs/chQuUDncJpGdJB10MDBufE/qyAraHTu2Q
      QGqKWv6I6NgMeqeM4gh+yaFOi+8ihuv1eifJx27dukUmk6Hb7XLp0iVWV1e5ePEi+Xwev99P
      Op1mdXWVa9euvfC9wDOTGnE0CX5yTksNqus6TqfzFCx6fnkiNWgtt8PqdpELM0n8E1dI/gAS
      HEmScDh+mCwKLxrD4fBUhIMj8eFDLZDH4/kaBzBl3v3oPv/4P/53HHzyrwxDc2x+8hHJhavY
      nRySL067ksOVmOWV5dnvbIggCOcyH/13QRCEUR7VU+JRW37NpngLW3TidDhwiCJqq0S+0eP9
      Dz7gzto66biPXLnCB++fTlFly9S4e/NjVh/sc7y7wWef3aYta6iDFrc+++wrN8U/KdXcAYMn
      Wj+yKBbKYFt8+tHH6JbNzson5NtfP6n/4sS33Wjy+Z0FerdGoTmg0yhRrtbpDTV+SBRF4caN
      G7RaLQ4ODvjkk0+wbZtsNsv7778PwNHREb/+9a/Z3t7mo48+4t/+7d/I5XL86le/Gm2KB8Dh
      58dXx3j7d79nLjNBxO/E7w8xNhkk7HHgdTnx+oIsxU8nT40xrBGeeAmjn6PbGyBaQ44KLS6m
      RHTDIh6PcHyUJyiY6F6Jg+M8kdg4RjvHQHcxMZEilkzSyB/gjC9iDWvInRptzUPCayL0Gmzs
      7JGeucBMJsDdT+/gSU0iDqo0BjpLFxbY393FdIYZH08R8VlkKx06nT7SoMWtnXt4ImlCbkj6
      oW+6ebBfIB72UcgecfHaq2iNEkMpSCzgwhi22C/XSY4tMD8Robt9jCLoRFIxhoM+e/d38SUn
      8Ttt+u0myVQawR8m5j+dIc7y8jKGYTA3N0ev18OyLIrF4skX79FmENu2eeONN7h58ya1Wg1R
      FM/lnoOvnAPMXf4Rc5c/9/fUn6fM+7u/+7tTM0CQ3KjDLqams3TtNQaVQ5pOD063i1evv8bm
      5gYuhw9D7eNIJbn4ymt0clnckTTjLrBCQdZv3ebi9Z9Q2bqFZ+wirVafWqtEYH4aJX9AW7WI
      qip2X6VlCChHxyzNjrE07qFXLTNx8SX6tYdZqJ3hCXoHKwQzk/TaLVLTF2hV8vQ08KgqiivG
      9KUfYbcOmJ9fZCbh57OcSrnZxDU7jtPj4eXX36C4vw9CAhcDBnaImC7TrpbINRXmwxqyPkCw
      dDYPily//sPV5crlclQqFSqVCj/5yU9otVq8/vrrbG5u0uv1+NGPfsRgMODixYvcvHmTX/zi
      Fz+YLc8iZ64GlTxx/MIW0tgc/UaR0kBi+WIIW5PZ29pgbHoRYVCl0QszE4/jdDhwJR+WIXKJ
      oGgKoj9KzCthZGaIp+OI/RjR8VmS0QBunxfjwQMCgQD4vaQDFcJjC4R9blwuB35vhIP9HUKp
      aUAglUwSDvoI+HwYDielg13SE7M41SbVrsx0IoXtBKQk+qBFtiGTjgRJTcwSD3lxOxw4gWTq
      oY1jY+PIQhCfy2AykEEQtnEFgyS9PgxPnGCrikc6nfH9YDDgwYMHeDweEokEpVKJWCzGP/7j
      P1KtVllZWWF5eZm7d+/y0ksvsbGxwXvvvcf169e5desW169fPxU7nieeezWoZRpYiEiPK5f0
      AnBauUFN0zz3kbfHqkGfNrqun5rCEeBFXlHQdR1Zls/ajBcCTdOQZfnsHQDgOe98nhqPEl2N
      OB0+35ZnPm6wLI3dux9R7EH5eJdPP71Jc6Bh6Qrrd2+zsXP0ROfpdB5um2y2Wt/ahmKxCLbF
      3oN1VlbuMtQf/7I9us6ziKIovPvuu7RaLba3t3nrrbc4PDzkxo0bvP/++1iWRa1W43e/+93J
      pvm3336bWq3G73//+1PtkZ8XznwSLIouFmYnyJmgawKvvzzPfq2Hw6+QnFxiLOnj+ChPABPD
      50IKRugUs9TKdUzByfhYDF9sjOEfq510u1167TahoJ9Ot40/Pkm3UWV+dor97Q1qfYvJZJhw
      KEBb0ZCcPhRVBQQSqRTdoyKa3GV3YwfJl0TUhsxfmOdgZ5OB7SMRchMOONjL9vAIQ1RLJBWP
      0hkq9Ool+paX119ePpO29Hg8LC0tYZomU1NTaJpGKpXCMIyTTAjJZJJMJoNhGITDYeLxOF6v
      l0wmcy57mTN3AMtUuL+xQ8WlcjFicOvuDnNXX8Xv9rC3fp9mK4nRrnLUGDB3dY7dbI5IMIpD
      FPCFIgg4iYT9dPI7HOR9aIqC1+PBIYKAzf7WBv5IAtvSqNXamE4vNiJOh4Bp2ZQPdrCdPuZn
      bRr1OpahUK3WUQ0BS5GJhcNYeo9WR0H0SBhDmf2CQLNUxHZ5iAddPNgo4Y2H6bcVBM/ZTTKH
      wyGfffYZfr8f0zSRJAlJkrhz5w6Li4uIoohpmty5cweHw0GlUkFRFMLhMCsrK5imybVr187M
      /rPguRLDyY0GZiRC4BmKZDQrOQ4LDeYvLhMN/DBam9MSwx0dHTEzM3OuJSjPjBrUMIxzOeb8
      LpyWA4x46AChUOjk7zMbAj3qnkd8M4PBYKTkPCWGw+GfbYk88yiQbdv02nUUA0xDpdl+JDCz
      6TSqlOvfLqrzaOtfp1GhWGnwdf2boijf0epnE9u2qVarJwlgq9Uqtm1TqVROhpuqqrKzs4Ou
      69RqNQ4PD6nVaty7d49SqXTGd/D0OXsHsHQ6hV2KPei22hT++BDUfovjUhMBG7nfodbsoKky
      1XKZfr/P3ZUVuv0h/W6bfr9PsVhCM22ODg/AHLC5UwBTQ1YGlEoVdNOkVa/S7PR55BPFYgG5
      36HaaGPqKqViCd2yqFfKDNXnb3imqip7e3u0220qlQr7+/sYhsHW1ha9Xg+AtbU1TNPk/v37
      NJtNDg8PT/KEnscKMWc+BhEdLsbHUhwB0WSaZu9hLauhMiCZniQdc/Pub39DrSfy0stzuCSR
      akvDMAzkfpPjXJ3ZsSC3bt9l9vLPcAI4vEym/RSKVTAGfHZ7jYsvX0dutJDcTiIvX0UAbFtn
      e2sfrwfqBYlsvc1LSo8P1zYYm77IX16/cnYN8x3weDzMzMwAMDk5SbPZRJIkZmdnT7r8yclJ
      1tfXkSTpJCQaj8fJ5/Ncvnz5607/QnLmDmCZMmv3HoZBPeNOdnb2cQfijIVj7K2uU6sniMQS
      BBMB3L4gk5kohbyG3lEZajaz8/Po7TyZyWkclo5DksDUaLR7WBZ0+zKZ8XFE2yQzPoltDACT
      zbU72P40DqFDs2cxNZ3GUysyMB2kkxnGU89fIt7BYMAnn3xCIBBgZmaGlZUVfD4fd+/eJRKJ
      sLS0hMPhQNd1FhcXef/990kkEieRofM4z3juxXDngdMSwx0fHzM9PX2uw6DPjBhulBrxybEs
      61RCxhMTE+e+3vCjtjxzBzBNc5QV4gkxDOPPyvqM+O48astnKgzaaVSQddDkHnv7R2iGhWWo
      1JttsC0qlerDHxsKfeV0ojMP5cUWxeMDdvcO0b+mM7Itg9zRPvX24xPLWqaJcsYvqW3bFItF
      NE1DVVWKxSK2bZPL5U72+8qyzO3btymVSqyurnL79m0UReHevXvnsn7YM+AABkqzQHUAg4FM
      1GuRr/XQBgqbO1to2pCbd9bplov0ejVyjQHVYoFqs0u7WuA4t8fq6i6DQY+j4xy6oZPPHjNQ
      dCxTp5A7pjtQ6LUbHOdL2LZJMXfM/nEeMBmoNuPjGWxtwNFRFtW0KOezNJpNbn72Ka2+TL9R
      oKO5EG2TTrNKoVxHVWVK+ezJRndTUWi0WtQrBZrdIYNOg0K5hqYMyBdKX1lZ/rTRNI1SqUS3
      26XRaFAqlej3++RyuZOEV+VymUQiQSwWY35+HlmW2drawu/3c//+/R/cxmeNM48CiaKTZCJG
      DvB5XeS7ElMzQax+j1TUy8F+jmhmjGGri3vcD8hUazKS2MTllpAiAfwBiUGrxsHWfbqDyzTq
      ZS4HE7hsk6ODXaxSh7gX3JbIgaDgkvw4HQ97kla1yFBRGU8G2N/fpK/qNPJZZpYv4/P58Tgl
      3N5xvI1tSjUTl1Zn46DBSy8t4JLclIpVgouT2NhowwYt2YNh7OOxZQZimHp2i3JTBk+AyfgP
      m+HZ7XYzNvYwO93Y2BjNZpNer0e9Xuezzz7jzTffxO12s76+Tr/fZ2Fh4URi8Shset448x7A
      MhU2Ng/Y39tmf2ebVqtOqysjiiKRWIqurJEJe3G4XDhECZck0G5UGFoSXrcLvzdAq16iJ6vE
      kkkkp4egW6DXl9ENFacnhN/jJBRNkIxH8LpdlIoFDEsABJx/TOWoKCqRWBKnIBIO+egPVQRD
      pjNQ0Acd2kMN27bQDJtENIzo9pFKJfF5nGhKl/sbm3hDadReDVNwEgqHGfa7+ENR4qkUfs8P
      n016OBxy+/Zt1tbW2NnZYX19HU3T8Pl8OJ1OcrkcqqoiiiIOh4NsNsvS0hLxeJzf/va35zIr
      xHOlBn2ISrNpEIudn0onpyWGKxaLjI2Nnesw6DNTKFsUxe8ohpP4Y8KFc4PD4TgV4eD09PQ3
      /+gF59F7d+YO4HA4zn2GgifF4XA81YIcLzKSJOFyuZ6tMGijlGWgQadWZPXeJprxsHLM3tZ9
      CtX2Y4+1DJ2h8qfQXb9ZYX1jG918fExz0P+TGO5FxbZt1tfXeeedd6hUKuzu7rK1tQU8lEt8
      /PHHJ6rQ3d1dVFXlww8/PBHMnSeeAQfQsfo1KgNw+kJMhQWOaz269QKKGCbgFuk2yuwdF5EH
      fQzLpFWr8O6NdyiXa2xvPyBbqoNts7V7yNxUBlUesrW5SU/WqJfz7BxkT176WqWCOuyyvXOA
      qinsbW/RHaqUsgdUmi/OC3DlypX/v70zeY7juvb0V1nzPKIGAIUZBECKBCmZJvm6Zct2RC+8
      6oiOaPfG4ejov+ZFL3vVm1555/DCoY1kmyZhSe+ZIgWAJOapZlQVasqaMyunXsCELdnWo2yI
      BRr4NghEAFnn3sqTN+85v3sO4+PjdDodarUaU1NTALx48YLZ2VmePXtGuVymUqnw7NkzZmZm
      ePny5XCNHgJDdwBBsBH+Y51RQR+QKbdw2834IuN4aHGYyXOUr+LsFXm+l6evyhwXReKjowR9
      DiwOLx2xCia4vjTHzsYGVbFB5STP5m6aYlnE2uvwKoVlGAaHBykifoGNrQOK5SqNWpH159ts
      7ewNbyLOkVeVt5vNJg6Hg0KhwMOHD1FVlYWFBdbX1+n1eni9Xvb29nC73ayvr+NyfQt18C84
      Q3cAXevzfPOIw70tSsUiqqaiaQZyV6QidjFbbThMMpmGysSIg431FyhmG4bcptKUiETC+Hwe
      MKBYOEY3mdFVBbvLi8tuJRSOEAj4EDDI7G3SUgQCHjv7R0UiIyHsFhhoFkIhPyORf1xwdlFo
      NpuMjY0Ri8Xwer243W5SqdRZm9ClpSUkSWJsbOxS9w6+UoO+BZyXGrRUKhGLxS51GPTCqEE1
      TbtSg74m5yUcDIfDl74Qwau5HLoD6Lp+pQZ9Ta6Us+fHVx1g6HsAwzCoFNJ0BgAGx/ncaRjU
      MDgppNjYOUTTdXRdRRT/viiNNujRkzTUnki+0gRDJZPO8U3XH11X6HQlBp0mPUVD1w1EUUQU
      /3aodljkcjlWVlaQZZknT55QKp32P2i323z22Wf0+310XWdra4tGo8GjR48u5Di+bYYuhjMM
      FYvSptYDq1xnL5PFG4yjaSKibGdhOojSqVLT7LRLdUxaj65qQWlXsAUTeKxmXA4TkuHEJNXZ
      z1ZYmJvkuJDD6hkh7NLZ3t4iPnePsCKSOhkQNLk4yJWJRn0cpYvMzE7TrlWwegKUsoeERmdQ
      mscMLAFiPiuZQonx6XlcFplGo4/PEOk6B6iGg16tiIGJQOB8OuacF8FgkImJCT755BNmZ2c5
      OjoiGo2ytbXF4uIiW3/smXB0dMTk5CS3b99mZ2eH+/fvD9v0N8rQHUAQrPj9Xlqcxqh1WaMi
      tgnZZdxOJxtPnzA6O0nPfJoJPUpnmRqNI3lGaBzn6DutqLqZqflZxEoLpZln98iCOxRB7tbJ
      iQqLCzO0/ngQymO3kKn3iQXcHKVyTI3H2D04QMBGUOoxPnedfGoPYyBRrpUxxmLERuPUGw1c
      I07Se5sImszUO0t0NRsXdTupaRqZTIaFhQXy+TzFYhFd11laWuLp06coisLOzg6yLDMYDNjY
      2GBk5NvrVHNRGboD6JrE5m6Ghk3m/nf+hWqlhDfowW1zk9/YRLN7cTocKCYLustJIJjEF/SQ
      3tjB4gkzGnOzmRKxmUzouobV6cXldBLwulFNClKryu7RMcm5GILJwcSYk3y2Tthnx2JW2drL
      kJiYwGlzYlVEtjZeYLE5sGs6Xr8Pl9ePy+lE0weYTBYWbt7GbXSQLDZUzYxJd2FcMDcwDIN0
      Oo0sy+i6Tr/fZ35+nlQqhdvtRlEU7ty5g8/nY3d3l3q9ftZJ/rLxFqpBv0wpn8Y7ksRt/8d1
      RXK7ztZBlulr1wm4L4725rzUoNVqlXA4fKnDoBemNmi/3z+r4nbF19Ptdi91suo8+epcDu0V
      yOl04nQ6h/Xxbx3nkQi74lQmciESYa/oN09Y3zzA5g1z551rCCYThq6jA+Y/dkfX9QGiKBEK
      +b7+YpccXddZXV3FbrfjcrnY39/nvffeI5vNYrFYuHXrFt1ul88//5x3332X3d1dWq0Wy8vL
      vHz5krt3736pcvJlYOh5AKc/StQX4PrNBcSTPC+3D8hsveDRv39OpVxkdf0FfVnm5OSbtz66
      bOTzeU5OTpienmZ9fZ0HDx6gaRq5XI7Z2VkA/vCHPzA1NcUnn3xCKpXi/fff58mTJ0xMTLCy
      sjLkEbx5hu4Af06uVCfhAsUe4MaNJZRei16nQiZ/dfO/Dr1eD1EU+cUvfsHy8jKPHz8+0/n/
      8pe/POvM6fP50HWdhYUFfv7zn3P37l0KhQKdzt8u+/LPyoVwALfPixnwOQQOyi3iUR/5w0Nk
      DexOLx6XA6/3ar/wHzEzM0MgEGBycpJ2u42u6zx48IBQKEQymWR1dZWlpSUeP37MjRs3EEWR
      cDiMLMuIosj3v//9YQ/hjXOlBn0LOA816Ks+AVdq0C+rQc8cQFEUWq3W1/7zeXLV+/b1uQqD
      nh+9Xu9LB3/OokBWq/WNhtrOKxF2GVBV9coBzglN03C5XF+vBu3Wsvzr//l/p78YCv/3f/8r
      xy2ZT3/zO16vqZDK7x4+eq2/NAyNwtE2ogSNkzxffLFKoztAlSTa/T6GriPL327NTUVq0elr
      DFoVnn6xSrZYo1apfkO1qHGhHDqfz/Po0SN6vR6PHj1ifX0dwzhVrz5+/JhSqcTa2horKyuc
      nJzwu9/97kwxepn4izyAYWisru6QGD2tEtY93iA6t8jaRgZLu0Px8AWPHz3l3f98j+0nmwws
      Oppg5bvzUZ6s73Hn3n3SB3ucNAfEn63wybMj/sf/+p/4rX/DAgMCDhNVCXSxxeTsPH6XlUGr
      RUfTcFkEqvUKLocfwaRiqBL5SpepsRDlahOHzUKt1sBmNxOMTaKIBXqGm3jAQbXZw+s0UWmp
      LMxP0xfLHGQqLFybJJ3JY3UHiTg19g4PSS7cxy91mbhxh/rhNj1BwGaDTL7K9PQ4qf0DYpNz
      dCtZcEexKyLiwEJyxE0qWyQ0EmbrxRY33n2PzkkeZySJTW1SqndZWFzEYX2zJWCy2SxjY2Ok
      02msVisLCwtnrZBu3bpFLpej0+lw584dbDYbMzMzHB8fE4/H36idw+YvVgBN7lJriWT2dik1
      enyxto0qmMhsr2MAB1t72CwGx+UKI+PX8PiDRP129nZ2GBmfRKqWCE8sEHSb2dnNYO5UEb/m
      wWgSzDidp51JgqEQ9cIhqeKfdOmGrtPrD6hWy1SrdXa2t2g3apRKBay+GJIkMRt34RiZoytm
      ETtWLHqbQu6YQDzM7tYe7VqJrgItsYnSLpDOlxH8Y5iULif1NkvXphE4rVCx9XwNRyCCAOzv
      bNNpi5RPynT7EvtHGbq9Hr1ul2ZT5Dh3RLXeIDExiayYmLt2jRB1TOE52pUCYnfAeDT4pdIt
      bwLDMLDZbDSbTUwmE16vl08//RRN01BVlUKhwPXr14lGo3z66afIsky73b6UXTv/YsQWh4//
      +t/+Ow9OysSCToS7P+L9aJRKuXzaYV2QyZfbjI7FMRkWVG0cwWTgtpvZch3v/gAADxhJREFU
      3DlibnGJQmqf0bv/gosO9Y5B1P63DdA1ic29Ai2bjD1ipSPrTPvdmE0Divs7DBJT+LxezEob
      zZnAaVYpNRX8wQhuv4uuEcDuBL/ZhmZE0fp5OgM3Y4kIXqeL8WScpgQ2Aaw2Kw5vGK/Xg93j
      BKsPqV3jMFtlaj6BxRTg3Xfn8VuhZNII+OzkTlq4nS6aNjvuUACzpKOazZitVoLhETzeAC6n
      A0OH9kmWuitG73gbZyhB0G3D6bBiWN/8jeXxeMjlciQSCQ4ODohEIuzs7GAYBsViEbvdjiiK
      uFwuGo0G5XKZ6enpN27nsHnr1aCXgfNSg361SfRl5MLUBjWbzZc6Hv1NeFXO7x8lEnn7Gv+d
      N18tjTjU4riCcCES0Reev7+Q8BVf5avFcYd+Bxq6SmZnnVofes0KXzxbpSUpKP0Ozz7/N/Yz
      37x7ua4qDNSvbwbXbovIskq7XqQzOM22/tkV6Hb/+lkFwzDIHW6zvrlHt9thMFBQ/oPPelMo
      isLTp09pt9uUSiWeP3+OruusrKyc1QYF2NjYoFwuo6oqv//97ymXy/zmN7/5yhxcDob/WDGZ
      iPrtFCUopdOMJJI4LGa0joLDF2Qk4CZ7tIfg9NOsHOOPTyPXs4g9HbMA07Nz5A93cY1MYJFq
      lJoDovYB2w2DD+69S79e5Oi4zuLMKNtHBUIjCdxGm42jAt959z5Ss4bgSNBqNkGTyecLxGcW
      GbQ61EsZGrKFyaiHg2yRxMQciaCJpuTk5mKSSjFPo16h3DGYm54kFnLSlW0EfF+z6/8WEQSB
      YDCIJEl4vV6KxSLlcplkMkm5XEbTNLrdLsfHx9hsNorFIr1ej3Q6zejoKBsbG5dODzR0BzCZ
      zNjtr95vTWhSnf00zEbs6LqGrirUexpzthpr1R5j5goeq50Rt4EjGqaS3cc2MkerlsZhc5IM
      +7HYTFxPhLBbBIpinU6jQC5nEEheRxMz1AcDluYnEQCTYEJTlVNBmKaydGuJbLrCQOqgqDYi
      fpVisc7E3DzNRhOCPvjj8tlttwnFxgkn3Zg6J2xsn7DwzvC6y5vN5rNDRi6XC0EQMAzjS3ut
      p0+fUqlU6Pf7NBoNWq0WP/nJT6jVapfyTPDQHUDX+rzYPaZtk1meGmc/VWBqIYDZYjA5OY3f
      YUMXzLg9NhLHbfw+H36nGStgcTqxjk6SS+3hCo8TdNtwmAXMdoHM7hFR7w2cTie+UJxgKILV
      bUUnQLdRJl9ucjM8RjA2wcuXa3hGxvF7bNgsdgIBH6riQWqXqXTMTI/GsDocmHw6CF58tjwv
      tg8YC4fweFzsHaSYmRhFqcm4LMPb2He73bMit/F4nMPDQwKBAJlMhlgsdvaE7/f79Pt9otEo
      R0dHCIJALpfj3r17Q7N9WFypQc8JsXqCzRfCZTv/Z8p51QbtdDp4PJ5zsOjt5cLUBlVV9Z+q
      a7nT6wdDQ5bPf0yqqp5LD1+r1XopewH/Oa/mcugOYBjGP5UDfJvoun41V+fEq7m8QGFQhfT2
      GrUe5I92ePb5v5M5aaH0+zS7XXqNIuLrSVD/gka1ytfdNt12nZ6s0WmUWVtbpVj767VHB1KX
      Zvv1SrhUq9W/w9LzYTAY8OTJE9rtNvv7+/z617+m0Wjw+PFjtra2gNNOkQ8fPjzrDLOyskK5
      XOa3v/0t2Wx2aLYPi6FvgjGZGY14KQ5gcmYRs+UIj8+FJrdJ53JYJJHAtJf09j7xiQkEXcAm
      qPRUsGg9rO4QmiZRzubxJaYwSzVkwYXWqVGsS9yPRGgUM+RPOsxPxdhNFwiGE9i1JqlCmeu3
      7iM1Gtg8QQIeB4c7L9HsQbxmiWK1w/z1G1jUAX3JhNdlZndrF090HK1ZpC94GXEZZMt1ktNz
      iMcpjpsD3jEGVEUJt0Wl1tVZWryGzfLtP2ssFgvxeBxZlonH41SrVQ4PD5mZmTkLgxaLRQKB
      ANvb2xiGga7rnJycEAgEEEXx0nWSHPoKYDL9Kctp6DLtgYDHYQFMuNwePC4n/VYDSVU5Sh/T
      bpQo19vovQYVsUMhvcdAGtCUFA5TaVq9AcmQBc09ykQ8BBiIjQbt8iHFkzbR2XcwlA5tSefa
      zDgmIDw2RSJgJ5XNIIpt0kdHdAcm5pJj9AZ/Wn6kaoZUpXvazLvRIp86pNVTmZubptmoYPFG
      GY8GEcUWE1OTNLsyCZ+NRrf/RuZSEASs1j/pzsPhML1eD1VVz0KcN27cIBAInGXizWYz3W6X
      QCBwKQuVDd0BdE1i86BEKbOL3OkRHx/DBFjsDuKxOLGxSUIBLw67i+RoFIsu4wnFCEdChEbG
      8fhCjIT9uB0OJscTxOIJLK4QQueYriogcKqMDI1OEgwG8NvNBANBPDYo1vrYbQJSRyRbqBCN
      xvB4XExMThAKhXC43bjtNiwWK6XMPjXdz0TIjs8XwON1Mz45STAUwmF3EAlHUFonyLqZ8EgM
      h8VM2Oei3FEJed7Mgf5er8fm5ibb29sUCgXy+TzLy8uUy2UikQgbGxuIokgul2N5eRmPx4PZ
      bGZ2dpZsNksymXwjdl4k3jo1aL1eIxAMIVwiId15qUH7/f6lr8Z3odSgf48YLpEY/RasudhY
      rVbs9n9cXnEe13jbeTWXQ3eAKyXo62MymTCb3+yRyn9WXs3lhQmD6vqAvfU/UO5CKXvAkydP
      qLYlDG3Ay7VnPP3iBYM/k6iUy+XTn9kcf/OovCRSbn59wufVdTq1LLvpEwa9GqXa620CFbFC
      Xbp4cXlZlllZWaHZbPLy5Us++ugjOp0OH3/8MWtrawBUKhU+/PBDCoUCn332GR9//DHpdJqP
      PvqIYvGbK2/fdoYeBjWZrMwmI2QGQK+P025BGmg05SrB0XmC9ha5TJFWNU9ofAa1U0NWdAat
      FlbxhMP9HFNz8xwfbqDZI0yO2Dnc38M3e5+wQ2VzY4vg2DT9Sp5qz+DO0gSbu4eYHX5isRjl
      SpeB0UNT3LR7JmrZTayhcZxKg0Kthc1sJjI+g1TPo9lDBCwSqb0Uo7e/Q3rzgGhygfHoP/5+
      fh68Otw+GAyoVqu43W4ePnzIe++9x/HxMaqqksvl+NGPfsTm5iYTExNsbm5SLpfxeDxsbm6S
      SCSGPYw3ytBXgFddzQFkRScR9dPu9LGYzUiShNTro8stWgOV/aMUxcwhff00utOs1+l3m2Ty
      ZXwjYwTdAtVGj+WbS1jMAv2uSKfX4+Awg+AIMBX2katUWbp5G6/djKH1SWUylNMpan0NY9Cm
      3pI53D9EwcbU1BgzU1N0qiX2UwWaLZFGV+PW9Vk6LRFJ6nN0lBvuBP4ZJpPp7NXy3r17RCIR
      /H4/3W73rDOiyWSi2+1iGAYejwen08m1a9eYnZ29lBvkoa8Autbnxd4JfbvMwmiYVKHGtaVJ
      3A4BS3WXkuTk2vQI7Z5EJJHA55xFkWWEaAyzRUVsq4wlwthtFtB1UHtsp0qMz0VxWH14vX6S
      0VF8LgcWdEI2EzvbW0RHk2iKznf+0/dwW3SanR6uiAu5VWM0nCDkc2K1mbGYLCSSDqyChmoP
      MOLUOCg3SU4nUTsdItGLU0ak2+2ysbGBw+EgmUxSq9V4//33efr0KWNjY6ytrTE/P8/q6ip3
      7txhe3sbq9WKqqpsb29fqUGvuJiclxpUluVLHwm6UGrQq6oQr4eiKPT755NNPq/rvK0oioIk
      /Sm7P1Q16NXi83pczdX58Ur/NPQV4BW6PuDw5Sq+ufuoJ7uU6n2u3biBXevzfGsTk83Pu8vX
      v7RbbzYq2FwhnGedIQ1y2QLJifFv9NnlUolYPE6vkSdVN7M07eH4WMVqkYm9xSUCDcPg5cuX
      5PN55ufncblcZLNZHjx4QD6fZ3Nzk9nZWarVKqIocuvWLdbX13nnnXcunRhu6A4gCDZmJ+Lk
      FOi3O1iQyRRF5kIWFFXDYTfRqhVJZ4tMjo9yWKgQ8LuxtyTcAR+lbApHIM6g26VWzJItikTj
      EYKhAM2mRDTkZHtzG89IEq1VpNpUWFic5PAwg2DzEovHKVd7mHQwDDu9rkLjZJNiRSQZ9ZI+
      rjI1OU7m8BC7f4SAx4HHKmAJjOC2Dj2I9lcxmUzcvHkTXdeZmJjg+fPnZytIv9/HbDajaRp3
      797l2bNnlMtlLBYLwWBwyJa/eS7UNzh3/RYT8Rhulx0QmJpfxGvS2NnfQ9Y0eu0G/sQcXotC
      Kl9G6VbJF5t0ez3AYH93F1XrY7U72HqxhcXpRO41afckUukcgsPH0liUQr3O3OINvE4LhiaR
      y+ep5dKUu6fJrej4DD6HQalcpVM9oVhvMjp1DbcVBLlNqtrCOcSzv6+DoigYhkGpVKJcLrO7
      u4uiKDSbTW7evEm1WuX58+fcvn2bmZkZHjx4wOrq6rDNfuMMfQXQNYnNoyqyTcYz4qLcFViY
      84IqUUsdYPPFuD09ys5BDm8kgc9mx6KP8d2wid5AZTrZx+b14ndaGYsFOcpVsFvNmMxWQl4H
      qBDwefFHx/A6rdhNJqYtQVL7B4TiY+iaidvfvY/bLtDp9nHF7NSKJQRfgrGAClYXo9EIdqsd
      t0NAbpVwGP4LL8aTZZlr167hdruZnJykXC7z/PlzZmdnefHiBTdu3GB7e5tPP/2U5eVlNjc3
      WV5eHrbZb5y3Tg36OmiqgqqbTnMD54qB1JewOZwIb/D+Py81qKIoXzovcBm5MGpQTdO+1TCo
      YPp2GlaYLRY0Vfnao5bnzXnO1WUPPb8Kvw/dARwOBw6HA3UgIbY6CBYbQb/3rxbMNQwdVdWx
      DqHM+EVAVdVzWQGuOH2Y+P3+4TvAK3R1wPbac6KL1/G67AxUA73bQjQgHgggDxQcdoPDwxqL
      i5PDNvdC0+l0+NWvfsX8/DySJFGpVPje977Hw4cP+eCDD4jH4xwcHLC6usp7773H8+fP8Xq9
      /OAHP+DDDz9kcXGRpaWlYQ/jjTJ0B7C5fIwmEowmE2x98QdUVcBms9JBgHaFx//2Bfc/+C/D
      NvOtoN1uI4oiwWCQly9fAqeFcGdnZxkMTsXjx8fHGIaB1+ulUChw7949SqUSqqp+KUN6WbhQ
      YVB0jb6sEI6OoMoy9WaXuWvTKL3L98X8Pfj9fn72s5/xySef8OMf/5hkMvkXGqJbt27xwx/+
      kJWVFX7605+STqdZW1uj0+mQyWSGZPnw+P+lXw7oOkfT/AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='SD Table (PBA50 vs BAUS)' width='192'>
      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
      dAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='SD Table (compare two or more)' width='192'>
      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
      +QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Superdistrict Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Superdistrict Map' width='192'>
      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
      JyvcXvgAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
