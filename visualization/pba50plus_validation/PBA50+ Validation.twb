<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1017.0948                               -->
<workbook locale='en_US' original-version='18.1' source-build='2023.3.0 (20233.23.1017.0948)' source-platform='win' version='18.1' xml:base='http://localhost:9100' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <SpatialFileLayer />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location derived-from='https://10ay.online.tableau.com/t/metropolitantransportationcommission/workbooks/CensusvsPBA50vsContingencyPlanrunscomparison?rev=2.1' id='CensusvsPBA50vsContingencyPlanrunscomparisonv2' path='/t/metropolitantransportationcommission/workbooks' revision='1.0' site='metropolitantransportationcommission' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='TAZ-level data' inline='true' name='federated.0kyp62f0hvmbrs19zsgps0kbnizi' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='superdistrict-county' name='textscan.1v8s6if1ujs6u516sh0g90n8mu4t'>
            <connection class='textscan' directory='X:/travel-model-one-master/utilities/geographies' filename='taz-superdistrict-county.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='Travel Analysis Zones' name='ogrdirect.1c8sxet1mhg3lx173fw1q0zgbv0n'>
            <connection class='ogrdirect' directory='M:/Data/Urban/BAUS/visualization_design/data/data_viz_ready/spatial' filename='Travel Analysis Zones.shp' server='' tablename='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='taz_data_long' name='textscan.0qjh7st1rvhg341gqhhlx0kenr0m'>
            <connection class='textscan' directory='E:/GitHub/BAUS/bayarea_urbansim/visualization/pba50plus_validation' filename='taz_data_long.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='ogrdirect.1c8sxet1mhg3lx173fw1q0zgbv0n' name='Travel Analysis Zones.shp' table='[Travel Analysis Zones.shp]' type='table'>
          <columns>
            <column datatype='integer' name='SUPERD' ordinal='0' />
            <column datatype='integer' name='TAZ1454' ordinal='1' />
            <column datatype='real' name='Shape__Are' ordinal='2' />
            <column datatype='real' name='Shape__Len' ordinal='3' />
            <column datatype='integer' name='within_5mi' ordinal='4' />
            <column datatype='integer' name='within_3mi' ordinal='5' />
            <column datatype='integer' name='within_2mi' ordinal='6' />
            <column datatype='spatial' name='Geometry' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.0qjh7st1rvhg341gqhhlx0kenr0m' name='taz_data_long.csv' table='[taz_data_long#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='ZONE' ordinal='0' />
              <column datatype='string' name='variable' ordinal='1' />
              <column datatype='real' name='value' ordinal='2' />
              <column datatype='string' name='source' ordinal='3' />
              <column datatype='integer' name='year' ordinal='4' />
            </columns>
          </relation>
          <relation connection='ogrdirect.1c8sxet1mhg3lx173fw1q0zgbv0n' name='Travel Analysis Zones.shp' table='[Travel Analysis Zones.shp]' type='table'>
            <columns>
              <column datatype='integer' name='SUPERD' ordinal='0' />
              <column datatype='integer' name='TAZ1454' ordinal='1' />
              <column datatype='real' name='Shape__Are' ordinal='2' />
              <column datatype='real' name='Shape__Len' ordinal='3' />
              <column datatype='integer' name='within_5mi' ordinal='4' />
              <column datatype='integer' name='within_3mi' ordinal='5' />
              <column datatype='integer' name='within_2mi' ordinal='6' />
              <column datatype='spatial' name='Geometry' ordinal='7' />
            </columns>
          </relation>
          <relation connection='textscan.1v8s6if1ujs6u516sh0g90n8mu4t' name='taz-superdistrict-county.csv' table='[taz-superdistrict-county#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='ZONE' ordinal='0' />
              <column datatype='integer' name='SD' ordinal='1' />
              <column datatype='integer' name='COUNTY' ordinal='2' />
              <column datatype='string' name='SD_NAME' ordinal='3' />
              <column datatype='string' name='COUNTY_NAME' ordinal='4' />
              <column datatype='string' name='SD_NUM_NAME' ordinal='5' />
              <column datatype='string' name='COUNTY_NUM_NAME' ordinal='6' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[COUNTY]' value='[taz-superdistrict-county.csv].[COUNTY]' />
          <map key='[COUNTY_NAME]' value='[taz-superdistrict-county.csv].[COUNTY_NAME]' />
          <map key='[COUNTY_NUM_NAME]' value='[taz-superdistrict-county.csv].[COUNTY_NUM_NAME]' />
          <map key='[Geometry]' value='[Travel Analysis Zones.shp].[Geometry]' />
          <map key='[SD]' value='[taz-superdistrict-county.csv].[SD]' />
          <map key='[SD_NAME]' value='[taz-superdistrict-county.csv].[SD_NAME]' />
          <map key='[SD_NUM_NAME]' value='[taz-superdistrict-county.csv].[SD_NUM_NAME]' />
          <map key='[SUPERD]' value='[Travel Analysis Zones.shp].[SUPERD]' />
          <map key='[Shape__Are]' value='[Travel Analysis Zones.shp].[Shape__Are]' />
          <map key='[Shape__Len]' value='[Travel Analysis Zones.shp].[Shape__Len]' />
          <map key='[TAZ1454]' value='[Travel Analysis Zones.shp].[TAZ1454]' />
          <map key='[ZONE (taz-superdistrict-county.csv)]' value='[taz-superdistrict-county.csv].[ZONE]' />
          <map key='[ZONE]' value='[taz_data_long.csv].[ZONE]' />
          <map key='[source]' value='[taz_data_long.csv].[source]' />
          <map key='[value]' value='[taz_data_long.csv].[value]' />
          <map key='[variable]' value='[taz_data_long.csv].[variable]' />
          <map key='[within_2mi]' value='[Travel Analysis Zones.shp].[within_2mi]' />
          <map key='[within_3mi]' value='[Travel Analysis Zones.shp].[within_3mi]' />
          <map key='[within_5mi]' value='[Travel Analysis Zones.shp].[within_5mi]' />
          <map key='[year]' value='[taz_data_long.csv].[year]' />
        </cols>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[taz_data_long.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[taz-superdistrict-county.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ZONE</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ZONE]</local-name>
            <parent-name>[taz_data_long.csv]</parent-name>
            <remote-alias>ZONE</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz_data_long.csv_7DEF6B455F6F48C4A4E2CFCFE2A26C3F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>variable</remote-name>
            <remote-type>129</remote-type>
            <local-name>[variable]</local-name>
            <parent-name>[taz_data_long.csv]</parent-name>
            <remote-alias>variable</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz_data_long.csv_7DEF6B455F6F48C4A4E2CFCFE2A26C3F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[value]</local-name>
            <parent-name>[taz_data_long.csv]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz_data_long.csv_7DEF6B455F6F48C4A4E2CFCFE2A26C3F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source</remote-name>
            <remote-type>129</remote-type>
            <local-name>[source]</local-name>
            <parent-name>[taz_data_long.csv]</parent-name>
            <remote-alias>source</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz_data_long.csv_7DEF6B455F6F48C4A4E2CFCFE2A26C3F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[taz_data_long.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz_data_long.csv_7DEF6B455F6F48C4A4E2CFCFE2A26C3F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SUPERD</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SUPERD]</local-name>
            <parent-name>[Travel Analysis Zones.shp]</parent-name>
            <remote-alias>SUPERD</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TAZ1454</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TAZ1454]</local-name>
            <parent-name>[Travel Analysis Zones.shp]</parent-name>
            <remote-alias>TAZ1454</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shape__Are</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shape__Are]</local-name>
            <parent-name>[Travel Analysis Zones.shp]</parent-name>
            <remote-alias>Shape__Are</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shape__Len</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shape__Len]</local-name>
            <parent-name>[Travel Analysis Zones.shp]</parent-name>
            <remote-alias>Shape__Len</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>within_5mi</remote-name>
            <remote-type>20</remote-type>
            <local-name>[within_5mi]</local-name>
            <parent-name>[Travel Analysis Zones.shp]</parent-name>
            <remote-alias>within_5mi</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>within_3mi</remote-name>
            <remote-type>20</remote-type>
            <local-name>[within_3mi]</local-name>
            <parent-name>[Travel Analysis Zones.shp]</parent-name>
            <remote-alias>within_3mi</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>within_2mi</remote-name>
            <remote-type>20</remote-type>
            <local-name>[within_2mi]</local-name>
            <parent-name>[Travel Analysis Zones.shp]</parent-name>
            <remote-alias>within_2mi</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Geometry</remote-name>
            <remote-type>8</remote-type>
            <local-name>[Geometry]</local-name>
            <parent-name>[Travel Analysis Zones.shp]</parent-name>
            <remote-alias>Geometry</remote-alias>
            <ordinal>12</ordinal>
            <local-type>spatial</local-type>
            <aggregation>Collect</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ZONE</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ZONE (taz-superdistrict-county.csv)]</local-name>
            <parent-name>[taz-superdistrict-county.csv]</parent-name>
            <remote-alias>ZONE</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz-superdistrict-county.csv_35F675E99FDD426CAB6A334DE6C59C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SD</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SD]</local-name>
            <parent-name>[taz-superdistrict-county.csv]</parent-name>
            <remote-alias>SD</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz-superdistrict-county.csv_35F675E99FDD426CAB6A334DE6C59C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[COUNTY]</local-name>
            <parent-name>[taz-superdistrict-county.csv]</parent-name>
            <remote-alias>COUNTY</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz-superdistrict-county.csv_35F675E99FDD426CAB6A334DE6C59C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SD_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SD_NAME]</local-name>
            <parent-name>[taz-superdistrict-county.csv]</parent-name>
            <remote-alias>SD_NAME</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz-superdistrict-county.csv_35F675E99FDD426CAB6A334DE6C59C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTY_NAME]</local-name>
            <parent-name>[taz-superdistrict-county.csv]</parent-name>
            <remote-alias>COUNTY_NAME</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz-superdistrict-county.csv_35F675E99FDD426CAB6A334DE6C59C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SD_NUM_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SD_NUM_NAME]</local-name>
            <parent-name>[taz-superdistrict-county.csv]</parent-name>
            <remote-alias>SD_NUM_NAME</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz-superdistrict-county.csv_35F675E99FDD426CAB6A334DE6C59C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY_NUM_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTY_NUM_NAME]</local-name>
            <parent-name>[taz-superdistrict-county.csv]</parent-name>
            <remote-alias>COUNTY_NUM_NAME</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz-superdistrict-county.csv_35F675E99FDD426CAB6A334DE6C59C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Measure Names' datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:TOTHH:qk:6]&quot;' value='Difference' />
          <alias key='&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:TOTHH:qk:4]&quot;' value='% Difference' />
        </aliases>
      </column>
      <column caption='County' datatype='integer' name='[COUNTY]' role='measure' type='quantitative' />
      <column caption='County Name' datatype='string' name='[COUNTY_NAME]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='County Num Name' datatype='string' name='[COUNTY_NUM_NAME]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Growth' datatype='real' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN(SUM([value])) - LOOKUP(ZN(SUM([value])), FIRST())'>
          <table-calc ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[year]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Growth Real' datatype='real' name='[Calculation2]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN(SUM([value])) - LOOKUP(ZN(SUM([value])), FIRST())'>
          <table-calc ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Value by SD Num Name' datatype='real' name='[Calculation_878764944827150358]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [SD_NUM_NAME]: SUM([value]) }' />
      </column>
      <column caption='Shape' datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
      <column caption='Measure Values' datatype='real' name='[Multiple Values]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='SD1' datatype='integer' name='[SD]' role='dimension' type='ordinal' />
      <column caption='Sd Name' datatype='string' name='[SD_NAME]' role='dimension' type='nominal' />
      <column caption='Sd Num Name' datatype='string' name='[SD_NUM_NAME]' role='dimension' type='nominal' />
      <column caption='Superd' datatype='integer' name='[SUPERD]' role='measure' type='quantitative' />
      <column caption='Taz1454' datatype='integer' name='[TAZ1454]' role='measure' type='quantitative' />
      <column caption='Zone' datatype='integer' name='[ZONE]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Travel Analysis Zones.shp' datatype='table' name='[__tableau_internal_object_id__].[Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='taz-superdistrict-county.csv' datatype='table' name='[__tableau_internal_object_id__].[taz-superdistrict-county.csv_35F675E99FDD426CAB6A334DE6C59C51]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='taz_data_long.csv' datatype='table' name='[__tableau_internal_object_id__].[taz_data_long.csv_7DEF6B455F6F48C4A4E2CFCFE2A26C3F]' role='measure' type='quantitative' />
      <column datatype='string' hidden='true' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
      <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
      <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
      <column caption='Within 2Mi' datatype='integer' name='[within_2mi]' role='measure' type='quantitative' />
      <column caption='Within 3Mi' datatype='integer' name='[within_3mi]' role='measure' type='quantitative' />
      <column caption='Within 5Mi' datatype='integer' name='[within_5mi]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
      <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:10]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:11]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]' ordering-type='Field' type='Difference'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:12]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Table' type='Difference'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:13]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='Difference'>
          <order field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NUM_NAME:nk]' />
          <order field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk]' />
          <order field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' />
          <order field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]' />
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:14]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='Difference'>
          <order field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk]' />
          <order field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' />
          <order field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]' />
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:15]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='Difference'>
          <order field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' />
          <order field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]' />
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[source]' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='Difference'>
          <order field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' />
          <order field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]' />
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:3]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:4]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:5]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:6]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='Difference'>
          <order field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' />
          <order field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[year]' />
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:7]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[year]' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:8]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[year]' ordering-type='Field' type='Difference'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:9]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[source]' ordering-type='Field' type='Difference'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[COUNTY_NUM_NAME]' derivation='None' name='[none:COUNTY_NUM_NAME:nk]' pivot='key' type='nominal' />
      <column-instance column='[SD_NUM_NAME]' derivation='None' name='[none:SD_NUM_NAME:nk]' pivot='key' type='nominal' />
      <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
      <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
      <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[value]' derivation='Sum' name='[pcdf:sum:value:qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[source]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[pcdf:sum:value:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[pcdf:sum:value:qk:3]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[pcdf:sum:value:qk:4]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[pcdf:sum:value:qk:5]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='PctDiff'>
          <order field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NUM_NAME:nk]' />
          <order field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk]' />
          <order field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' />
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[pcdf:sum:value:qk:6]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='PctDiff'>
          <order field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk]' />
          <order field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' />
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[pcdf:sum:value:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[source]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[pcto:sum:value:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[year]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[year]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation2]' derivation='User' name='[usr:Calculation2:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]' ordering-type='Field' />
      </column-instance>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='2000' show-hidden-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:value:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:value:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:10]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:11]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:12]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:13]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:14]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:15]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:2]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:3]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:4]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:5]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:6]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:7]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:8]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_878764944825671700:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_878764944826802197:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:value:qk:2]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:value:qk:3]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:value:qk:4]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:value:qk:5]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:value:qk:6]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcto:sum:value:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[usr:Calculation1:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[usr:Calculation2:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:1]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:9]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:COUNTY_NUM_NAME:nk]' palette='superfishel_stone_10_0' type='palette'>
            <map to='#55ad89'>
              <bucket>&quot;5 Contra Costa&quot;</bucket>
            </map>
            <map to='#6388b4'>
              <bucket>&quot;1 San Francisco&quot;</bucket>
            </map>
            <map to='#8cc2ca'>
              <bucket>&quot;4 Alameda&quot;</bucket>
            </map>
            <map to='#a9b5ae'>
              <bucket>&quot;9 Marin&quot;</bucket>
            </map>
            <map to='#baa094'>
              <bucket>&quot;8 Sonoma&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;7 Napa&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;6 Solano&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;3 Santa Clara&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;2 San Mateo&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:source:nk]' palette='miller_stone_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;census&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;v6: additional pipline updates, costar data&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;v7: additional pipline updates, costar data, fixed vacancy&quot;</bucket>
            </map>
            <map to='#4f6980'>
              <bucket>&quot;Census&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BAUS main current with PBA50 equivalent inputs&quot;</bucket>
            </map>
            <map to='#638b66'>
              <bucket>&quot;v2: BASIS buildings, updated control totals&quot;</bucket>
            </map>
            <map to='#849db1'>
              <bucket>&quot;PBA50&quot;</bucket>
            </map>
            <map to='#849db1'>
              <bucket>&quot;v0: PBA50 equivalent inputs&quot;</bucket>
            </map>
            <map to='#a2ceaa'>
              <bucket>&quot;v1: BASIS buildings in dev pipeline&quot;</bucket>
            </map>
            <map to='#a2ceaa'>
              <bucket>&quot;v7: housing preservation activated in 2025&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BAUS main current with BASIS buildings, updated control totals&quot;</bucket>
            </map>
            <map to='#b66353'>
              <bucket>&quot;v6: additional pipline updates, costar data, fixed vacancy&quot;</bucket>
            </map>
            <map to='#bfbb60'>
              <bucket>&quot;v3: aligned 2020 HHINC control totals&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;baus_main_current&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;BAUS main current with BASIS buildings in dev pipeline&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;run182&quot;</bucket>
            </map>
            <map to='#f47942'>
              <bucket>&quot;v4: aligned 2020 HHINC+employment control totals&quot;</bucket>
            </map>
            <map to='#fbb04e'>
              <bucket>&quot;v5: aligned control totals, updated pipeline&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:source:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Census&quot;</bucket>
            <bucket>&quot;PBA50&quot;</bucket>
            <bucket>&quot;BAUS main current with PBA50 equivalent inputs&quot;</bucket>
            <bucket>&quot;BAUS main current with BASIS buildings in dev pipeline&quot;</bucket>
          </dictionary>
        </manual-sort>
        <manual-sort column='[none:variable:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;TOTHH&quot;</bucket>
            <bucket>&quot;TOTEMP&quot;</bucket>
            <bucket>&quot;RES_UNITS&quot;</bucket>
            <bucket>&quot;HHINCQ1&quot;</bucket>
            <bucket>&quot;HHINCQ2&quot;</bucket>
            <bucket>&quot;HHINCQ3&quot;</bucket>
            <bucket>&quot;HHINCQ4&quot;</bucket>
            <bucket>&quot;AGREMPN&quot;</bucket>
            <bucket>&quot;FPSEMPN&quot;</bucket>
            <bucket>&quot;HEREMPN&quot;</bucket>
            <bucket>&quot;MWTEMPN&quot;</bucket>
            <bucket>&quot;OTHEMPN&quot;</bucket>
            <bucket>&quot;RETEMPN&quot;</bucket>
            <bucket>&quot;AGE0004&quot;</bucket>
            <bucket>&quot;AGE0519&quot;</bucket>
            <bucket>&quot;AGE2044&quot;</bucket>
            <bucket>&quot;AGE4564&quot;</bucket>
            <bucket>&quot;AGE65P&quot;</bucket>
            <bucket>&quot;COLLFTE&quot;</bucket>
            <bucket>&quot;COLLPTE&quot;</bucket>
            <bucket>&quot;EMPRES&quot;</bucket>
            <bucket>&quot;gqpop&quot;</bucket>
            <bucket>&quot;HHPOP&quot;</bucket>
            <bucket>&quot;HSENROLL&quot;</bucket>
            <bucket>&quot;MFDU&quot;</bucket>
            <bucket>&quot;OPRKCST&quot;</bucket>
            <bucket>&quot;PRKCST&quot;</bucket>
            <bucket>&quot;SFDU&quot;</bucket>
            <bucket>&quot;SHPOP62P&quot;</bucket>
            <bucket>&quot;TOTPOP&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Travel Analysis Zones.shp' id='Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7'>
            <properties context=''>
              <relation connection='ogrdirect.1c8sxet1mhg3lx173fw1q0zgbv0n' name='Travel Analysis Zones.shp' table='[Travel Analysis Zones.shp]' type='table'>
                <columns>
                  <column datatype='integer' name='SUPERD' ordinal='0' />
                  <column datatype='integer' name='TAZ1454' ordinal='1' />
                  <column datatype='real' name='Shape__Are' ordinal='2' />
                  <column datatype='real' name='Shape__Len' ordinal='3' />
                  <column datatype='integer' name='within_5mi' ordinal='4' />
                  <column datatype='integer' name='within_3mi' ordinal='5' />
                  <column datatype='integer' name='within_2mi' ordinal='6' />
                  <column datatype='spatial' name='Geometry' ordinal='7' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='taz-superdistrict-county.csv' id='taz-superdistrict-county.csv_35F675E99FDD426CAB6A334DE6C59C51'>
            <properties context=''>
              <relation connection='textscan.1v8s6if1ujs6u516sh0g90n8mu4t' name='taz-superdistrict-county.csv' table='[taz-superdistrict-county#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='ZONE' ordinal='0' />
                  <column datatype='integer' name='SD' ordinal='1' />
                  <column datatype='integer' name='COUNTY' ordinal='2' />
                  <column datatype='string' name='SD_NAME' ordinal='3' />
                  <column datatype='string' name='COUNTY_NAME' ordinal='4' />
                  <column datatype='string' name='SD_NUM_NAME' ordinal='5' />
                  <column datatype='string' name='COUNTY_NUM_NAME' ordinal='6' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='taz_data_long.csv' id='taz_data_long.csv_7DEF6B455F6F48C4A4E2CFCFE2A26C3F'>
            <properties context=''>
              <relation connection='textscan.0qjh7st1rvhg341gqhhlx0kenr0m' name='taz_data_long.csv' table='[taz_data_long#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='ZONE' ordinal='0' />
                  <column datatype='string' name='variable' ordinal='1' />
                  <column datatype='real' name='value' ordinal='2' />
                  <column datatype='string' name='source' ordinal='3' />
                  <column datatype='integer' name='year' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[ZONE]' />
              <expression op='[TAZ1454]' />
            </expression>
            <first-end-point object-id='taz_data_long.csv_7DEF6B455F6F48C4A4E2CFCFE2A26C3F' />
            <second-end-point object-id='Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[ZONE]' />
              <expression op='[ZONE (taz-superdistrict-county.csv)]' />
            </expression>
            <first-end-point object-id='taz_data_long.csv_7DEF6B455F6F48C4A4E2CFCFE2A26C3F' />
            <second-end-point object-id='taz-superdistrict-county.csv_35F675E99FDD426CAB6A334DE6C59C51' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='taz_data_wide_vacancy' inline='true' name='federated.183kuxz0zrxkm51f03wsi1n11km7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='taz_data_wide_vacancy' name='textscan.0wfh7yg0gygdzp1c8mm261l5yf1f'>
            <connection class='textscan' directory='E:/GitHub/BAUS/bayarea_urbansim/visualization/pba50plus_validation' filename='taz_data_wide_vacancy.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='superdistrict-county' name='textscan.0ymvze51qxnmla122zli9059xu6k'>
            <connection class='textscan' directory='X:/travel-model-one-master/utilities/geographies' filename='taz-superdistrict-county.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0ymvze51qxnmla122zli9059xu6k' name='taz-superdistrict-county.csv' table='[taz-superdistrict-county#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='ZONE' ordinal='0' />
            <column datatype='integer' name='SD' ordinal='1' />
            <column datatype='integer' name='COUNTY' ordinal='2' />
            <column datatype='string' name='SD_NAME' ordinal='3' />
            <column datatype='string' name='COUNTY_NAME' ordinal='4' />
            <column datatype='string' name='SD_NUM_NAME' ordinal='5' />
            <column datatype='string' name='COUNTY_NUM_NAME' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.0wfh7yg0gygdzp1c8mm261l5yf1f' name='taz_data_wide_vacancy.csv' table='[taz_data_wide_vacancy#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='TAZ' ordinal='0' />
              <column datatype='real' name='non_residential_sqft' ordinal='1' />
              <column datatype='real' name='non_residential_vacancy' ordinal='2' />
              <column datatype='real' name='residential_units' ordinal='3' />
              <column datatype='real' name='residential_vacancy' ordinal='4' />
              <column datatype='string' name='source' ordinal='5' />
              <column datatype='string' date-parse-format='yyyy' name='year' ordinal='6' />
            </columns>
          </relation>
          <relation connection='textscan.0ymvze51qxnmla122zli9059xu6k' name='taz-superdistrict-county.csv' table='[taz-superdistrict-county#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='ZONE' ordinal='0' />
              <column datatype='integer' name='SD' ordinal='1' />
              <column datatype='integer' name='COUNTY' ordinal='2' />
              <column datatype='string' name='SD_NAME' ordinal='3' />
              <column datatype='string' name='COUNTY_NAME' ordinal='4' />
              <column datatype='string' name='SD_NUM_NAME' ordinal='5' />
              <column datatype='string' name='COUNTY_NUM_NAME' ordinal='6' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[taz_data_wide_vacancy.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[taz-superdistrict-county.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TAZ</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TAZ]</local-name>
            <parent-name>[taz_data_wide_vacancy.csv]</parent-name>
            <remote-alias>TAZ</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz_data_wide_vacancy.csv_A8959EF309D149BBB60C941C3181FA48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>non_residential_sqft</remote-name>
            <remote-type>5</remote-type>
            <local-name>[non_residential_sqft]</local-name>
            <parent-name>[taz_data_wide_vacancy.csv]</parent-name>
            <remote-alias>non_residential_sqft</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz_data_wide_vacancy.csv_A8959EF309D149BBB60C941C3181FA48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>non_residential_vacancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[non_residential_vacancy]</local-name>
            <parent-name>[taz_data_wide_vacancy.csv]</parent-name>
            <remote-alias>non_residential_vacancy</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz_data_wide_vacancy.csv_A8959EF309D149BBB60C941C3181FA48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>residential_units</remote-name>
            <remote-type>5</remote-type>
            <local-name>[residential_units]</local-name>
            <parent-name>[taz_data_wide_vacancy.csv]</parent-name>
            <remote-alias>residential_units</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz_data_wide_vacancy.csv_A8959EF309D149BBB60C941C3181FA48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>residential_vacancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[residential_vacancy]</local-name>
            <parent-name>[taz_data_wide_vacancy.csv]</parent-name>
            <remote-alias>residential_vacancy</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz_data_wide_vacancy.csv_A8959EF309D149BBB60C941C3181FA48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source</remote-name>
            <remote-type>129</remote-type>
            <local-name>[source]</local-name>
            <parent-name>[taz_data_wide_vacancy.csv]</parent-name>
            <remote-alias>source</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz_data_wide_vacancy.csv_A8959EF309D149BBB60C941C3181FA48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>129</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[taz_data_wide_vacancy.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz_data_wide_vacancy.csv_A8959EF309D149BBB60C941C3181FA48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ZONE</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ZONE]</local-name>
            <parent-name>[taz-superdistrict-county.csv]</parent-name>
            <remote-alias>ZONE</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz-superdistrict-county.csv_AD28CC250C734283BC405DD3F90F7E77]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SD</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SD]</local-name>
            <parent-name>[taz-superdistrict-county.csv]</parent-name>
            <remote-alias>SD</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz-superdistrict-county.csv_AD28CC250C734283BC405DD3F90F7E77]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[COUNTY]</local-name>
            <parent-name>[taz-superdistrict-county.csv]</parent-name>
            <remote-alias>COUNTY</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz-superdistrict-county.csv_AD28CC250C734283BC405DD3F90F7E77]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SD_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SD_NAME]</local-name>
            <parent-name>[taz-superdistrict-county.csv]</parent-name>
            <remote-alias>SD_NAME</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz-superdistrict-county.csv_AD28CC250C734283BC405DD3F90F7E77]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTY_NAME]</local-name>
            <parent-name>[taz-superdistrict-county.csv]</parent-name>
            <remote-alias>COUNTY_NAME</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz-superdistrict-county.csv_AD28CC250C734283BC405DD3F90F7E77]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SD_NUM_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SD_NUM_NAME]</local-name>
            <parent-name>[taz-superdistrict-county.csv]</parent-name>
            <remote-alias>SD_NUM_NAME</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz-superdistrict-county.csv_AD28CC250C734283BC405DD3F90F7E77]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY_NUM_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTY_NUM_NAME]</local-name>
            <parent-name>[taz-superdistrict-county.csv]</parent-name>
            <remote-alias>COUNTY_NUM_NAME</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz-superdistrict-county.csv_AD28CC250C734283BC405DD3F90F7E77]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='County' datatype='integer' name='[COUNTY]' role='measure' type='quantitative' />
      <column caption='County Name' datatype='string' name='[COUNTY_NAME]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='County Num Name' datatype='string' name='[COUNTY_NUM_NAME]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Res' datatype='real' default-format='p0.0%' name='[Calculation_91760862833213440]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([residential_units]*[residential_vacancy]) / sum([residential_units])' />
      </column>
      <column caption='Non-Res' datatype='real' default-format='p0.0%' name='[Calculation_91760862837256194]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([non_residential_sqft]*[non_residential_vacancy]) / sum([non_residential_sqft])' />
      </column>
      <column caption='Sd Name' datatype='string' name='[SD_NAME]' role='dimension' type='nominal' />
      <column caption='Sd Num Name' datatype='string' name='[SD_NUM_NAME]' role='dimension' type='nominal' />
      <column caption='Zone' datatype='integer' name='[ZONE]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='taz-superdistrict-county.csv' datatype='table' name='[__tableau_internal_object_id__].[taz-superdistrict-county.csv_AD28CC250C734283BC405DD3F90F7E77]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='taz_data_wide_vacancy.csv' datatype='table' name='[__tableau_internal_object_id__].[taz_data_wide_vacancy.csv_A8959EF309D149BBB60C941C3181FA48]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Non Residential Sqft' datatype='real' name='[non_residential_sqft]' role='measure' type='quantitative' />
      <column caption='Non Residential Vacancy' datatype='real' name='[non_residential_vacancy]' role='measure' type='quantitative' />
      <column caption='Residential Units' datatype='real' name='[residential_units]' role='measure' type='quantitative' />
      <column caption='Residential Vacancy' datatype='real' name='[residential_vacancy]' role='measure' type='quantitative' />
      <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
      <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='taz-superdistrict-county.csv' id='taz-superdistrict-county.csv_AD28CC250C734283BC405DD3F90F7E77'>
            <properties context=''>
              <relation connection='textscan.0ymvze51qxnmla122zli9059xu6k' name='taz-superdistrict-county.csv' table='[taz-superdistrict-county#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='ZONE' ordinal='0' />
                  <column datatype='integer' name='SD' ordinal='1' />
                  <column datatype='integer' name='COUNTY' ordinal='2' />
                  <column datatype='string' name='SD_NAME' ordinal='3' />
                  <column datatype='string' name='COUNTY_NAME' ordinal='4' />
                  <column datatype='string' name='SD_NUM_NAME' ordinal='5' />
                  <column datatype='string' name='COUNTY_NUM_NAME' ordinal='6' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='taz_data_wide_vacancy.csv' id='taz_data_wide_vacancy.csv_A8959EF309D149BBB60C941C3181FA48'>
            <properties context=''>
              <relation connection='textscan.0wfh7yg0gygdzp1c8mm261l5yf1f' name='taz_data_wide_vacancy.csv' table='[taz_data_wide_vacancy#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='TAZ' ordinal='0' />
                  <column datatype='real' name='non_residential_sqft' ordinal='1' />
                  <column datatype='real' name='non_residential_vacancy' ordinal='2' />
                  <column datatype='real' name='residential_units' ordinal='3' />
                  <column datatype='real' name='residential_vacancy' ordinal='4' />
                  <column datatype='string' name='source' ordinal='5' />
                  <column datatype='string' date-parse-format='yyyy' name='year' ordinal='6' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[TAZ]' />
              <expression op='[ZONE]' />
            </expression>
            <first-end-point object-id='taz_data_wide_vacancy.csv_A8959EF309D149BBB60C941C3181FA48' />
            <second-end-point object-id='taz-superdistrict-county.csv_AD28CC250C734283BC405DD3F90F7E77' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='County Chart'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>As of 2023-09-07, we have not prepared &quot;new BAUS&quot; 2023 metrics, so these exist only for Census and PBA50 (run182).</run>
          </formatted-text>
        </caption>
      </layout-options>
      <repository-location derived-from='https://10ay.online.tableau.com/t/metropolitantransportationcommission/workbooks/CensusvsPBA50vsContingencyPlanrunscomparison/CountyChart?rev=' id='CountyChart' path='/t/metropolitantransportationcommission/workbooks/CensusvsPBA50vsContingencyPlanrunscomparisonv2' revision='' site='metropolitantransportationcommission' />
      <table>
        <view>
          <datasources>
            <datasource caption='TAZ-level data' name='federated.0kyp62f0hvmbrs19zsgps0kbnizi' />
          </datasources>
          <datasource-dependencies datasource='federated.0kyp62f0hvmbrs19zsgps0kbnizi'>
            <column caption='County Num Name' datatype='string' name='[COUNTY_NUM_NAME]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[COUNTY_NUM_NAME]' derivation='None' name='[none:COUNTY_NUM_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]'>
            <groupfilter function='level-members' level='[none:source:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:variable:nk]' member='&quot;RES_UNITS&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]'>
            <groupfilter function='member' level='[none:year:ok]' member='2025' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NUM_NAME:nk] / [federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk])</rows>
        <cols>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]</cols>
      </table>
      <simple-id uuid='{081D57D3-BC8F-41A3-BD52-1C86D0808A36}' />
    </worksheet>
    <worksheet name='County Map'>
      <repository-location derived-from='https://10ay.online.tableau.com/t/metropolitantransportationcommission/workbooks/CensusvsPBA50vsContingencyPlanrunscomparison/CountyMap?rev=' id='CountyMap' path='/t/metropolitantransportationcommission/workbooks/CensusvsPBA50vsContingencyPlanrunscomparisonv2' revision='' site='metropolitantransportationcommission' />
      <table>
        <view>
          <datasources>
            <datasource caption='TAZ-level data' name='federated.0kyp62f0hvmbrs19zsgps0kbnizi' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0kyp62f0hvmbrs19zsgps0kbnizi'>
            <column caption='County Name' datatype='string' name='[COUNTY_NAME]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Shape' datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column-instance column='[COUNTY_NAME]' derivation='None' name='[none:COUNTY_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]'>
            <groupfilter function='member' level='[none:source:nk]' member='&quot;PBA50&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:variable:nk]' member='&quot;RES_UNITS&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]'>
            <groupfilter function='member' level='[none:year:ok]' member='2020' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]' />
              <text column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NAME:nk]' />
              <text column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]' />
              <color column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]' />
              <lod column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[clct:Geometry:nk]' />
              <lod column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]' />
              <geometry column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[clct:Geometry:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NAME:nk]</run>
                <run>&gt; County&#10;&lt;</run>
                <run>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</run>
                <run>&gt;: &lt;</run>
                <run>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NAME:nk]</run>
                <run>&gt; County&#10;&lt;</run>
                <run>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</run>
                <run>&gt;: &lt;</run>
                <run>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[Latitude (generated)]</rows>
        <cols>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{018838E5-E38D-43ED-81DC-71021EA334D3}' />
    </worksheet>
    <worksheet name='Input Files'>
      <repository-location derived-from='https://10ay.online.tableau.com/t/metropolitantransportationcommission/workbooks/CensusvsPBA50vsContingencyPlanrunscomparison/InputFiles?rev=' id='InputFiles' path='/t/metropolitantransportationcommission/workbooks/CensusvsPBA50vsContingencyPlanrunscomparisonv2' revision='' site='metropolitantransportationcommission' />
      <table>
        <view>
          <datasources>
            <datasource caption='TAZ-level data' name='federated.0kyp62f0hvmbrs19zsgps0kbnizi' />
          </datasources>
          <datasource-dependencies datasource='federated.0kyp62f0hvmbrs19zsgps0kbnizi'>
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' value='156' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]</rows>
        <cols>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]</cols>
      </table>
      <simple-id uuid='{CF51FF8D-9010-4C0F-8353-071F587979AF}' />
    </worksheet>
    <worksheet name='SD Bar (compare two or more)'>
      <layout-options>
        <caption>
          <formatted-text />
        </caption>
      </layout-options>
      <repository-location id='SDBarcomparetwoormore' path='/t/metropolitantransportationcommission/workbooks/CensusvsPBA50vsContingencyPlanrunscomparisonv2' revision='' site='metropolitantransportationcommission' />
      <table>
        <view>
          <datasources>
            <datasource caption='TAZ-level data' name='federated.0kyp62f0hvmbrs19zsgps0kbnizi' />
          </datasources>
          <datasource-dependencies datasource='federated.0kyp62f0hvmbrs19zsgps0kbnizi'>
            <column caption='County Num Name' datatype='string' name='[COUNTY_NUM_NAME]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Sd Num Name' datatype='string' name='[SD_NUM_NAME]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:9]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[source]' ordering-type='Field' type='Difference'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[COUNTY_NUM_NAME]' derivation='None' name='[none:COUNTY_NUM_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[SD_NUM_NAME]' derivation='None' name='[none:SD_NUM_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[value]' derivation='Sum' name='[pcdf:sum:value:qk:1]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[source]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[value]' derivation='Sum' name='[pcdf:sum:value:qk:3]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[value]' derivation='Sum' name='[pcdf:sum:value:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[source]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:value:qk]&quot;' user:op='manual' />
          </filter>
          <manual-sort column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:9]&quot;</bucket>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:value:qk:1]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <alphabetic-sort column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk]' direction='ASC' />
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' filter-group='6'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:source:nk]' member='&quot;Census&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;PBA50&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;v7: housing preservation activated in 2025&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:variable:nk]' member='&quot;RES_UNITS&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]' filter-group='5'>
            <groupfilter function='member' level='[none:year:ok]' member='2020' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:value:qk]' value='p0.0%' />
            <format attr='text-format' field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[Multiple Values]' value='p0%' />
            <format attr='text-format' field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:value:qk:3]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk]' value='204' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]' value='false' />
            <format attr='text-format' field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[Multiple Values]' value='p0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NUM_NAME:nk]' />
              <text column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:value:qk:3]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='400' />
                <format attr='maxwidth' value='400' />
                <format attr='minheight' value='680' />
                <format attr='maxheight' value='680' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NUM_NAME:nk] / ([federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk] / [federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]))</rows>
        <cols>([federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk] * [federated.0kyp62f0hvmbrs19zsgps0kbnizi].[Multiple Values])</cols>
      </table>
      <simple-id uuid='{10836DED-80AF-4BCA-B0F5-2D7A7E7E9CC3}' />
    </worksheet>
    <worksheet name='SD Grouped Bar (compare two or more)'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>As of 2023-09-07, we have not prepared &quot;new BAUS&quot; 2023 metrics, so these exist only for Census and PBA50 (run182).</run>
          </formatted-text>
        </caption>
      </layout-options>
      <repository-location derived-from='https://10ay.online.tableau.com/t/metropolitantransportationcommission/workbooks/CensusvsPBA50vsContingencyPlanrunscomparison/SuperdistrictChart?rev=' id='SuperdistrictChart' path='/t/metropolitantransportationcommission/workbooks/CensusvsPBA50vsContingencyPlanrunscomparisonv2' revision='' site='metropolitantransportationcommission' />
      <table>
        <view>
          <datasources>
            <datasource caption='TAZ-level data' name='federated.0kyp62f0hvmbrs19zsgps0kbnizi' />
          </datasources>
          <datasource-dependencies datasource='federated.0kyp62f0hvmbrs19zsgps0kbnizi'>
            <column caption='County Num Name' datatype='string' name='[COUNTY_NUM_NAME]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Sd Num Name' datatype='string' name='[SD_NUM_NAME]' role='dimension' type='nominal' />
            <column-instance column='[COUNTY_NUM_NAME]' derivation='None' name='[none:COUNTY_NUM_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[SD_NUM_NAME]' derivation='None' name='[none:SD_NUM_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[value]' derivation='Sum' name='[pcdf:sum:value:qk:3]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' filter-group='6'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:source:nk]' member='&quot;Census&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;PBA50&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;v7: housing preservation activated in 2025&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:variable:nk]' member='&quot;RES_UNITS&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]' filter-group='5'>
            <groupfilter function='member' level='[none:year:ok]' member='2020' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:value:qk:3]' value='*+0.00%;-0.00%;0.00%' />
            <format attr='text-format' field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]' value='n#,##0,.0K;-#,##0,.0K' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' />
              <text column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:value:qk:3]' />
              <text column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run><![CDATA[<[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]> ]]></run>
                <run fontcolor='#898989'><![CDATA[(<[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:value:qk:3]>)]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NUM_NAME:nk] / ([federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk] / [federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]))</rows>
        <cols>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]</cols>
      </table>
      <simple-id uuid='{F4D0E8B4-0F53-4422-A716-462EE03712FA}' />
    </worksheet>
    <worksheet name='SD Table (Census vs BAUS)'>
      <repository-location derived-from='https://10ay.online.tableau.com/t/metropolitantransportationcommission/workbooks/CensusvsPBA50vsContingencyPlanrunscomparison/SDTableCensusvsBAUS?rev=' id='SDTableCensusvsBAUS' path='/t/metropolitantransportationcommission/workbooks/CensusvsPBA50vsContingencyPlanrunscomparisonv2' revision='' site='metropolitantransportationcommission' />
      <table>
        <view>
          <datasources>
            <datasource caption='TAZ-level data' name='federated.0kyp62f0hvmbrs19zsgps0kbnizi' />
          </datasources>
          <datasource-dependencies datasource='federated.0kyp62f0hvmbrs19zsgps0kbnizi'>
            <column caption='County Num Name' datatype='string' name='[COUNTY_NUM_NAME]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Sd Num Name' datatype='string' name='[SD_NUM_NAME]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:1]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[source]' ordering-type='Field' type='Difference'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[COUNTY_NUM_NAME]' derivation='None' name='[none:COUNTY_NUM_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[SD_NUM_NAME]' derivation='None' name='[none:SD_NUM_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[value]' derivation='Sum' name='[pcdf:sum:value:qk:1]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[source]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:value:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:1]&quot;</bucket>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:value:qk:1]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:source:nk]' member='&quot;Census&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;v0: PBA50 equivalent inputs&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:variable:nk]' member='&quot;RES_UNITS&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:year:ok]' member='2020' />
              <groupfilter function='member' level='[none:year:ok]' member='2023' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' value='81' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' value='32' />
            <format attr='width' field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk]' value='216' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NUM_NAME:nk] / [federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk])</rows>
        <cols>([federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok] / ([federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk] / [federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]))</cols>
        <subtotals>
          <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NUM_NAME:nk]</column>
        </subtotals>
      </table>
      <simple-id uuid='{010B7512-0A6E-4046-99EC-A17FAC78EEDF}' />
    </worksheet>
    <worksheet name='SD Table (PBA50 vs BAUS)'>
      <layout-options>
        <caption>
          <formatted-text />
        </caption>
      </layout-options>
      <repository-location derived-from='https://10ay.online.tableau.com/t/metropolitantransportationcommission/workbooks/CensusvsPBA50vsContingencyPlanrunscomparison/SDTablePBA50vsBAUS?rev=' id='SDTablePBA50vsBAUS' path='/t/metropolitantransportationcommission/workbooks/CensusvsPBA50vsContingencyPlanrunscomparisonv2' revision='' site='metropolitantransportationcommission' />
      <table>
        <view>
          <datasources>
            <datasource caption='TAZ-level data' name='federated.0kyp62f0hvmbrs19zsgps0kbnizi' />
          </datasources>
          <datasource-dependencies datasource='federated.0kyp62f0hvmbrs19zsgps0kbnizi'>
            <column caption='County Num Name' datatype='string' name='[COUNTY_NUM_NAME]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Sd Num Name' datatype='string' name='[SD_NUM_NAME]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:1]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[source]' ordering-type='Field' type='Difference'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[COUNTY_NUM_NAME]' derivation='None' name='[none:COUNTY_NUM_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[SD_NUM_NAME]' derivation='None' name='[none:SD_NUM_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[value]' derivation='Sum' name='[pcdf:sum:value:qk:1]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[source]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:value:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:1]&quot;</bucket>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:value:qk:1]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:source:nk]' member='&quot;PBA50&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;v0: PBA50 equivalent inputs&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:variable:nk]' member='&quot;RES_UNITS&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' value='81' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' value='32' />
            <format attr='width' field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk]' value='216' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NUM_NAME:nk] / [federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk])</rows>
        <cols>([federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok] / ([federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk] / [federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]))</cols>
        <subtotals>
          <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NUM_NAME:nk]</column>
        </subtotals>
      </table>
      <simple-id uuid='{0563DCC6-FBCD-4BBE-9C5E-57718B92C15A}' />
    </worksheet>
    <worksheet name='SD Table (compare two or more)'>
      <layout-options>
        <caption>
          <formatted-text />
        </caption>
      </layout-options>
      <repository-location derived-from='https://10ay.online.tableau.com/t/metropolitantransportationcommission/workbooks/CensusvsPBA50vsContingencyPlanrunscomparison/SDTablecomparetwoormore?rev=' id='SDTablecomparetwoormore' path='/t/metropolitantransportationcommission/workbooks/CensusvsPBA50vsContingencyPlanrunscomparisonv2' revision='' site='metropolitantransportationcommission' />
      <table>
        <view>
          <datasources>
            <datasource caption='TAZ-level data' name='federated.0kyp62f0hvmbrs19zsgps0kbnizi' />
          </datasources>
          <datasource-dependencies datasource='federated.0kyp62f0hvmbrs19zsgps0kbnizi'>
            <column caption='County Num Name' datatype='string' name='[COUNTY_NUM_NAME]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Sd Num Name' datatype='string' name='[SD_NUM_NAME]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:9]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[source]' ordering-type='Field' type='Difference'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[COUNTY_NUM_NAME]' derivation='None' name='[none:COUNTY_NUM_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[SD_NUM_NAME]' derivation='None' name='[none:SD_NUM_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[value]' derivation='Sum' name='[pcdf:sum:value:qk:1]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[source]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[value]' derivation='Sum' name='[pcdf:sum:value:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[source]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:9]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:value:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:9]&quot;</bucket>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:value:qk:1]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' filter-group='6'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:source:nk]' member='&quot;Census&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;PBA50&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;v7: housing preservation activated in 2025&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:variable:nk]' member='&quot;RES_UNITS&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]' filter-group='5'>
            <groupfilter function='member' level='[none:year:ok]' member='2020' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' value='81' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' value='48' />
            <format attr='width' field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk]' value='176' />
            <format attr='height' field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]' value='88' />
          </style-rule>
          <style-rule element='label'>
            <format attr='vertical-align' field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]' value='bottom' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NUM_NAME:nk] / [federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk])</rows>
        <cols>([federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok] / ([federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk] / [federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]))</cols>
        <subtotals>
          <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NUM_NAME:nk]</column>
        </subtotals>
      </table>
      <simple-id uuid='{B5C822A8-5E71-470C-9AFB-63E387C7A03B}' />
    </worksheet>
    <worksheet name='Superdistrict Map'>
      <repository-location derived-from='https://10ay.online.tableau.com/t/metropolitantransportationcommission/workbooks/CensusvsPBA50vsContingencyPlanrunscomparison/SuperdistrictMap?rev=' id='SuperdistrictMap' path='/t/metropolitantransportationcommission/workbooks/CensusvsPBA50vsContingencyPlanrunscomparisonv2' revision='' site='metropolitantransportationcommission' />
      <table>
        <view>
          <datasources>
            <datasource caption='TAZ-level data' name='federated.0kyp62f0hvmbrs19zsgps0kbnizi' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0kyp62f0hvmbrs19zsgps0kbnizi'>
            <column caption='Shape' datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column aggregation='Sum' caption='SD1' datatype='integer' name='[SD]' role='dimension' type='ordinal' />
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column-instance column='[SD]' derivation='None' name='[none:SD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]'>
            <groupfilter function='member' level='[none:source:nk]' member='&quot;PBA50&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:variable:nk]' member='&quot;RES_UNITS&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]'>
            <groupfilter function='member' level='[none:year:ok]' member='2020' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]' />
              <text column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD:ok]' />
              <text column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]' />
              <color column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]' />
              <lod column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[clct:Geometry:nk]' />
              <lod column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]' />
              <geometry column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[clct:Geometry:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run>SD: &lt;</run>
                <run>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD:ok]</run>
                <run>&gt;&#10;&lt;</run>
                <run>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</run>
                <run>&gt;: &lt;</run>
                <run>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run>SD: &lt;</run>
                <run>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD:ok]</run>
                <run>&gt;&#10;&lt;</run>
                <run>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</run>
                <run>&gt;: &lt;</run>
                <run>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[Latitude (generated)]</rows>
        <cols>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{7982E75D-E929-4B44-9DCF-D01BE5CD878F}' />
    </worksheet>
    <worksheet name='Vacancy'>
      <repository-location derived-from='https://10ay.online.tableau.com/t/metropolitantransportationcommission/workbooks/CensusvsPBA50vsContingencyPlanrunscomparison/Vacancy?rev=' id='Vacancy' path='/t/metropolitantransportationcommission/workbooks/CensusvsPBA50vsContingencyPlanrunscomparisonv2' revision='' site='metropolitantransportationcommission' />
      <table>
        <view>
          <datasources>
            <datasource caption='taz_data_wide_vacancy' name='federated.183kuxz0zrxkm51f03wsi1n11km7' />
          </datasources>
          <datasource-dependencies datasource='federated.183kuxz0zrxkm51f03wsi1n11km7'>
            <column caption='County Num Name' datatype='string' name='[COUNTY_NUM_NAME]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Res' datatype='real' default-format='p0.0%' name='[Calculation_91760862833213440]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([residential_units]*[residential_vacancy]) / sum([residential_units])' />
            </column>
            <column caption='Non-Res' datatype='real' default-format='p0.0%' name='[Calculation_91760862837256194]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([non_residential_sqft]*[non_residential_vacancy]) / sum([non_residential_sqft])' />
            </column>
            <column caption='Sd Num Name' datatype='string' name='[SD_NUM_NAME]' role='dimension' type='nominal' />
            <column aggregation='CountD' caption='Non Residential Sqft' datatype='real' name='[non_residential_sqft]' role='measure' type='quantitative' />
            <column caption='Non Residential Vacancy' datatype='real' name='[non_residential_vacancy]' role='measure' type='quantitative' />
            <column-instance column='[COUNTY_NUM_NAME]' derivation='None' name='[none:COUNTY_NUM_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[SD_NUM_NAME]' derivation='None' name='[none:SD_NUM_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
            <column caption='Residential Units' datatype='real' name='[residential_units]' role='measure' type='quantitative' />
            <column caption='Residential Vacancy' datatype='real' name='[residential_vacancy]' role='measure' type='quantitative' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_91760862833213440]' derivation='User' name='[usr:Calculation_91760862833213440:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_91760862837256194]' derivation='User' name='[usr:Calculation_91760862837256194:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.183kuxz0zrxkm51f03wsi1n11km7].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.183kuxz0zrxkm51f03wsi1n11km7].[usr:Calculation_91760862837256194:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.183kuxz0zrxkm51f03wsi1n11km7].[usr:Calculation_91760862833213440:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.183kuxz0zrxkm51f03wsi1n11km7].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.183kuxz0zrxkm51f03wsi1n11km7].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.183kuxz0zrxkm51f03wsi1n11km7].[none:COUNTY_NUM_NAME:nk] / [federated.183kuxz0zrxkm51f03wsi1n11km7].[none:SD_NUM_NAME:nk])</rows>
        <cols>([federated.183kuxz0zrxkm51f03wsi1n11km7].[none:year:nk] / ([federated.183kuxz0zrxkm51f03wsi1n11km7].[none:source:nk] / [federated.183kuxz0zrxkm51f03wsi1n11km7].[:Measure Names]))</cols>
      </table>
      <simple-id uuid='{1D5E30D1-8926-4AA0-89E2-BC4E28CCD170}' />
    </worksheet>
  </worksheets>
  <windows source-height='51'>
    <window class='worksheet' name='Input Files'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NAME:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_761108404206759937:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Path:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD:ok]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NAME:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:county_name:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ED5DA773-1332-4A2B-A83F-2C97D74C6DB2}' />
    </window>
    <window class='worksheet' name='SD Table (PBA50 vs BAUS)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]' show-all='false' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NAME (superdistrict-county.csv):nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NUM_NAME:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_761108404205641728:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_761108404206759937:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3B8B2B57-7262-48BB-AE63-3FB524760644}' />
    </window>
    <window class='worksheet' name='SD Table (Census vs BAUS)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]' show-all='false' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NAME (superdistrict-county.csv):nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NUM_NAME:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_761108404205641728:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_761108404206759937:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{337C3C97-20B1-4D5E-AB7C-1CC9FEE2D5DD}' />
    </window>
    <window class='worksheet' name='SD Table (compare two or more)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]' type='filter' />
            <card param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' type='filter' />
            <card mode='radiolist' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]' show-all='false' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NAME (superdistrict-county.csv):nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NUM_NAME:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_761108404205641728:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_761108404206759937:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{05D51691-180F-48AB-8727-B407647822ED}' />
    </window>
    <window class='worksheet' name='SD Bar (compare two or more)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]' type='filter' />
            <card param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' type='filter' />
            <card mode='radiolist' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]' show-all='false' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NAME (superdistrict-county.csv):nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NUM_NAME:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_761108404205641728:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_761108404206759937:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5FF7C65E-61FF-4536-A5BB-0938B2791A4E}' />
    </window>
    <window class='worksheet' maximized='true' name='SD Grouped Bar (compare two or more)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]' show-all='false' type='filter' />
            <card param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' type='filter' />
            <card mode='radiolist' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]' show-all='false' type='filter' values='relevant' />
            <card pane-specification-id='0' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NAME (superdistrict-county.csv):nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NUM_NAME:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_761108404205641728:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_761108404206759937:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{495ED3E9-0896-4DED-904F-A6040D347F8A}' />
    </window>
    <window class='worksheet' name='County Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]' show-all='false' type='filter' />
            <card param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' type='filter' />
            <card mode='radiolist' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]' show-all='false' type='filter' values='relevant' />
            <card pane-specification-id='0' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NAME (superdistrict-county.csv):nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NUM_NAME:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_761108404205641728:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_761108404206759937:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7CE9FDEB-44C4-428E-8D79-9DF37A671F72}' />
    </window>
    <window class='worksheet' name='Superdistrict Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card mode='radiolist' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]' show-all='false' type='filter' values='relevant' />
            <card mode='radiolist' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]' show-all='false' type='filter' values='relevant' />
            <card mode='radiolist' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' show-all='false' type='filter' values='relevant' />
            <card pane-specification-id='0' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[clct:Geometry:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_761108404205641728:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_761108404206759937:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Path:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:district:ok]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C3CC919E-9911-4977-BBF7-0058454EA72A}' />
    </window>
    <window class='worksheet' name='County Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card mode='radiolist' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]' show-all='false' type='filter' values='relevant' />
            <card mode='radiolist' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]' show-all='false' type='filter' values='relevant' />
            <card mode='radiolist' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' show-all='false' type='filter' values='relevant' />
            <card pane-specification-id='0' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[clct:Geometry:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_761108404205641728:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_761108404206759937:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Path:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:district:ok]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DC76B74E-D277-4331-9936-139521787848}' />
    </window>
    <window class='worksheet' name='Vacancy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NUM_NAME:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]</field>
            <field>[federated.183kuxz0zrxkm51f03wsi1n11km7].[:Measure Names]</field>
            <field>[federated.183kuxz0zrxkm51f03wsi1n11km7].[none:COUNTY_NUM_NAME:nk]</field>
            <field>[federated.183kuxz0zrxkm51f03wsi1n11km7].[none:SD_NUM_NAME:nk]</field>
            <field>[federated.183kuxz0zrxkm51f03wsi1n11km7].[none:source:nk]</field>
            <field>[federated.183kuxz0zrxkm51f03wsi1n11km7].[none:year:ok]</field>
            <field>[federated.183kuxz0zrxkm51f03wsi1n11km7].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6D5838D2-A404-4614-84D9-E95C4CEBCF13}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='County Chart' width='192'>
      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
      85lJURgTAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Input Files' width='192'>
      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
      DjwMZVoJc+dNx2qUc+6kA41xNHkZRozBseRlVdDV6/iYAgiCDFGQDfzKRWI+H55AjJLRxSRo
      FIybVMaJig7cYjEyQUAmyhFFCPe1smfbFtwKJbG+JhzyD48ugiqHsZNlHN38Jo16E6OvSSbX
      knwpj/ozpaGhgebmZsrLy+np6aG/v5/Zs2cjk8kwm81otVpycnLo6Oigq6sLrVZLUVERMpls
      MJPMcHFJqqRNtJBh1FG/+x1Op0xjkiVGX1sDdU3dhOPSQNIGmQy58HGjtainj5PNdkZfdzdf
      vW8ZpZaLfzsrlSrEaARbXz/hSBi35+MR/t9HoVKTmJzFqBk38LXHvsXX7r2RcZkWUlJ0tDU3
      EYiE8Xp9RGNDlM2QiiV6hsOnHEQiQVyeAOpkE1LzWWyeMIGW4zT6c0i5SEh2QRCQYnG8fj/R
      80qs1qjRqNQICGgSEgh6mumyB/C7m7B1xUhONFyoJmQCRLweQpH4QO4DpYyWljaCkQDnzjZA
      mhk9chRKPw5ngLgUx9d4hEORIh565BFumz+ORM1HHmMgQv7CO7ht6TysgWO8tufsRdvvchON
      Rqmrq6OoqAilUkl6ejrhcBiHwzF4PB6P09rait1ux2KxEA6HsdlsRCIR3G73sG7QXtIIIFMn
      UVxoYveL+8i59y4MiLjwcmTTKv5c20lUnsjY+V9mSk4KbTufZ/U5K3ffdT2ZWlAYUxhjVbLu
      mZ9zpGAcWrkOs0wGgohKJR9QGLkSlVxEnZLJjLGZrH7pKXYqzSQmCKRmCYNlZQCCiFKtRGlM
      5+rZk1nzxgt8Z2MYffpYbrjtFqYuuZ09v36G7+zTk5UcI6ob4p6mK+b2+2by3PM/ojyopPC6
      e/jq3GuZefolfvu97USUZq6952uMTZTRpVQiFwUYDNIrotQmUJqfwSvP/pgd41fws+vVKJSK
      gc89QYZl1FVMqW9i5VPfwStPYtqSO5hWoCdkU6JWDBkXZSLpY8Yie2YV3zt4lK/9/AGmz5nH
      2td+z7fWRLCMmcvtd45Hh4wZS/L47a+/ydmp13P34imUuV7gJ08cpzhDjqBIQQBEhQK5XARc
      VKx8gZouD3ExgZn3ZdFTt5uVWxpYvPw2LP07eKXcyZJ772d0yqftQpeG2+1GFEWWLFlCYmIi
      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
    </thumbnail>
    <thumbnail height='192' name='SD Bar (compare two or more)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy953Nj2XWv/Zx8ABzkDJBg7BxGskaWLFmy3qtXJcf3/qW+rvKta19bZVuW
      XCXLGo96ZjqwmUkQOWec/H7gNBW6pemhBgw9fL6wugHss07YZ+3122uvLfi+73PDDV9SxMs2
      4IYbLpObDrAgptPpZZtww1tw0wEWhGVZl23CDW/BTQe44UvNTQe44UvNTQe44UvNTQe44UvN
      TQe44UvNTQe44UvNTQe44a1xzAm//PC/qTS6OLaN53nYto37a3993z/7/+uQZCBftgE3XB+m
      0xFLq3eJqhP+7n/9Hfcf3aE/cEklw+xtb7N2e5NMNknjsM3B0QF/+oP/l2hAuWyzfy83HeCG
      t8Yw4hy/eME0Fmd9Y5N0Mk46n4L5kKViFlmSON4/IBzJk8/FsRwXuNodQLhJhlsM/X6fWCx2
      2Wbc8BmceYDpdHozff8FMplMzvU7z/MQxcWGZo7jIMuLc/6LPocvsv3XPIBtThlOHZLxCIN2
      nc7MZ205j/CFHO7Lw3k9wKIfToDnh23ur6YW1v6iz+GLbP+1VmamzXg0IBmPcHRSIb+0TrdZ
      oTeFeFCg3pty//YGgnCOLuFZfPjBEyQjRlqfYQY2WMsFefbxE1ANNjfXcR0bwXMQ1QD2bIKk
      atSqFYpLy5imRTCgY9s2gYDNT//1OZFMnHu3VrAcH11TcF0XWZJwXYe55TDutwklssiejaIH
      EAUR13ORRBFzNkVUdSRnwH89OWDj9i0MVUALGdizGaKqEWDET35xwJ17twgHFATBx/MlFMln
      bnkEdZmZ5eCYFvFE/Iu4JwvHdlxc1+Vv//ZvCQQC/M3f/A3/+I//SL/fJxAIEAwGKRQKPHz4
      8LJNXTivdYBIJEp/MABgfW2Nvf0yWlDkoNzh7kaJkK7i+3Ce5x93RrywiWf1KCwtcdwTwJ+j
      hXNYgxMOD3ZRAmF2nvwXiZW7mK1DhHAeXXSYj/rsHTcprZdIJDIsBzRWNu/h2022treRfA8h
      EMHq1dESeQRrgmN6eIqHL0u0GiMUXUByHcaWTyIWY9iroxtJbm+UyMSDWOaEDz58QqS4gjgH
      PRLi3koUgOmgTbPpI5kdjloWq4UYri2ABslUlklveG06AIBt29y6dessbTsWi5HP55nP57Tb
      bZ48eUImkyGTyVyypYvltQ7Qqh7T7Q5IZVzGwwGRVJqw4iCqMTKZ0xt8rocfQA5jD54ihVMc
      HlZoTlSWsneQvSMmYoBkPEUiEWfWXSGcijJwc2iRBJh99GCY0op++vDn08CMVvU50XyOuOHT
      m3jkIxJ2+BaTyYx4JocKTJwZc1tEYk4ovIQz6rKU0hCjaaKREL7v49tzZo5HUIB4pkjYCBPN
      JQELRJX7jx4RFE2yik79yKKQFUhm02jAcDpkPJkTDhsMRyMEfMLhyHnvx4WhaRrdbpdQKESj
      0UBRFBqNBn/2Z39GvV7nyZMnCx+KXQVuVKAFcZVjgINKm7XiTQwAb/AAg06DRnfKxq01pC/k
      EKf0+/0vsLWrz3lVINd1kaQv8sq/joq50Pux6HP4Itt/rQP0ByPSmQyTfoeJ5TJst8gvLVGr
      NUhm80w6NRRdR9IjdJstSstpThp9EkGJqadRKmbeqBi9ehta5hxBUsBzcH0RXVOwzDm+IKGp
      vzVp4vvMZlMESUHX1HOdoOc6zOYmeiCIJJ5a5nkeCALiW4zlXPc0YJ7NZkiKiqq8/ZvnqnqA
      cseiWIwxnU6RJAlN07AsC9u2EUURSZIQBAFFOd8k1rX2AK5t0R+MsWZDVotpjgYDptMxkeId
      +tVDiGSICGPa4wmzyYCdI5e7tzfZ39lGFUfYXgb1d0m0nsmL51uIeoBEUKXWG/P+49s8+eXH
      5EsrGKqAFAgj2DMsZBIRnZcvdyiUVrHnE3xBZDp3iId1uoMJmVSMVqePKAoYusLclVAEG0/U
      sKYjIokM006dam+EogVJhA1U2Wc4mmJ5Pvl8gVG/jSgp6KEw1riPHo5jTgYIahDZMzmotHl0
      d5WXL1/iIbFWKqAEdCYTi16rQn5pFTwP07SIRkN0+2O6rTrxTIGrOg3m+T6O4/CjH/0IRVH4
      y7/8S/7t3/6NyWSCoigoisLKygr37t27bFMXzmsdIFMsETIMJuMIakAhFouRTCYJRAwIr9Gu
      V7CjCdIhFXsaZqmQ4ejohGQ0xNTXUH7f/IQ7J5xaxrf7qJpKabkEosrKUobWcEhn2GLoaaTD
      AQRZIRFZwTJnWLZD5fCQVDzM8+f7FG9toNsOz8c9svEM/U6LgT1hKoSQXYtkLMTYlekcHJAN
      q7QaTTYfPKDfazGfQzKugyBS3t0FHeYTH5UKfjCC32ziCyqy1Mf3HRT51PMkMnnE6Yh2p4co
      uzR6NomghMqIZ8dz4ppLu9cml80jiCKydLXzDB3HYXl5+UwFCofDZDIZPM+j2Wzy85///EwZ
      epd5rQMYhvEbf+/eu//rn2Js3jn7Vyx6KhFGom8p/ykRvMlT5HCKZr0OQZNMPEh/OEYPRPDC
      UXQlSCYRR8AHRDbvPiAeDRPSJNz5iFwxRyKRJibDFJtavUUqHkV0VHxLQnYcbFFl1muTKqyg
      qSLf+ObX6Q/GRKIpcGuYfph8Ls2410WLBHHnHr5nU6/VMBJpjJABnk27UcETg4DIuNtADMTI
      RgLYosvUnBAzJAZTn/XVJfxZH9c3aXaHBFSRmeWc64ZcFJqmMRqNMAyDRqNBMBik0+nwp3/6
      p7RaLTzPIxgMXraZC+dGBVoQV1kFqrYGFNLRhbV/rWOARXGjAr0dF6ECSZ51owJ9yoV1gFdv
      w8logKgGceZjfEkjYgQZD/v4kkY4FPjNH/k+vW4bUQ0SDYfOdVzXNrE8EUX0sD2RgPZ2yoY1
      nzIYz0km42+lFr2Jq+oBPtpt8F42RrvdRlVVIpEI4/GY6XSKoiioqoooigQCgc9u7A3ceIDf
      hTfn4LCKoIhk41EOq8e8/95dXrzYo7S+yrTfRAolEawRc1+lkA5Ta3QoLgfptRp4oshgbJFL
      GtRbfUpLWcqVBrquEVJFxo6MLpi4cpD5oEOysILZbXPYHZMWx3S1PNmAgjkbkszmqNdbRMIh
      DCNEvdEmn01Rr9fJLa3QqNVRFJGD4zmGLmDPZ8iawFF5xoP7JabTOYIA9mzMZNhlruV4uFm4
      NkmDjuPwi1/8AkEQ+PM//3N+9rOfYds2AIIgsLGxwe3bty/ZysVzsVKFZxGIpNBkETwbWdFB
      UFktZag3mjSbLba2XtLpjTHHQwDGwx6jyYxytY45HnC09Yy9SgvVcXh2cEginWE8HNJuNen1
      ezRaA4RZH18Lc7S/D4KEKvqYyOiyR7/Tpdls0KzVaXa7tHsDDvYPMFSf58930IJhuv0+gqSQ
      yxfw7DmDXpdms44jiKSTGSpHhwQCAdqVI2aCRioeIZVOX+il/ENxHIdUKnUW6AYCATKZDEtL
      S0iSxL//+79TqVQu2crFc7EeQA4jWRVkI8lw1EEPBMF36Q9GRKIxvCkE4gapWPRMBbp9/xHR
      cIhwQMGdj0kXCqRTaSIyhASHk/IJ6WQCrAm+o6DIDiYa406ddHEVXYGSJjGxBGRNwdc0EGyC
      RhhjbpGIxwhIPoeVFqXSMuGogeU4OL7Js+fbrGzcxpr0EHwfXYsxalXJFJcJBTQySyXazSZO
      Ks2gVSMXLV3o5fxD0DQNx3GIx+M0Gg0SiQTdbpdHjx6RzWYRRZFI5OrnNP2h3KhAC+Iqq0D1
      zpBccnEP900M8AZuVKC34yJUIM826fe9hbV/owK9gVdvw367gRiMEQnI9AYT4rEI3VYdXwmR
      jIV/80e+R61SRgpEySTPl1jguzYnlRqZQhFNfpuL5lE/OUGNJElEzqc8veKqeoCj3Qbv5WKU
      y2V0XSedTtPtdhkOh6iqSiAQQJZlwuHwZzf2Bm48wO/CnVFrj0EYMAspHHdmfD2yzv5hnbXN
      VSqHu0jhNMKszwydlUKc4dRmKaHTrJRBVuiO5hTTEU7qXTZWCxwc1QiFdIIKjF0V3Z/hKQaT
      XpPM8gbT1hFzV2c6HkEwyHw6pdOsE80u0a2VKaysUj0uo0tQmdh84/FtxjMPt7ePmU6iqRqd
      wYRRo0x6bQPRcnHxSMbCVOodmvUT7j3+Osno9Zo1tW2b7e1tPM/jBz/4AR9++CGCIGBZFp7n
      sbGxwZ07d8638u8acbEqkO+g6CEk32Lv8IRes4UjqKytZCmXT+gNRuzs7DCaewjOHIDx4FQF
      avUHOPMJzYMdDht9EqrM88MjllZKzCYThsMhk/GQzmCO6ozRYhnKRwck88vI9pByuUx/MOD4
      sIwSijNqnzAcjtl/+YJWr4/pyKyvLgOgajohTWY8HtMfDRmPpqTzS+TTAXoDD8+acVius7a2
      wlJplUTkfHr5ZeJ5HoZhnGV8qqqKYRhsbGyg6zo//elPOTk5uWQrF88Fq0AGml9HTi1x++5D
      er0+Mj79fp9kOoMz6WEkIyQi4VMVSJC4de8+4VCQkC7jmhPSxWXSmTSGBAHR4+jwiGw6hTcf
      47sqqjdhLuhMOjVyxTUcc8bE9imVStQqJ6TyeaLhMI4tM5+7ZIsFKicVUvkU9WabdGQFc9JB
      CafIh1Usx8ayBMIhjUZryspKBt+dkvAdDo6qRDSP7mhGMnK9PICqqsiyTD6fp9FoUCgU6Ha7
      rKyskEwmURSFZDJ52WYunDMVyHXda1HK7rowGAyIRj9/vs1FxAC1Vo98enHrl69lDGDbNo5z
      tTMYrxO2bTOfzz/371zXXfh90P0J8/nihm2LPocvsv2zDqDrOnC6KL7aHnL3wUOax9uMLJm7
      d9ZfCxZ2d7Yord1m/8VzNh49RAHM+QxZCyD9nripVT1GMtLYowYDU+T2eomj3S20WI5c6lQ1
      mU/HyLqB/OlB7dmIg0qHzY1VxLeKyVxmMxdV9tndO2RlYxNd+U0FyJ4O2Nors7p5m3DgfKvN
      fh+O45yllH/e3y3aAxjjX4JxusjHMAyKxSL1ep1Op0MgEDiLDeLx83mJa+kBXpHMFpjNLTwf
      ZtMZejhD42iHg9aMpbhGfWDy9a8+AntKvVmn1ewTrh6yf9gmqlromTUmtT2CqSLWaEAgnmZz
      pXjauDuhOxVgdIznWqysneaaiGoQs1eh6poMhlOiso0YzZIIyjiCzvHhCRsbG1RPTqicHJAt
      rJHKpPFsE02GvcMqpeUcR8dVltfWqB1tgVogJg2QQmFcc8qz7TJLhTzVRo3C8jp+p0ckl6Be
      r9HDRwlGiOoSM8+mXmuzulLk6OiEtc3bBNTF6vKXgWVZNJtNTk5OKBaLPH/+HFVVOTo6wnEc
      SqUS0Wh04VXqLpvXzm73xSeMHQEJDyMSodds0Oh2aLZaoAbJpxP4PqjhFM2DPTKFLJ1Ol1Gr
      jZHJoKnQbPZxzQmmLzGb/tqEkO8jihKCABEjwtPnL84+kiWRTqdHdWeXCSDYEz7eOkJRJARR
      QBAFzOmMdH6Z0nKWyt4zBjOf0aDHsHXE7kmLbD7Jyd4BRnYFTRaJ55YJOAOOjioM+k12to9I
      5AuMRkPAZza3EYU5k7nEbNChXanS7A/JxqK83NujkE1QaXYv4DZcDq/W/gKIoogoijx69Iho
      NMqTJ08ol8uXbOHiec0DrN66h+W4yKJAKpMnkSkiCT537gmonw4jBAGKhSKFfAFBEPA9l1ub
      PqoqYTseuR98H0FS8F0bUf614YUcwlCayPECzrhNLn/qGZz5CDmSpRR10SSVbCqFZ88JBAMo
      IpQKGXYPyuRzWSQsqrUOIxM2MxHsiU8yv0oyk8UIamhrYaonh6Tzq3iOSX8msLpaRCxDKpUl
      HArhqjqSq2AenJBdXUEVNTxrwEltQCGdISDL3I0bHB1WWd/cvJg7ccEoikI4HKZQKNBoNFhf
      X6fb7ZLJZIhEIui6TjabvWwzF86F5QKdJyC8zoxGo3PNpF5EKoQ9aaOEFlcX6DqlQrzbA7wb
      bvgMLmwi7FRl8qmVD5CMNJo3oTP1WV/KUTnex9diLOV+a+LFd6nUWhTyGSqVGktLp0Omz/UG
      cE0mlojojNg+qLK2eZtI8FfDsvF4hKbpSLLylgrT2zGfz8+Utc/DRahAev8AXyvy9OlTQqEQ
      6+vrHB8f0+l0CAaDGIaBpmmkUufzEtdaBVoozoSxreO3Thj1Ryxv3Abfot4csLKZonywA4E4
      3qSDJQbZXMlycnRIUHbYPemgCDZjW6Z+vM3mvffotRtk8wVqJ2UKq7fQ/Bn7xw0K+SQnJzWW
      Vlep7j9DzzwgIfRRg0EatSp+Jo1rzRn12wwtn1w4gKuHaFWrFFdWqR3vkymu0aqWWVrKc1Cu
      o0iQyBSYdOpEsyVSsT8sUe6ysW2b0WhEq9VifX2d/f19VFWlXC7jui65XI5YLPbO1we92CGQ
      IOB5pzPOiqpTLR/jIbFxa51q+ZBub8De7h6+FEATT0OTdDLG84M2xWSAbqfL3sE+hdIa+rxN
      pTdif3+fVH6Jeq3KoNel3zzkuDlgpZThYPuE3Ora6byEIBIKhbGmQ3rdPrV6A8uXiARU7NmM
      yXRCqZThaPeETC5FvV6jP+hxcHhIOL2MEU1gdXbZOmwxGAwv9LItil+f/fc8D8/z+Na3vkUm
      k+Hg4OAmF+gLRwqRCHaQw2vI9oieKSAKIsNuk9zyOvawRW4lTiQYAHwQZPKlNRLZGYosMxl0
      MTLLRGQXS0qykvBIL63QqpZZXbuFYA3JOSLpTIagLnPnXpRq5Zj8chLZjVE+OGF98w7Napl8
      cYmApuD7PqLv4YoSmiKyUvL58b/9hK//Pz8kIItkcllkLYiIhp+I8VA+JhQ9X5rwVUJVVTKZ
      DOFwmEajwf379+l2u4TDYb7yla8QDAYpFouXbebCuTAVaDweX8Rhrgzj8fhcM8EXogLN+iiB
      xRVuvE4q0AUHwV8eTNO8skGwZPsoC7wfN0Hwmw4ky4BP+WAHOZRk0m0wdiW+8uAOe1ufQDDJ
      Rqlw9v3xeEQwaCD+HmnGtmc4jozkz9k5rFBaWSGgygiy8nvzkQBGoyFBTaXW7pNLhqi056wU
      f72yg0+vNyAef/WmtHnxyRbBZJaVwq92TZmNRiiGgfxbC0ckSTr3TVp0B5DNQ/zYEh9++CGh
      UIi7d++yu7tLp9MhFAphGAa6rpPL5c5/jEWfw3XrAAA4Y0whwnzQ5dadO+wfnE61q8Eos8mA
      VsOnNbBIGSJbh3Xu3trANidoSgjbm9HqTimkwlRbfZZyKfaO9imtPGbcq3H79i3arQb1Rplx
      MM1yKongO8QjIV683CWTzVOvl4mni4zaNRw5yO1ilkq9AnODviXhbnfQI3H6nSaBSBJnNqHb
      rCIE4qyXooSieSaDJsezPn4gij/tM7cEIqkIiXgG/fdWBr5aWJaF4zjU63Xu3r1LtVpF0zS2
      t7fxfZ94PH62LuBd5oJVIBl7PsHxfHqNKrHs6Ru/cbJLb+axt71Ft9OlN56TS8dxJ326/TG7
      lTqjwQhD8jlqtIkHVQ5O6hSLp7tXSoLPcDRmPJmQTKXJZPIMWseMZi6z0YB2u8nBfplsaY3Z
      sIoaSBL8NMEtHtJozTw0Z8TW3jH9XpdQIofk2+DMmfkas/Hpgv7K4S6J1GkNo929fTxBJ2nI
      HJXrXLecMVEUGY/H2LaNZVlYlsV4POYHP/gBy8vL1Ov1L0VdoAsvi9JvN5CCMRTBQ9MDCMLp
      eBnPxXYseiOTZFijO7bIp6LMbR/XsdEUgc5gRjoeotEZkUtFqDa75LI5FNHjpFInnkoRUESa
      3QH9ZoONBw9RfIdKrUU8HkXVNDzXodfpEIzEMQIarmdjWj6SJDDpdxADEUIBHXwPz/OZT/oI
      WoRYWMM0PTRNplWvIQcjBDUVER9EcH0JXf2VQ73KZVGo/xRy36FcLhMIBJAkCd/3GY1GFAoF
      XNelXC6ztrZ2LluuUwxw1gFuNsr+YplMJoRCn3+y7CJUoNm4T8C4UYHg12KAYDD4pagHf5Fc
      VQ8gT8YY57DtbblOHuC1VpqVI05qbe5+5WtUdj7GFo3XVoRN+32UWIzPHx75HO5sIYXTMO0y
      EwLcXltm+/lHeFqMuxsrAHQ6bZLJX+WhTPtthq6CLthowTCarn1m8NIf9AkHgswcB+MNHdsz
      hxy3TJKGjKzpKFrgbAXau47W7+EXivznf/4noVCIx48f8/z5czqdDoZhYBjGl2Yi7A0bZUew
      T5pIoo+mapi2z/6zD/hwv89XN7PUByZJyUbMlag//QV64T7ffO8tqwg7I1w1hTPuMh+PsCQX
      ADUQZj6bcnSwzdTVkDGZDrr0TYGH925R7w7wfTBFl+7OLqFcEXfUQ4umWc3F+OTpCzK5JZrN
      MvFUkUmvgSlo3F9ZYmKaeLMhe+UmmXScdm/Kw4d3qFXbzFyfsSvRbW9hRopEvRG2FEK2RwSS
      RYqZxBd6sa8Spmkiy/JZxb5ut0sgEODg4ADP8wiHw6RSKTRNu2RLF8tr77xur4sqC5iWj+/7
      OPM5lqBQyCQwYik2V5bIFfIIjkkouUTod+6I96ajqcyGbSzbwRNUPOc05ui3G8SzOTr1BoeH
      RwCMpzMEc47tOzQqFarVOqYLqXTmtFy5GGA6GjIfD2l3u5SPq+RXNnDnfRD1TwPS0/0Fqs0u
      8bDGaDKj26oxs32azRq9WpXe1CaZThMNB5nNfeazCa5j0Wy/uyvB4FRHb7fbzGYzxuMxs9mM
      ZrPJX/zFX7C2tkaz2aRer1+2mQvnwlWgVxtkeNYUV1CIGEFs20ZRFMbDPp6ooqsyvmsxdwSi
      ho7lgCR42K6PIsJoZiH5NrJuoCsi3d6AUCiIrCj4nsd0PELWgwQ1hU67TTAcZTadEgmHGIym
      JBMxbNtGlkQs20WRRYbjGZoMrqiCPUNUg4QC53/7XWUVyH72CcqDR7TbbTRNO1sWOZvNiMfj
      eJ5Hp9Mhk8mcK9i8TjHAhXWAL2Nx3KuqAtmWhaJ+8ZUwXnEtVaBXtGvHVDtjokaIfGnld+/5
      +zk5z9vwunNVPYBZraJlMp/9xXNynTzAa60Mpg6PHtznZH+bTnWff//ZE776+D4oQRq7H6Hl
      7vCNx+fdOsdnd+spkpHCn/Tw9SgbpRw7W1uIwRgbK59PdWg2G2Qyv3/hdq/bIxaP8vLlDnfu
      bvLs6UsePrz/xu/OZjN0XT8dEvg+w/GYyKfrep3ZiKEj483GKLpOJBK+Ntsh/TZir4Ofz/OT
      n/yEUCjE+++/z5MnT2i320QiEQzDIBQKsbKyctmmLpzXOkBIhY+fPiMc0JlPTTZX8nhSkI2l
      HKN2FUX+A+rK20PEUAFv3mIymdPrjNlYzjCbzUmlNKqVJuAwG3UY2TJR3ac/9UilkxiKyNDy
      0GURc9ylMfKJhWRmgzaVgcu33n/A0w//GzmWxRl1EYMxdG9Kc2Dxx+8/Yj7uUzk8YmB57G8/
      Z+TIpGMhZPH0we/0x9jWnFRuGatXwzfSRIMKJ/u7EIhy/1aJ3v4J4KI7Nt3aIc2JSKmQZNTv
      EY0nSGWyn5mEd1UwTZNwOHy2UfZ0OiWZTFIul7FtG13XyWQy594o77rwWgfILa+TW37zl9//
      42/+YUeTdEbtF0h6kGwuhds5XSMQicVo1KoIloPpCxSySdIiOC4UgyDKHnuNEcsxlc7Ix+p2
      aQ8dYqE8rVYTR4rh2yad4QTRarKytAyezahvon8q48WTSY7qXdIJg9lsjuk69DsTBhOTTL7A
      6nKGTnuCqgjUBiPcmY+cjhGOZwEHBBnf7iGHV5hMuvSaTXw9xXzaxfOg3OhfqzIisixTLpdR
      FIVer8doNKLRaPDDH/6Qra0tfvnLX9JqtSiVrs+2T+fhwlUgy5wjSAqeYyHKKookMp/PEGUV
      37VBlJElEQHwOa1B1GtW8fQEqYiO64Pn2HiIKLKE77lYjkdQ15jP56eL2yURfB/PdXB9AU1V
      8Dwf3/fO6hi5voCIh+OBqsifDns8LNsF30OUFSRRgE8tkSQJ1zm1D9/D91xs10dTJHxEPN9D
      ka9HLpD1/Cnq/YdMp9PfKI5l2zaBQADf95lOp4RCoXNVhrtOMcCNCrQgrrIKZFkW6o0KBFzC
      FklfJq6qB7CrFZQbFQi46AUxeBxvfUJo5THDkxfMhSD3Nlc43H2JKQa5s/67x5ueYzN3PBzb
      OlNmPov5sI2tpxhUdhjMfe7cuf3GfJ/zvq2vLb0ufr7Av/7rvxIMBvmTP/kTPvjggzMVKBQK
      EYlEWFtbu2xLF84FdwCRYi5OzbZAjqH6c/DmuGKEO+tpyuU6AjazUY+RLRFgSn0EK1mD2WRO
      a+6zWkjRb9aod8bkczFarSG3Hz6kc/Scg7bNclJnMHVIJyM0qiesvfcdHNdBkgO0T3b4aKfB
      vY0cthikffiUQHKFTrPKSmmZQb9PMpujdXJCprTE04+e883v/hnx0LuXD2OaJolE4kwFsm2b
      XC5HpVKhXq8jyzLpdPpcC/uvExec/+iyt7vP0XGVSb9KbzQDQWM2rPNy/4TGySFHlSbmfI7j
      OEwmUwIBDUEJcffuLQKqdFpjVAmwVsgwns1wHQvbden3R1izCZIeZjkbZzSZngVwsiQz6rWo
      twcwmzEXVFaWooxnMLc8YoaOOZ+DY9EbTnAdm1argywKjKbvZk1TRVHY2dmh1+vRaDTo9/ts
      bW3xve99j7W1NarVKr1e77LNXDhXcqPsXrdLPHE5mZiTfpvdoxq37t8jqJzfQV5pFWjrBerd
      ewtr/zrFADcq0IK4yirQomOeGxXoDdyoQG/HRXgArdclsMDFLtfJA1y4CnT04gnBlT/Cbj6H
      8BqFpM7+y+fYSvg1FWg0HBKORH7j/yqVE4qFHM+fPkONpH61/dKv4UyHDDyFpPFuT+OfF3k6
      wfM8/vmf/5lgMMh3v/tdfvazn9HpdAiHwxiGQTQaZfMd3Rzk17lwFWgpn6LmwI8Km5AAACAA
      SURBVFIhy3HPA2+GryS4s5rmJz/6B4gUiCo2vhZi3GxQXFmhN5oTFEYcdnw2lhKAgAiIosQn
      v/gJbTtMzvCZehpf/coDfMem12pyuDMiGgqyV67xcHOJn/3XE/7sL/4naePdrnXzNpimSS6X
      O1OBBEE4K4fS7Xbxff9st5h3mYtXgfaOKJcPOdw/5PDwEE/QscZ1Xu4fEQjHyKUTJHNLpKJR
      stkkPiKbt9axbQhrMoIkge8hSBKjYQ/bU9FliCRyFFJRPNdia+cAWRDw8UHWCIo23ZHF0uoa
      +nXJVlswqqqyv7/PcDik0WgwGo3Y3t7mO9/5DpubmwwGgy9FPdcrqQK9C1xlFcjZ20XeWNzw
      5jrFADcq0IK4yirQoh/QGxXoDdyoQG/HRXiA+d4u+o0HAC5DBXr+IfrK15jVXtKd+fzRo3v8
      189/ztf+6DH/+d/PeHz/Nt1+n5VP89Cn4yEz2ycZj77dEWyL1mCEYo457AzZ2LhN9NdSGcxR
      Hz8YQ3WHfPjxHvnlFYrZ1yfdRvU6Yi7Hu5ghJM1neJ7HP/zDPxAIBPj+97/PT37yk7MNMkKh
      EPF4nDt37ly2qQvn4lWgQobap+VNhJEJQFRx2T2qIWlBWq02ju+y/exjhhOLeCpOu9ViWFim
      svVL/Ogy884xj7/5PwjYHf73j37OH7//mP5wRCIVZ9DpE8kWiLg2PmBPe/zt//k37j76Iw4P
      TtgoGsxDRd5bS6OIPuDxL//nfxEu3UEcT1FjcR7f28S1LCqHO8xaXdRAkFrfJK3O2KmM+f/+
      5198YWulLwvTNFlaWjpTgVRVZX19/awcSrlcJpPJEI/HL9nSxXLxKtB+mcrJIVvPtxhPZwBE
      8iuM+32yiRCSJKEqKq7rIMoKiiSxlM/huTaBeJ5wUCWfTTEcTZjMLG6tlfBljXv37iKLHoIo
      ocgykiwjcLrccXXzDookkwgJBBM5JADXAVlmPu4RTi0TVESKqxukYyHMyYDdRpeQJIEgEo4n
      UTFRgjHu39t8J/aW1TSN4+NjptMpjUaD+XzO3t4e3/72t7l9+zamaZ4WLX7HubIq0HA4IhK5
      vntxXWUVaL67g755a2HtX6cY4EYFWhBXWQV6VYhsUdyoQG/gRgV6Oy5kHmB/D3l9Y3HtXyMP
      cPEq0LMPUFfex6xt0566vP/oFh/98ilGKvtaXaBer4shQw+dTDhIv1XlsNJiee0WyejrFZ/r
      lQqZYvGdGKMvEn82xfM8/v7v/55AIMAPf/hD/uVf/oVut3u2IiyRSHD//pvrJ71LXLwKVMxR
      80QikRDt6RhEGSOk4thzPvzgF3iyTjQYQsSmXq+yslziuN2jl8ywno+B32A2avO3//ffufPV
      7zLp1IimC9zdLOG6LtvPPmIwtZGcGU4whVXfYaSk+Kv/8a2LPdUrjmmarK6unqlAoVCIdDpN
      t9ul3W5TqVTIZrMkk8lLtnSxXLwKdFChVt6n2xud7qvluTgeuJ6PrqnoegDHHNIdmad7gEkq
      d+49IGbo2LaNKIrM5nM27t5HFURu33tIPKzRb9XoTS0Cuo6qauQKRUTfJVMocWvtdxQ6+hKj
      aRrVahXbtmk0GjiOw9HREd/4xjfO3vye9wcUQbsmXFkV6LpzlVWg2f4egZsYALjAIdCXUQU6
      DxeyIkzTCS3wftyoQG/gRgV6Oy7CAwQadbSbFWHAZahAT/8LeeWbhK0qn+y3+fb7D3nxyUd4
      SohCIcu03iR8ax3NcRF8D0T50xKFIIki09kUVdNxLBNJ0fAci2q9yXImxs+e7vHVzRRPdsf8
      8XvrIMqIePiCiG2aqLqOOTfRdQ3LMlFUnVGriZpIUT8+JJFK0W238RHY3FzcEOGyER0b13X5
      u7/7OwKBAH/1V3/FP/3TP9Hr9QiFQgSDQXK5HA8ePLhsUxfOxatASwVqrs323gm4Aq4/RzGy
      2MMqzY6E6ni0y3uYfgCz0wAlgBEKIIkiq0tpfvqv/0IyX0JQJAKyguuaIAfAFwipEiftGemI
      yPNnL0GRwJxhRCLMp1O0cJjnnzxlfe0WruxhhOIkVJcXzz7BcQVcfETfx/sSCKmWZbGxsXGm
      AkUiEXK5HOPxmG63y5MnT8hkMqTT6Uu2dLFcvAp0WKNRq3Dr9i1SyTiCGEBy+pioGMEgAcPA
      CMdZW14ioMlowRDmuEUgksJzHdLFFSLhEGvrG6QSEQTPR9N0BEmmtJwBUSccjqCroAdCFFfW
      SQQFnjzbBkSWV9cIhYKsb9wiZugogTAPHz2mVEgTCoYIhkKEQu/+drG6rtNqtRAEgUajgSiK
      VKtVvva1r/HgwQMCgcC5CuNeN85UIMdxvhSy10UxHA7PtZ72QuoC9bqo8cXVXbqWMYDruriu
      +4U0esPp9XQc51y/WzRTWUU8h21vy6LP4Yts/6wDvNoP1vc9Pvr4KV957zHOtMt+0yJjSOjR
      BLryu6Unz7EZTGbEo7/vrefTa9bQ4gWGjQOGlsTt9RLT6fSsLv0X6nZ9l+ncQfHnvNg7Yf3W
      Gr4tEg7rn/3TT6dHXtXO/7xYlkXwDRt0fxYX4QFqM4t0IMCLFy8wDINSqUSlUqHT6RAIBDAM
      A03TSJyzOt+19ACvaJ4c4UqnteOr9R74MJ1I2L7Df3z8kjsbKzS6bURPIJnJsruzzfrmLfrt
      FkY8yfOP/pvSna+ynH2TBOgjWgO6swKD3oDl9dMVR512m3wmSbXRJpnLY01GtJpNMtkM7cEU
      DYvRzEJWAqRjGo3enGzCYDx3cKYDItkSEdVje/eIlVKBg+MqS6US9aMdBCPPctAmv77GSXkP
      0UvQFEYk8kWaR0dklpepnVQoLhU4KVcplfIcHleJRgMcHnW4s1GgP3VIGgq1zogH9++8EyGy
      bdv0ej1qtRqlUont7W1UVeX4+BjXdSkUCkSj0YXPSVw2r93L8WRCq1pmPLdpt+p0GzW6Y5N+
      t4drmnRGc9Zvr1EqFhl1utiIzCYTJEXFno0wXYFup/U7D2cYIcAjkUiz/fLl2See6+KJPvvP
      n9Jq1qm1BzQrxyjhNC4SAV0jpAmcNPoYisPRSYuYIbN/XKfX7TEd9hh1q+yXayRyeWo7e4SX
      1tBkEd9z2NneJ5fPMR+3OSw36VSP6QyH7B2UMU2TWrXKuHPM3kmLTD6LKwRZXSnR7Q/QnQmN
      sUUqqGMv6EZcFb72ta+RSCTY2tri5OTkss1ZOG9MhfA8D1EU8Dz/dEuhT7/yagbu1bDA98F1
      bCRZPvvs1d83D2Vcdp6/wFHDJHQfWw6zlEtyuPMcKZQkEY8yHY9IJqLs7uySzhUIGDE869Pi
      TYBrT6n35uQzCYIBnaO9HUKpIjEdjo6rpLI59EAA13GoHh+SKq4SVnxcJYgm2YyGFq1GmWg6
      T7dRI5nJ0WrUyRdyNBtNUtk8gYCG40CzekwsGqE3dcmlooiAEgzyNu/Eq5wKsdfps56I8uLF
      C8LhMKqq4jgO3W6X27dvY1kWL1++5NGjR2dD48/DdRoCXVgu0Cu9+cvCaDQi/JYbefw6F5EK
      MZ7NMQKfHQedl5tUiDcdaMFvtauGJEnnPudFXyvhD7Dtbbku7V/YU3m6KZtPq3JEIL2KPajS
      mwmsl/Lsv3yKGEqzuvR224z6nofHaWrEmxiPxxiGwWDQR1EUNC2IJAlnuzy+Sq14hedY7O7s
      kl1aIRgMIAKS9IeFurIsn2sjOlEUF/7wDEdTUorCRx99RCgU4tatWxwcHNDpdAgGgxiGcbZP
      8HlY9Dl8ke1f+Gs5IFr05w71vWOK66c7zo8nM3Jxkd3tLYxonG5vSCIaoNHsIskyS/kMx5UG
      mUySdqNJSFM4Htp89/2HHO/tIBkJZv0GYiCB7k85ao351te/QrPVJGIEGXoDWp0u6UgUORqk
      elxjuZDhqNpgaXUDs1sjt7aJMGhw0DTpdKdsrhWRRZFYIn5td4T/fViWxWw2o9frcevWLY6P
      j9E0je3tbTzPI51Ok0gk3nnPfeGKnqLIOK6LHjRoVE/wACMSJRJUQI/QPN6lPxwwHJvko1ES
      mSQHxxUK2TiHlSarayUkUWFluQieTavbZXdvHyUURREcJqZDOn469rZNi/Fowmhus7KUY9gb
      UG80yeViVI6r5FdKTGcmiiQwm82ZTybosSTLxTzTQZfWYPROPvxw+hY1TfNsAtRxHObzOd/7
      3vfI5/OUy+UvhQp04dmgtZ6Dq7ZZLeUZWqdlzgtLJXRVYUkJIaUjHNXa5HNZFFHAl0TS0Sjl
      Sp3H92+jKTLZZZ16sw1igmK+iBqOEdI1wGc66jHzTiseFHNpxo5MMhpCkSWWNnRkXaFyUuP2
      /TsgK3gBH02JcnJ0SDRZIBIK0qzVEHyLeGrlYi/PBaIoCqVSiVAoRK/X4/HjxwwGA4LBIO+9
      9x6RSITiAlOmrwoXpgINh8OLOMyV4SqXRRmOJ0SMmy2S4AI9wLu+3eZv47ruuc75IuYBps75
      bHtbrtM8wIV1gNOJMZ/a0S6h7DrNw5eMHJGvPrzLcDBAEV3QEwQ+R72m4WBI5HfkHg2GQ8Ih
      nd3tbSKZZXLJ3yyu6/sOo5FFJPJ78nUck4HpEw19fs1cEIRz5TWJorjwNOSJLyAIAr/4xS8I
      hUI8ePCAly9f0ul0CIVCGIZBMBgkn8+fq/1Fn8MX2f6Fh/jxoEjbkti8c4f9gzIAOy8+xrIt
      lm5/hV6jRiaXxVAl2jMH1ZmhqTq2CK1Wn0zCYDJ3caYDxo7MHz3QeL61QzKdpVGvEE3mMAct
      Rq7Mo80C/eGMzLLC7tYzgokMnZNjQqkiq0tRhsMJimixd1ghm0lTrbVYysU4qrZYXV3ieHeH
      UDLH4cwiFlLpTyweP7jzTgTGlmUB0G63AWg2m2cqEEA0GiWVSi20gtxV4IJVIJ/53GQyGdOt
      VYjnToOsTGGFO+vL9NpNqocvmLoSn+wcE2FKazBm66jGpF1ne3eX3nDOaj6Go4QJ6SrmZEy9
      UePg4IhUcRV/PsKXVQxdRZQ1VleXKR/tUT2psH94QCy1hMLpzZ+MBhzv71BttKhWKpzsbdEY
      OGysFajV2yTzOWR3RiS7ynw2QbUt3pVts0VRpN/vY5oms9kM0zTp9/v89V//Nevr62e1gd51
      LrgsikejWsOTdRJRA1XVEITTt5Eo+NiOy2g0RpWgN/VZKSSYWx6e5yDjMZjZxMIGmqbQa7cQ
      dYNIUKPZahOORFAUFd9zmQwHiHqISFCl2WgSSaSZDLroRhhVVgAfRZGpVysY0QTj4ZBoNMxo
      PCMai6LIIp7v0221icZjiIqOb04Yzh3SibfL77nquUAbyRi1Wg1d18+GE5PJhEwmg+u61Ot1
      isXiuWy5TjHATXHcBXGVVSDTstDOMUv9ttyoQG/gpizK23ERHqA9GhML36hAcOExgMfJ7jP6
      c5+j3S1e7h0BcHK4w9Pn2zif+qLJsIflwaDV+nS0/lvYU3rjN4/GPcdhOBoBsLu7i+9MaXU/
      u0hVv987zwldSwaWg+/7/Md//Ae//OUvAfjkk0/48Y9/zAcffMDW1hblcvmSrbwYLlgFEsgl
      DOqWx3g8wZR88GbM3AClnED5oEyzUSGXz2J2J+jmlLnksbd1zMZqjpNai9LKEpWDXYylB8jW
      gE92T1jJp2h1ehTyOU7KVRKFIoZsMRxM6Y0ndAculb2PSa/cpn28hyMoRJIp7EEdOZrHH3cY
      uzKR6hGenuLO+tLFXpZLwDRNAoHA2V7Arxbxv1oRFgwGSafT6Pri0qavAheuArVabTrtFo4v
      4dgmCArmpEu11sE0h4z7DRq9Kf3+AM+DfqfNoHlCd+Jza61Aq9MnFI0iCdDttOk1m7THDrfW
      S3Q7HcKRKKIAx0dVPEzq9QaeNaLdG1KrN0lkiqTTOTTB5qRcZT4fYdoyugqtZo9qtXaxl+SS
      kGWZWq3GZDJhMBgwmUw4OTnhhz/8IWtrazQaDRqNxmWbuXAuXAUa9of4kowmCbiCRCigY5sz
      5g4ENYnpzETTA4iCj+eBIHjMZhaBQABJEvB8mI7HBIwwgmczndvouo4sifi+x3g8JWiEEHz/
      dIWaY+MLIvPpBC0QRBRe9Xkfy5yBpIJjgaziOyaiohPQ/vAA8TqoQIPBAEVRzlb4maZJOBzG
      930GgwHxePxcE07XKQa4UYEWxFVWgSzLOtdahbflRgV6Azcq0NtxER6gNZoQCy8uGe46eYAL
      T4c+fvkUo/SQ7tEL0KNsri7x4pMPsaUwD+/f+lVQ4ozoTDSS0dM3lTUdMXFE4pHPvnHWeIwp
      yxiywMv9E26t52hWJ4TSYSKBwOJO75owtGxSvs+Pf/xjgsEg3/jGN/jwww9pt9tEIhEMw8Aw
      DFZXVy/b1IVz4cVxi9kYNctlNrPodKtsri4xnUxA1zja/oTD5py1fBhJhkZXwC1EePHsOcXS
      GpIIH/33IYWlFdKpGJavIU6bfLTf5MFqhpN6j+JylpP9E0qPH+KPB5imxdSaMegOKbcOyKSX
      aRxvkV69R79SJpJOEQyEEQWPXO7tlmS+C5imSTQaPStWYJommUyGcrlMtVpFVVUymcy5intd
      Jy68OO7RYZlKrUkyGSX66WSMJMl45px2v48siXhygKVcCtuaMxj0sNzTIG0+HWG5EIxE2Hq2
      TTwWotvrMesPMVG4tVygNxmdplgAtVoDd96n0hiAALIkMx53mcxcuu02meIamiwzbh/jK+/2
      jf5tZFnm4OCAwWBAu91mMBiws7PD97//fdbW1qjVanQ6ncs2c+FcsArkY1s2CCKC4COIEpIo
      4tinSo0kguv6SJKIKJwqPuDjug6SJCMIAo5j4zkm1daI1eUCvufieqe/EQQBHx/XcZFl+dNS
      i6f1jYDTdmQF13E+DaIEwGN/74D1zU3ELzDN8yqrQAfdPmuJGLZtIwjCmQrkui6KouD7Po7j
      /IZC9Hm4TjHAWQeYTqdnKbI3/OFcZRXovLa9LddSBQoGg+/8eO+iuaoeoGVPKC5QlbtOHuC1
      Vva2PmHqKty9d5fj7afMfZWN9RK246MrItO5hdnvIifTGJKA64NpOUQjxlu4S5ed51s4ahDN
      nTIXgty/vcazJx/galHWl7IEjQiiAO1Wi9Rb7E4yGfQR9BBB7fWFG/NhC1tL06u8ZDD3iUbD
      FPMFuvVjap0p9x7d47d/NRmO8CSBYNBAehdWvryBoTPH931+9KMfEQqF+Pa3v83Pf/5zOp0O
      4XAYwzCIRCJsbLy720S94rUOEAqFGLb6mI4PSoAHGxtsPf8Yx3TxNB1/bqEpEDKiHO1tkU4l
      +eDDp3znr/6GpP7/t3dmvXGcVxp+au2u7up97+a+U7QsW57xwIBnEiAQJk7gvzHAXMxPy0UA
      DxLAwcQZJfB4iSxZ1kJJ3Jtk72v1VlVdNReUGGfkjCVGTbGpfi4b5Pmqunh46nu/s/yYV4pk
      pjLUWgZDK4LXPUloGzourmVSrzWolAsM8NKtHHBYqqM6Bs2OhaIFiPqg1rLQdYVaa8B8Jsz2
      XpEr775L5fFd7h+0WJ6K0Gj3iUVDVIpHzF9L0O/3AQ/dbhcXaPVsrl5dZ/v+Le4ftLgyn0KS
      ZUr1DtFQhFYtTzA9i1Eu4A0nWFu8fN0h+v0+iUTiVAVyHIdcLsfR0RGVSgVBEEgmk2dq7zhO
      PPcXK4gioqSgSKB7RO49eISu+ajbFplkEk0A2+lTNXrMzC8h2H1mZ6dfTE5yTG79+VvScwtY
      zWP64okmrwd0BrbEoG/iChbIXhKZmZM9qqsRCAu4QK9dxbEtRC3GjC4w6LWfbn5PmmvJooPk
      DTAfCnBcaZ808uVpj38XxKcRSsbi7rcPEHGIxyNIHj+zqQBiII3bLJFIJRjgYFtDTPNy9oNW
      VZWtrS18Ph/FYpFWq8X+/j4ff/wxjx8/5ssvv6TVal16B5gMyh4RF1kFulfeZyMxMzL747QH
      mOQCjYiLrAKN+g90LFWgZxzuPqZqWCwtLSG4LqoiYtoO9WqJWDzFcGjh8fqeazD7Y0xygV6M
      84gAm+U8q+HR1TyMUwR4zkp/KHJ14wpbm/fodzsMVY1Wx8Ev9RFFiTvffE12+V2uLk+fYbkT
      FciUNSJqD1efJxfXePLwHkM1yOrCi4XlQbtNT5II/4Bsa3arGMMgxtF9PJl1io/vMP/WuwQ8
      f7nVZqtJUFMxbIWAdrmbv/4Qhj3AcRx++9vf4vP5+OlPf8of//hHarXaqQoUCoVYWVl53Zc6
      cp57+pGAl7vf3SPo92L1bDKJGLZdIxlN0B+YpKbm0T1nzaAQSaaTtAeQjYXYr59UhAmeGKuz
      cb69fQtH9qHYHfquB786xOPTqdWaaAGdfqNJMBqhXqoytXGF3s59bt7e4Z2NBVqtNpFwjEb9
      mOzS+wi+EEZxh27fols75pPPPue9996lZw1pVY9YnZui5gYxSvsEAgHufvMNK9f+kVb5kPX3
      PiCmv/xklHFiMBiQzWZPVSBZlpmbm6NQKHB4eMje3h6pVIpQKPQjlsab5xwgmswRTZ7065l7
      +lk6lX01qzkm3333kOT0HLvbZQ5aXqZS61jGIza3e6c/FklkEXFoNv86FyWVm0dx2zRlGUkQ
      aJsO09k4oifA6lKU40IDUVKQRAFXUnCsBrFEGsPosjg/jz2ElbUV8o9MEARAYmFlA6O8w9TC
      KhG/SLXsQb2sBwDfw+PxsLu7e6oCPasI++Uvf8nW1ha3bt2i2+1eegeYqEAj4kKrQMU9NlKj
      O9sYpz3ARAUaERdZBZpUhP2FSUXYCLmoEeBR7YiV8NnGH70I4xQBzlkCOVGB+oJKQBlS7Tpc
      35jjoNChdrzL9OwMSiBC0KtycLBPJjuF/P1ZXYMW9aGPiE/i0f27uJ4wq4vPK0eNWhHVF8fn
      vdxDns9Ke9DDcRw++eQTNE3jxo0bfPbZZ6cqkN/vJxqNsra29rovdeSce0VYPBmjN1QIeFzE
      jo0gaVj9PVRF5uC4Ttyo859f3WPj7Wu42484rrbwaH7m5tIcb29StCP8y3tzSFqCxfkMd299
      gUf18vXd+6yvr/HwwSYbVzfo9Qq8c/1tPG/AhvYsDAYDZmZmTlUgr9fL0tISlUqFUqlEPp8n
      mUwSjUZf85WOlvOtCHNMNje36XQNHm0+pt3pAgJir0difgXHHeK6AssL08iygscXYmNthaAu
      8/jRNqHUNH5FANGL06+wubVPIjtLJpVgdX2DaCjI6voGkUiERMSPZTvnenvjhMfjIZ/PMxgM
      KBaLmKbJzs4OH3zwAWtra6dzwy47ExVoRFxkFehhaZ+15CQXCM7xFehNVIHOwnmoQAFLGunz
      mKhAP8BEBXoxziMC5AeNSUXYU16LCtRxJcIqlAyL99+9yjdf/glXCbBxdQPRPSlwf+blgiDQ
      bbYwuhWaXYXMVAavdHJ07zgnewbxaTG9LIt0Kvv0fHM09u8ycBRWVpeftkk8sSnLMk8efken
      02F6/R8IqC6KJGEPhwBIsnxSNC9LDO0hoiT9zYn048rAOZkN/Otf/xpN0/joo4/49NNPqdfr
      6LqO3+8nkUhw5cqV132pI+ecHUAiEo8QEDRUx6DaO+lMHE9PE1CHPLh3jwcPdnjv+grNSptI
      LoboyvTbPUIRkeFQ4mj7Pt/e2+In//oRzb3vuLvbYG0hSb9roUeC9BtlUutzRCNh8sUm+e0H
      fHlri+tPba7+03s4QwfLduk3jvmv/77JtevXKdcNvBpoko+uZePzu7RLJqF0hrWly9ct2jRN
      FhYWTlWgQCBAMpmk1WpRr9c5OjoimUwSj8df85WOlvN1AGfA9tY+kVQawewiiifvcc1qkYYa
      JBrUWJ7N4QvHyEYTOLrG/vYhiUgAyePid2VkQWBpZQWfKmN4fMxOqYRjGQJpqBod+pKKKkJv
      YILg4opelp7azEQTCIJAJJkhnrDpdHssLS+geHTWVnPIHgej3GBQreHzR0muxXCcwbl+ReeF
      x+OhUCjg9/spFou4rks+n+dnP/sZ+Xz+dG7AZWeiAo2Ii6wC7dQLzEfSI7M/2QP8ABMV6MU4
      DxXIb4kTFegpExVohFzUCHCnsMO1SS4Q8JpUoJYtsJQJ8e1OhX9+/xoHO4/ouRrzuQRd08Zs
      VRGDCQS7j6aqCIoHbJNBs0ZV0JiKR5AFh5bRQ/f76HY6+PQAvU6bSq1J0C+ws1PCHw6TjPto
      Nhy8koUvkUKyTdzegDoO2WgcURRxnCFD20KUZLq9HoFA8KVLPscJ23UYDof86le/QtM0Pv74
      Y37zm9/QaDTQNA2fz0c2m+Wtt9563Zc6cs5dBQpFgoQVHw8ebeIOBYa4lMpVBq6KMGjR7dn4
      NPCoIXqVPAPLBVFFGPZIhoI0ux1c0yShOdz84hYz8ytoksPQEUFSUBSZk34qAqooUKtXadYl
      dGWAoPu4/9U3LC6t0MXk/uER8al5OtVD2t0BQd3P0DToz1wjHbrcE9Ity2J5eflUBQqHw2Qy
      Gfr9PpVKhdu3b5NMJkkmRxcpLgLnrgIdHBQIJFK8fe0axVIFcdgnnplHdQcMPX6SEgwFk6rR
      IxiK0KjVkPUAQt/GdGXm56aw+30cp8f09AwBPUguFaFerVIs19ADaVSvyltvZ5Axqfe69FvH
      RJMxjK5FOpNEVBXMep14KkPlaBd/IMpcegqrXWGr0CQyd3n/+z/D4/FQq9VOVSBFUSgWi/zk
      Jz+hUChw+/btkb+KXQQmKtD36LRqFOtd5mam/u5O0RdaBaoWmI9NVCCYdIceGRe5ImzSF+gv
      PBcBzG6L7YMyy6uLNIp56j2BxbkcAmC0WmjBIH/P0uagD6IMjo3tgOZVcVwQXBdECVE4uUEA
      UZR40fb0jjNEECQss4/tuGhe75l6278qLnIEqFW+IBr/J7rdLpIk4fF4ME0Ty7IQRfE0BUVR
      zrYPGqcI8JyVx4+fEErkEFw4Oi4Sz8xSKeSptCx82PjtHqWyQSqicVissP4yVgAACVhJREFU
      Mz2VIn9YZnV9FVX6sZyZIcf5Q+o9E8XpEUxMMZUMsrNfQXX7hOJxTBvq1Qqy4JCbnqbZ7iEJ
      LiHdR7XVJRmPYrTqmK6CJjsYvSHhgIftx0+YWr/G0dYjOn2LhZV1eoZBJBKgXmsSCPhwBIVu
      u4kknzz07mBIMh7h8r/x/18cbNvm008/RVEUfvGLX/D73/+eTqeDoigoisLs7Czr6+uv+0JH
      znMOIMkKllGk3I4yt7DI3s4BjioRFsFwFAbVGsXdfURplZm4zma+wmpM5ahhMhf7saniEqpX
      Ziaeplnao1gsM51JIgz72KJI7fiAu7tV1p5Oat+8d4dy22Z6eopapYTsutT8ASr7O+xV+sxl
      IgiCSLUm4H1a5D20LRBkDrYfUqq0iCdihHSFutHH7hrE0mm69Sp1d8jO9iEf3riB7w2snLRt
      m+np6edygRzHoVQq8cUXX5wqQ5eZ5xxgcXGencMqyaBC+bBJMJEm5hcotWzmIwEsq4Os6CQT
      cbwyXA075A9LLGVeoJGUM6B4XMEfE5BdEb//xGFiYR8DIYBtOGTTSUKhIBIufs0D3h7WYEA6
      EmC/2CTnkTE0nXQqQDwZRxah2WzQaPXICuDXdQZtk3QqgeV6iCfjxIIa9ZaFGvaTLxRJxGMM
      rR7pTPq8h6RdGDweD+12G13XKRaL+Hw+qtUqH374IeVyGcdx3oiBKWOgAjk0mx1CofFq032R
      9wD12hMi0aWR2R+nPcCkL9CIuMgqUKdj4PfrI7M/TirQuecCGa0GyF5U0aEzcIiEdBq1Cshe
      wsG/fiiuM6TZ7hAOBU8/e9bUybKsv6lSWJaFJLgMRQVsC1lR/181yXWdp5MqJVTl1X0lFzUC
      OPYDwuEPqFQqqKpKMBjEMAy63S6KoqCqKqIoop1xqPg4RYBzzwVqtQyqrSMkZ0gyd1KYXTg+
      Jj01y8HuFqFElm6nhVcSKR3vctzXuDKTw7UNPKEE5aN9wgEf+arBtfVl9nZ2SOSmaRSP0CIp
      bKNCsdFnYynFwVETrBYBvwdHCaAJJh1bZGDUiSdTSB4fDJrUWw6DXhFLjBGQBwTiGXRtdJ3T
      LgK2bfPVV18hCAI///nP+fzzz7Gsk2k4giCwuLj4ZnaHHi0irmMxMzPN5p27NLtbRN+/Tqfd
      oNGMUCuXKdY7BEMqxRYsZOLoWppe/ZjHD56QmrdQHYu6MSDo82JbPcrlAvWuie7xYRafMBBi
      6JqKqIawjW9Rgymq5TzHrTyZSJjpmRT3twrUOzaaaBEM6zS7HrwiMKhw+3GV+UWRtcWztH8f
      H2zbJh6P0+udNCXWNI1IJIKqqhQKBf7whz/g9/vJ5XKv+UpHyznnAplUqw26Q4XZ2SyNgYAI
      LK1dJaD76BtNfKEoPk1GjvrwqhaCrGKH4kzPGPjCITRJp1YpgyeCKEr4A2FC0SgBfwDXCVI4
      PEQMnUyXDIXD+CNRKv06GZ9GULEp1w38wTChWAIGbeLJJErLRhJkHFRsc0h4zDbcZ8Hj8WDb
      NpFIhGKxSDQapVarcfXqVVKpFKIoEgwGf9zQmDMGKtB4cpFVIKOdRw9MJsTA9yLAJBfo1XKR
      K8IGPRl7OKkIgx+YFH+0v0Wx3GTl6juUD3bITWdp9x2iwZeX9H6IermAq/roNWtYgoe56QzN
      ZhO/X8NxJVTl8hzLXtQIUD7eJZxJc3BwgNfrJZFIUKvVaLVaqKqKpmnIsnzmEaljGQGekZ1Z
      ZGBvoyki7rDH9vYeij/A4fYm0USaSqVEJJ6hWy/gj08xnY69xHJDhq5E6fiY+ZkptvcOgAyb
      d74mu7yC63hpt2rMzWbZ3z1ken6G/Z195peX8V4ix7gIWJbFo0ePcByHGzducOvWLQRBwDRN
      HMdhcXGR1dXV15pQeB48lwlgdmpIvjCiAJI3hGy16BpNipUa+/sHKP4ARqNKqVxiP59/yeUE
      et02M7PzOP020dSJ0pKZW6Cwu0On3cSoH/Jw+5h4KsHWg03a9SI7hearuNcJ38NxHHRdPz1L
      UVUVXddZXFzE6/Vy8+ZN8i/9fMeP5yKAqAaYSp18nMmkETNJLEcgm0zhkQQKrQ7Tc3NkMmm8
      vpd8LXJsms02fbdEMqKTCp3kmoTDMTRVwZU8QBqvR2B754jV5XmODw+Jh852IDPhb6OqKrIs
      k8lkKBaLZLNZarUas7OzxGIxFEUhFnuZ6D6enJsK9DKttk8uSXjhWoCLSLPZPNOAuXNRgWoN
      9OikNyic4zlAv98/r6UuBJZlnemez6Mvv+0MR/o8Rn0Pr9L+uTmArus8a4viakEU26CPxvrS
      NI8fPkT0hckmo2iaRrNWR49GqJaKJJMpXNelUimTSIxPhwLbtp/e88v/3qgjQO+ggp5Osbm5
      ia7r5HI5CoUC1WoVTdNO9waRSORM9scyApzXOUAim6NSKWE6MrJo0WjU6FkCOb/M//zpJnNr
      byNaPYaiQLPRpFI4whfNYPVaVI4P8UbSGJU83kiGXu0If3yKWPDi5a0/y6u5iIiyhGVZ1Ot1
      yuUyuVyOJ0+eoCgK9Xod0zRZWlo6swOME5OT4BFx1pPg8zgIG6eDqlHbf1MLoi4s56G7j3qN
      cbI/cYALhngOwzhGvcY42b/8rb/GBLtV5MtHx0wlQuRLLZamE4STGdRX1KO0XT3m4c4hoVCQ
      WttkIRslmswgvyL77tDmz19/QSY3xcFhiancFKFYnID2alpM7m09wBPOYZT2aJkSfsVC9kfw
      e32kU2cf4jGJABeA0tEepeYAj+TiCBJe2aVQLHFwcPzK1qgZA65fXcO0bFTBPrF/VHxl9l0c
      JFHGHIKmStRqZXZ391+Z/XQ2h+A4yJpONuQF1UOn2eQwf0BncHbBYeIAF4BkdpZIOIAqCsge
      nVwmTTjoe6Vaejyg8c3dTVK5WbKZNCHdi229Qq3edVC9GpYjMjszRTwawrRfnRK2v7PFfv4I
      q9+h0DZZnJkhmUqBbTF0zj4PeqICjYizqkATzpdJBJjwRjNxgAlvNBMHmPBGM3GACS+F06vw
      9d0d7t76mv7wZPt45+tbjDZ9b3RMNsEj4vJugh1+9+nvECSViNLn5uMm70zF8cUjhGXYOzrg
      zsMi//4f/zYWTYcnB2ETXhIRTegjRmc52v6GkF9FURSMepFCy0Txylx7Z+PvmiFxnkwiwIi4
      vBHgcjHZA0x4o/lftDMMej98KgAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='SD Grouped Bar (compare two or more)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9yZMkZ3qn9/gS4eERHvseuWfWjgLQjWb3kC2KoxmZ6TL/Di+68UYz6SId
      ZDTxMGbaR5qxGQ1nKIrkiOzmjm40ltqzcl9i3zcP3z8dEg12d6HQALIyKqoyngNQWRXxcw/P
      eP3z9/3eRRJCCJYsuabIr/sElix5nSwNYEERQmCa5us+jbeepQEsMK7rvu5TeOtZGsCSa83S
      AJZca5YGsORaszSAJdca9ed/ME0Tx3Fe57ks+RVM0+Sy2zRCCCRJWmq8REP61Y0w37WYWD7J
      eIzpsMfQFpQLWS532H9k2G0hRRKEcQjUKFFNxZqOaA1M1iolLvn53hqEEPy3f/ivqHWGl9NB
      IF3yt/c2a6i/+oLpdEZ3MCIZj7F3cEhlbYt+u8ZgJpE1FBq9Kbd2Nr+dJQYWtfYY6FNKq4yC
      AhslncPjKsVinqk5YTiaoPgzFCOP2a2ixTPsPX3Mvfe/S7fdoVwuMplMKJdKX/uw1qDNo6Mq
      m1s3SMY0FFXB93wURcH3L/4vSRJCCHzfRw2FXpnBX4Zmt89xtf26T+Ot5gUDSKTSDMZjAG7s
      bLG7d0YiGebgtMOtrRW0kEoQCBTl2xiAT0iLEnhj0ukM4x4gfGQ1QvtkDxHPki+v8PAfPiO3
      ZhFMJpg9m/XNLfrnB/QmHqZtsbW5840O2+yNef/99xnWD/n3f/4xd95/D3c0IaLr7B+ec2Nr
      nfJanurpGSfVPv/lf/XP0Jbe0bXgBQNo107pdHrkChVGgwGJbI5E2Gd9TSeXzyEBsvwt749q
      FF2qIaXynJ426M5kVku3ySVVmn6GtXKJaCzK1tY6SiyLLUEmkUOyB+iFVSy6FCplkkbkGx12
      pZzjwWefkUkl2L5xm0wqSXJljVGvRzmfRI+G2d8/JpvPk5/OcH2WBnBNeMEHWLIYCCH4X/7t
      n9KfWJfSCUSALF3Omt9mjRcMYDoeMBhZlFdKVxIj7TRrhKIpkvHopbWGvQ4iFCX1CrQWDSEE
      o9GIZDJ5KR3P81DVFxb6pcbnvKDWaXeIZwrMpiMmps2o06G8vkar0SBVWGHWq6GEI6h6gk6j
      wdZmmdNqh1xCY+qHWS1lv/IE+v0BottFrG3SanZZqRTwHQctqmGZNvVmm4hi0bcNNvIaMzTS
      RhTbsohENKbjHhNXZXM1w/O9Y7Zu3qB+2kCKZlG9MRNPZXP16zvIi8wf/fhj+uYyH+gqecEA
      XGtKrdFGERab62VOhkOmz8bESjfonu0jxfPkmdIYgDkZ8ezQ5/aNGxzuP0eTwS5kv/L5ORI1
      0LB4vn/KjbLOs70zIoqJaanks1FKSZm6nWO9kKVZ3UcVEuYYhp0pRj6HErioaghQ2VovcVar
      ExE2nWqXci6FGnrxDjE6O+RJb0BGlamPfZKGwXpG53ToUIr5nHVsNsoZjs7OqWzeY62QeJXX
      +Ftj2g5j037dp/FW88K3pbiyiZFMMhqNiGghYoZBJpMmmo6DsU6nUcNKpsklI3gTnXIpx9HJ
      GSkjwtQPE/41z03WdIATzXF3K8RJtcPdm+sMJxYJ2ySTShBWoeDIdFt1ElENiwhpTZAvlJnN
      JKIRAAkIGAxGZDNZgmmfSiJPPmXw8viljK5HYGwS1jSqjSajmc9qZhWVEb2+yTsffIfWaQ8W
      xACWXD3Xwgk2Ox3IZok6I376+IhEKkVUVdDDMLEvfImVjQ1Oj47Yuv0uaSP8uk8ZIQR/+G/+
      jM54uQJcJXM3gP1nD1HjBTZXii99jW3baJo2x7NaPIQQ/PinD3HFJaMeQYAsLzVepnE5l/pb
      MB5PKKaL7D17ipFM0ekNyGfitFpdKqur1GotEpkEEeFiBhqqN0bW4wzbLdLldSr59LxP+bXx
      3dsbyyjQFWvM3QDSuSKFdIyTmYc3G1I9PyaQbrCzUeDgpElpdYV+v0VIEbT7QxK6xqoxY2gU
      GfY6lzIA17GxHZeIHkVV5C/SIBaVHx3+LVPpcvsAS76auRtAubKCGgqxWgkjeXEkPUUmmUQL
      K9y9k6XZbLG2uoqwTNSEQlTxsNHIRYYYlc1vdUzbtgmpCpPRkLPjA1Lr9yilDerVUyJ6jGwm
      Rbs7IJ1OElIVXMejPxhgRBSEFsccDsgW8vTaLRLpPCoO7f6EfDbF1JyhEBAoGsKeoOgJPHNE
      JJ7Cm5kINUw0rGA5FqYtGLSr5MoVAkdCkRzCRhJnMkTSjBf2M3wR4OO/gqu+5GVcCyd40Dih
      NQkor63TOj9ma3ODAJnz4wMCITGcTsmnEpy1+9y/vcbZUY9Wp8nmehFHUdDwGM9UjBjYIk1a
      GWCJgF7LJFou03j6CaFMCc0ZE8sXOd09oHxjC2dkk8kaOD6EApMnxy02V0tsblWoHdUw/TCh
      kIVwZUKRCLdubn9xzkII/t0nf8xUmr3GK/f2M/cV4HWQKq3R3jsiJlsksyV8z8VDJZHOoWsq
      xnhErdlje7XM4eEZmWyFQFhEYkliWphENITaHvJ89yHl279J4Hs0ehY7m6tE01nk8QpEkiiu
      hqLHKa8USafS6DmdpA4n3SmRQFAuFcklDXpDi2S2iNc8JRovEddjSHhAwHg4QSgK8djbt7u9
      iFyLFeBV4LsWjXafYqkEvoushvm2OYFfByEED04eIUcud49a1OjLomjMzQCGw+Glq5uuG8PR
      CF3XL6Xh+wGKcrkvzdusMecVQFA9PkCKZlCcESNX5ebmCmfH+/jhxIt7AyJgb/cJ4XiBjZXC
      S1Vt2yYc1r6imkww6PWIGEki4TfjqU8Iwe/+/h9wcL4siLlK5vtt8ExmIkYw7LC+ukL/tAa4
      tDsDKlt5zo/28EJxhNljhs7dG2uMJyblrMrek4cY6SztzpBSPk613mNrq8JZrUsiHiWMh4WO
      4gyRIgnG/Tbp4jrlfIphs0p7JiiGNBrVDqWVEq3zGplShVa9Tr5QIKKHcS2LerPH1s7GslvA
      NWG+v2dZwbVNfD/g7OSEQrkMQmFje5tm7YRms8Xe/hGyZpCIKAggnSuRzyRRtCi+OaR+uEtj
      HLBZynPSaFFZqeDMZniuQ7vTZmIHRFWfcCzDoHdx95yYDpWVCpPOGWfVKofHp6gRndrxEY1m
      h9OjEybjAcenp3Q7bSxvrldlyWtkviuAHKGSjyNFEpj9FsPBiEw8hu/MWNu8QTAbsakZGPpF
      Lo4kKVTKJVRFYWV1FXyH+5EUqUwGTZG4l8/SqLeprK4ROFO0pEpE9nClMHF/RLyyBUBlfYUn
      T56QyeVIJnxyuRyJaIyIquD4PsVihtOzBoVCDhH0+DbVnkveTJZRoAVFCMFf/N3PcC+5DxYE
      PrJ8ud3ut1lj7gZwsPsIOZZjtZhBVcNIEkwmEwzD+LXvdWYzCIUJq4ubvvCqEELQaLWJGfFL
      6SxqDs6iaMw9JBLWE8zGfdqyR1hV6IwcrEGNaGYVTUwZmS6KFiMfV2kNHXJJjUZ7zMZqjmfP
      Drn9/ne+sQF4tslprUWlXKJRr5PKlUjqMmNbEFE8zmstVtY26LaaFMtllKsM8H8D/uivPlmm
      Q18xczeA5vk+XqSIFjbpOwHbW1u0VIEkCxA6ibiOJMt0B2NiCDqzMOV0glqnz/pa5Vv16zFb
      HSIZg5PdR/iJCtPzUywjQnfmko1AJJ5l3DrDFXBa67G1+tVlnUveHuZuAPc/+CEEPq6Akiyo
      tbpf2uRKuAadsctOJoEsSSSCJNVGj3zk2xSreJyeVNnJZXne6JFJxKhWzxiYPvn7t2idPoNw
      htWtIv32MvvyOjF3A4hELnr6/Lyzz9b6S579IxHWfunxV2Nn69s9D2upPN9d3ULzZtS6+xhG
      lFLuPWIa9EYz5EiKnZ11jg+O2Lx5+1sdY8mbydyd4Cef/YxAS7K5WvoiL9+cTtGjMSQJRuMx
      ifjFF306nRKLxeZ5eguDEIJHz49Qw9+sCdiv8ipqHt5mjbmvAPF0HiPkcdLsERPndKYCZh0y
      5R2GnTqxTBZz0KY/dWjUG7z/vR+QSVzPzMh0WiNqXO6zL+oXb1E05m4ArdoJ7XCcZCqOGtLo
      Hh6zs1UCISiurjIZj7B9D5QI+XSCr2jz8I3pt2uc1busb98kZUSYzWaXTja7Sn5y/smyHuCK
      uRYbYaPhEF0P4wYqZq8G0SwxXaN5fszMCVhbLXJ63qRULmFEw0xGMxrNFoVslCBk0K7XWd/e
      pnp8QGF1B02YHJ232Fir0B1OiMgenhojmPbQ0yXMXgMjV8bsdVBjCZJ6CNOa0hu7DJrHVLZu
      gKvgWX2i2RLTTgM1kWOtlPvinJcFMfPhWuR8hQKTR89OkFWZoRWQSxnoWghJCVHIJnm2d0Q5
      n+Tp8z0mkx71Rg9rOmIwNBlORqyspDnaPyVTyNLumZjjMZWiwf7zU7RkmufPdul02sxMi16n
      yv7hOZ1uk4klkN0pR/U240Gf46MDMsV1KsUUs3EHMzDoNs8QaozAmr7uy3QteTNygy+Jni5R
      cWTCwqFQXsG1Z3io5PJ5QqrC3ajO6XmT79y7xVm1TrlcoNnyKZZLoKhEwjIrRYm//Isf8cHv
      /AsC2+G8JXHn7haKHkW6ffPzTNQxkXSRsCQRTWYxIhGiYQlGFiF/yuZWjEI6Sq01obi6Sb99
      TjS7QTQUAgKWFWHzZ26PQJa1jK9/E4QQnLXPCeuX64/kBz7KJfNn3maNa7ECvKkMuzZCvlxu
      9qKWIi6KxtwMIBKJXFR4PX2MFE0T8qYMXZn37mzz/OlTpGiKm5urv/wm4fP4wQOM3MpXVoSN
      xyMMI/HSijAhfA739shWNkl9w+EarwshBP/qT/5qWRF2xcy5ImyKGi8TuEMSCYNOYwQIPM8j
      Fg7z5JN/YCynSMgzbHTef+cG5mxGQpH57KMPyeRzPHx8xL17W7SbA8preXp9k4QRpXF6gKNl
      Ue0+mpFi0OuRyJXYXivTPjslVdlEk1yePTmiUCnROD0jW67QbrYpFvLEEzHGwwGt7pjb924t
      l8Zrwnx/z2qEQeMZsm6Aa2OaMxCghkK0m3Xc8QxLUSivlYgDAiiubrJWyiHsKYE9Qg1mjNww
      NzdWaJgjACxrRlQLc1ZvkItJqBEX1/W/8Dtk+aIYulk/oDN0kbQupdV1Bu0WtjmlVvUoS1k6
      /QnOdIDpQOL198ddMgeuxT4ACE4O9kgVyjTOzymtrRPVNBzL5LzWYGO9wvFZk3IxTb054NbN
      7SttefK1znhZFD8XrokBvHkIIXh+eEJYW+YCXaXG3B91Hz9+zL07N3nw5IDtzRXi8V8cRuEz
      HlnEE7+aADfj4w+fkCyXKaSNL95jmibR6EW8fDweXfy9EJgzi2h0cVMcvi6OFxDIwaU0fD9A
      CS63nL3NGnM3AH/S46zRYmy5jEYjqkd7hDOrDM53qdy6hzd1ONx7RiybY9ppoaUK3LmRJlfe
      QThtuoOATu2EmRylWz1lc+cm3f6QTCZJv13HcgXn1SY/+OEPMSIhAOxxj6dHVTZWK5yeV8kW
      Viglw7SmHsmQz/5xjZ2bNzk9OmTr5h308GKUXP7dg71lRdgVM/dUiHRphbPDM3KpKDPTRFVk
      Gs02siRotTvMJmNsD2azKZnCGrHwhbVWTw4YWj6OZRIKqTSbPfK5DCIIWN/cxJmZWJaFFkuS
      TRnIvxATtQdTNu5u0zw9ZOJIjMcj6s0Oo36XfruBEk0x69YpbaxQW05mv1bM3QcIgl9e0kUQ
      ICQZAh9JUZCQCAIPSb74MwhkWcJ1XBQ1BAgQAYGQkCQByMiy9HnbRcGFvEBWlC+MYHR2yNPh
      jPuVNCdDiWA2wBp2MO2Am/fv4/fP6NhR0imNAGMhSiKXI5Lmw9wfgV7Yyfv5z7/Qr1GWQ7/w
      gosvcSgc/oWf5ReWLunzL/uXbRRGCyt8bzWMGnhEh+ckV9fQt3cIqTCbWfT0Iu/tFGg0mhRL
      mW/92Za8eSyjQAvKsi3KfDSWG54LTN/uMVbGl9JY1K7Mi6JxrQyg365xWm1Q2rhDMR1lMBiS
      Sr18CJ1jTZFCMUKvMCh0MQEzhDl1iMa+Osb/rLO/LIi5Yq6FAXRaLaIxDSWaI5+2iGows136
      7RpHxyeUi1kazS7pXI5CzqDbGNLqDVivpLHFgFa9QWV9i8bZEbnVW8TEkMPzFuVSid7URhcz
      XDWGmA5Ildfp148x8mWGjSZGNk9CD+G4FvXuFGfUYmX7BpKncLT/lFi2wKTdREsVuLm1+ms/
      y5JXy7WoCEsZKp8+PkbXBFYQIhoOoSoyimaws1am2e6Qiuu0Wg2q52cMpw7jXoNuf4Ll+dy8
      uUa70SWWiDGe2ji2TTIVpdseUFlf4/jwkNF4iufMaDTOODqqMjWnGMkCyXDAaWvAsN3k5OSY
      TL5EPKZhjnu46EwnA5LZChElAAS2ZWM7zuu+ZNeGa+MEm6aJroXxhIyMT4AMIvg8hBowGE5I
      Jw0GowlGNMp4MiWZiCMkCVWRmI2HfPTxp9z+7g+JOD1MKUoxbYASwp4OcYSC7Dmo0TiuOUKN
      xAir6sV7HQ85cJm5AiOiMnMDImENyxwR0g1UWQYEoZCKbTkgS4RDoWVN8BxYjkhaYMaT8Rep
      Ht+WRa3EWhSNufkAl514ft0QQvA3P3vMzLlcf/RFrcRaFI35OsHC4+Enn0E0yXY5wWd7TX74
      wR0efPoQPVN4sSIs8Pj4Zz8jW9m6XEWYN+PBo+esbN4gl3pzOs395YefLdOhr5i5zwgzCpsI
      p8fRSQNNEQSyghHTcDyPD3/8pwxIU4oJbEnnN757D9/3kRWZD//mx+TyWf7+w0d88IP3GXYG
      ZMoZLEugqRL+5CFjJYPujzFSGXrdAbF0lns3tzg/rXHnvffwx13+9q8/Zm17i169QSqXp9bo
      sF4uks4laDebtLozPvj+e9cjPLZk3hVhMazeQyQ9SS6XodbsIYIALwAfl1iygKbqlPIZJARI
      EuvbtygWcoSlOwTWhLu3NgjHMtzPFxg6JrY1JRLR0WMVzLaJrkdQ1BChkPJFI950Quf57h6a
      mDG1fSzXZevmLXrNJrNhl74epjPooEV0Rr06U+c9ksuKsGvBNYkCCazZDDUUxrFtwpEIsiQj
      Ah/bcYhoGpbtEA6rOI6HrutfMXJ1TmcsBP/1f/OHHNY6r/dE3nKuiQG8eQghGI1Glw4eLGoO
      zqJozPcRKHB48OljYtkiOxuVr3zpYNAnlUpzfrBLezylsrpDVA8Rj0XxLItZEBCPRgk8G9MB
      I6oxGQ/R9Dgh9e3Y3/tk9wRXLF7k5G3SmK8BSCp6RCUIbPb3T5FwsCYDJp6C6g5RM2t09j7D
      M0rowuLd7/8QORTl3fdvcfj0IRNN48dP9rh98xbNiUk6FGAYMVwh0x2ayP6EWGaDezd+OZpk
      dho8qTYoZ9LU2n1S6Ryr6QjVsUsu4nNY7bGztc7B3j5bd94jbSyGA7B7Ul/WA1wxcw6D+vhI
      +K5HMOlhSxqr5VXyEthmjObYolBZJ5ar4I4vwn/Cm/HowaeUy+vYjslqOUtIN4i5LulslkIy
      TK03RZVnFPIVzC9ppObNLGKpBOawh+kExDyXZt8h8AJmvg+ywqjb49Z37tM67ZA2vnp1WvL2
      cC18gNHZCQMjSUW1+dvHVeLRMMF0iBcEFFY3GTZPiWUqDHotypt3WSskfr3oFbOsCJsP18IA
      3kSEEPyv/+FH9E33dZ/KW83SABaUZRRoPhrLDc8F5klrl2BwOQ0RCKRLtrl7mzWulQH02zWO
      j0/Ib73Hai5Gq9WiUHh5jpFtjiCcQHuFV+liCmb0JQ3Afpn6uLVMh75iroUBtKqnKJqGHM2R
      zs7IGTIz22U67PLRyRnpdILhaEI4GmNzLUftuM1xvcV7t1eZBR26rRbZ4jr99hnJ4i2S9Dlu
      dkkZKcZCxqztYkUK6PaA1Tv3efKTv6V46z7eYEgynyMWCeNaAz553qScDLG6s4Nnejx/9oRo
      Js2s20VL5Xnn9vbrvlTXjrdjx+jXkC/m2D2okQi7SOE4yucrYEhPcHtnA89zQQikwGX32XMC
      VUMTJkPTAzXM3bs7OKaNED626+N5LgEgSTI7O1vosSSVQo5MJkm73SGRKZJNGVTWtljJxmiP
      LBzLJRXXKRQKCCDwPfxAEAQ+xZUtUrEwFyOSRowmy3lh82LpBH9NHHPE7sEJGzfuoLpTQkaK
      0BXePoQQ/KfHP8JWLxcFEhc5hUuNl2h8YQCmaeIsa1EXil9s/vttWdSuzIui8cIK4LsOE8sh
      ETdwrRm2LzBi0RfGVVvWDE2LYFsWmq5/7XHWljlFUjWEZ2H7kIwbTMZD5FCEaORiIJzvuUhK
      6Ise/YHvMp5aJOLxr3kHEHhegKouRpPbb4MQgv/xf/8jOsPLPQ4JIb7omrfUeFHjBSd42O/R
      qFfh7vc4evyQdGEV4c6YOhLJqEJvNGOlXOTpg5+xce97fPbXP+Y7v/2bTKcO7qCJkl7BkGzU
      WBp30iNkZEj8vP9NYLO3f4SkhlCERSq/SjJucHp0iECmtL6JaVqE7SFKfp2MruD6MudHe4Si
      SezZjHa7QSZfIZtJEfgeqiyo1rtUyhetTfKlEoPWCSNL59bORUqDM+nzcO+Eja2bb1RF2N5J
      dVkRdsUov/d7v/d7v/gXnjNDaEnyyRixiEq13sF1xjzaOyGigOW4ZNIZvMBhUD9HhNOAxfOH
      e2RKOZKZBB//3Uc47oSJrzEZdMjnP5+A7s+YuhqK5KIpErXWgNVKEct2yRkqZ+0Rh4+fkSik
      CVyHar1FMpdjPBqxublBp1YnCIUo5TKcnx1hOjJqMGXvyWdMfAVZVeg3mniROIqQSacMAM7P
      69y8ewd3WOPf/4c/AS3C2f4+o/GEv//Jp8iBjxqWOHq+y88e7LGxvfGFo/w6+bO/+Yj+yHzd
      p/FW88IK0Ot2GVk+uVyWwWCAHosR1QSVUphMvojEhRMRT+YIApWiYTBzTEqVMslkgl7XZG29
      jJ4pYQ1aaMniLxzNQLLPCEWzYA1JJC+GWFiTPpNQkpVMGGZl4sk0kUiEVmdEVJXIJqM8fvqc
      QjZDXPZo9SdMR1Nubt5CTHukCxVSqTSpZBzbnHF2fkautP7FYcv5JJ99+hmpeJSbd94hlYiR
      LJcZdrtk42ECfHZ3D8jk8sRDfWYuhBYjIXTJFbOwUSDHMhGKhvZlfQlFwMS0iH2Jb/K2IITg
      f/if/y3N/uTSOov47L0oGnM3AMe2EJKCFg798j8IwWxmIikhItry9rvMBZqPxpwrwmw+/fgB
      5Y0NjLCEoseRPQvLl8mmdHZ3n+MIme+8c/siyhSNg+8ynUxQIgaSa0I49o9O9VvOn3/4iIl9
      uRlhi3rnXRSN+RqAHGZjrUB7NKIzajMOIhQSGsghMqlNHNsiZKQ5PtwjnzI4mQKjKk6gE5Lb
      eIGMEC3uv3P3Gx12XDvhSbtHPqJRG9qkkwlW0xHOhi7FqM9Jc8rmap7D41NWd+5TyS5GpKg7
      nCzrAa6YOa8AHv3RhIieIBxPoodiFDJJZAQSMkYsiq+q5IoF0nGd00e7GMkUlUwefIteqwGR
      1Dc+rPB9BBcjlfwgQCDR6PRxnABiCWQ8Bv0p73zvO7ROu7AgBrDk6llYJ/hVMm02EYUChjXg
      Hx6fkEgaKJ6DIgkUPcGo1yRfXqN+fsr6zfvkk69/xOqyImw+XAsDeBMRQvAnf/0Rsy+pcf6m
      Oov47L0oGksDWFCWUaD5aFyLeoCfM+w2qbf7VNa2SMQ0LMv6on3iIvL3px9hKZdMUBRw6c2S
      t1jjWhjAeDxC18KoepKUPsZyHEKqTLN2juUGrK+WODlrUK6UiOlhpmOLeqNJIRsjCBt06nXW
      t7c5P9qnsLqDJkyOqm021yp0h2M0ycNTDcS0i5YqMes3iOfLmP0eim6Q0kNMrCmDsUe/eUR5
      8waSp+LZPaLZMmangRrPslL85fnEpjtj6i0rwq6Sa1EQo7gTHj8/QQ6HmPoKhXQcXQshSQq5
      VILHzw4o5RI8fvacybhHtdpmNhnRH0wYDPuUSgkOnh+TzmdodadMRyPKhSi7z45QYkl2n+3S
      ajWYTEz63Sr7B+e0WnWGYwfJHnNQazEZ9Dk82iddWGOlmMQctZh6MTr1Ezwpgje73I7vkm/H
      tVgBopkyeUtCEw750gquPcNDJZvPE1YV7ugaZ9UW7925wXmtTrFcpNXyyBeLoIaIhhXKefjR
      //eXfPA7/4LAtjmrS9y+s4UajSHd2MaWoyjOGC1ZRA0E0VQWQ9OJaiAGFqFgyvp6hHwySrU5
      oVDZoN8+J5pfIxq+qAa7qAibIBSFeOxydQBLvh5zc4KXxTbfDCEEx81TQvrl0kKCwEe+5Fih
      t1ljbiuA510ynnfNEEIwHbhI48vdnxa1EmtRNOZmANFoFIRgf/cxkp4hgokZRLi5WWbv2TPQ
      ky+OSBI+T54+587dmzx88Iz3378PfPNSQSECjg/2yJQ3SL4heURCCP63//ijZUHMFTNfH8Cf
      IMdKCLdLrdElUVxFILAdh2Qqwu6Dj5jISWJMsSWd9+7u4M7GnB+fMA0kTvcec9r3kO0uG1s3
      2dvbo7KxhTkckC2vs1bKfulhO+cnxIvrhHF59vSI0kqZ+ukZufIKrUaLYqFAPKEzGY1otofc
      vneLN7eYcsk3Yb5RIFlj1DplagniCYN+t4MQoEejtJpV+sMJw0GfaCJLNh5FAKlslrNmn5wR
      ot/vMxwNyOfz+LaJ5Qlc2wJJwTR/fe1s6/yQ7nBMo92hUF5l1O4wm06ontcYjQY0uwNsc4i5
      dFeuDXPPBn33/fdAlpGEIBAgSzIbm9tsygpC+CDJyJ9vVUuSxNr6NmvrF8/BQmzzjpCQJRBI
      lNe3URTl4rnuK3YIc6sbHO8/J1XaJOvXKBVKxCIamirhIlhfK3Ny1qRSzNGQFKKhl0otectY
      pkIsKEIInjw/QAlpl9JZVOdzUTQWYh+g3+uRSiV4+vgxIhz/lRaBPq1mn0g0TJRWmHMAABl0
      SURBVCL++vv2zxNZUVHUSy5HsoJyybFCb7PGnA0g4PEnH6Eki/ijPlI0QTgw6Ux8/skHd5lM
      TUJo1GpVQqrMzLJxAxCOwPMVzg8PEZEEEWaMbIVcTFAfC/JRic5wQkjTyRhhzltjvv+D733R
      uc2Z9Hl6VGVjbYXTs3NyxVWKiRDtqU8i5LF/VGXn1i3Ojo/YvHGLyJfVIb8G/uqT3WU69BUz
      XyfYt+n2J7TbTeKZEnFNZua4RD6vDw5rERzHYtTvsH90wswRbG9chEan5gQjXSShq1i2g+tY
      dHo9uq02RAyKpRIr+QT1RptA+AS/UElo9Ses39micbzPLAgxHPSpNzsMem167SbhRA6zUyO/
      UqRaXY4lvU7MdwVQIvzgt34TJRRGlmRAUCyVCJBBCnH79i0kJYQqg+sHhEMhJElma2edizS+
      i/fY0wFB2OD29h3uCpnQ5x3gJAky+TK24xH+pZu4y/PdY95ZqxCMZIQ1olFrMbUCUu/ex+if
      UZ3o5EMzJOVyz9xL3iyuhRPsWRZoGmrgsndwRLpQJhbWCIdgas5o98ZsbZQ5P6uxsraGcskh
      DK+CZUXYfLgWBvAmIoSgWm+ix4xL6Sxq9GVRNBYiCrTky5kEI2zPupRGEATIr2LY9luqca0M
      oN+ucVptUN64QyEdZTgckUy+PLTq2jOkkM6rHDzvOA7hsMps5qLrX+1vPGk9X45IumKuhQF0
      221iMQ0lmqOQsYmEYWa79FpVjo6OqZRy1Jpdsvk8+UyMbmtEtz+kUkzgINOsNVjZ3KZ+ekB+
      9TYxMeTgvMVKuUxnPCOueriKTjAZkCisMu5UiWUL9GoNjGyOpB7C8Wza/RmTXo2V7YuKsFGv
      SjRbYtJpoCUL3Nhced2X6tpxLSrCklGZTx4do0fA9FWMSJiQqqBoBttrZarNNrmUQb1epdmo
      MhxbDLs1uv0JM9fj5s1VWtUWyUyS0cTCsWxyOYNWo0d5bY3nT5/S7Q2xrSmN5inPnh0yGA2J
      JbLEVZ+TVp9+q8Hz/T0y+TKphI456uBIcabjLol0GU32AYHrODjuMnV8XlwbJ3gymRDTNRwh
      owofHwWEjyLLCOHT7g7JZ5N0egOS8TiD4ZhsJomQZFRFYjYe8Q8/+Sn3fuN3iDhdRiLCai6J
      pIYxRz2cQEXyZoSNFM5kgBqNEwmFCKkSU8tDDmwmdkAyGsZ0AqKRCOa4T9hIEpIvwrsXj0Y2
      SDIRLcy/++SPl49AV8zcDGA4HHJNbO2VMRwPieiXa9K1qJVYi6IxNx/gsv1trhtCCD787BmW
      d7mbRhAEyJfMn3mbNebrBAuPR589QIrEiUge1e6E3/nh93nwsw9xFYPvfuedL5ySTrtBIlUg
      /BWjGF13yGAQQvG7nLaGrK6uoss+GFliv/DJhGfx6MlzKhs7ZJNvTt/PP/vbj5cVYVfMfA3A
      M4nlNhDukM2VCrI+vvhrz8En4NFP/4pHpxP+ybub1LsjijkTzxpeTJaRbMYji6gRwTItjLjB
      eDqgVLmPO3V4/913qNdO6TUbDPQhOV1FJmBzc5PqWZUb9+4jZgN+8uEjKutrdGp10vkCjWaX
      1VKeVDZBp9Wi05vx/gf3r0d4bMmco0BqDLN7iu3JdLsDypUCAJW1LYoZg0g8y7t3byLLEmFN
      o5AKg57Gdj0MTUNWVXRNQ1YUQqqKooQIqTKpeITPHj7G9qC4ukJIVlCdIapxUSKZMCIcHx9T
      PTtlMDYxbYutGzcJLAtz0KHb63F8fIxpewy79WVF2DXiLY0CCarnNcorlc+rywST8YhwJMps
      OkWPGaiKTOB7TE0LI6Yzmc7QdY3ZzCGR+LrjWK/wEwjB7/7+Hywfga6Yt9QA3nyWzXHno7EQ
      j7rNRoNCIctHP3vIBx/c5e8/fMRv//D7v/Sa09MT1tc3vvj52aNPmFpw/4Pvov38Qc4d0xjK
      lHJvjqP7VTzYO8OXapfSWNToy6JozDkKFPDXf/7HyLkNdM9G0g00MWPkKBQKGTQFDvZOiKUS
      fPij/5eGE+VmMcrEC5FK6BzsPqLXn3H/B9/HdV1EIHP49GMe7Lf54PYKoUiIk7Mh2nfuk47/
      Y9+gWbfJk/M65VyWWqtHKp1jNa1Tm7hkNZ/D8w7b2xsc7O2zffddUtHFGNL35Ki6TIe+YuY8
      IslBT5UJR1Ty6QoIm157hqaFAYlcqUi92SOXNjCzRZJ6hmQsTFYC07KRXB9JUZCAXGmNcrnM
      3tMHrJSyRBMZVvIGrhtmZjm/ZACuOSNZyDLtdpjagpjr0ujZeF7A1HERSohJt8ut9+/ROu2Q
      2q7M9bIseX1cCx9gdHZMW4uxHvH5yV6baFjGnwxw/YDyxjbj1imhRJHpuE9+5Qbrxde/abcs
      iJkPC+EDXDXxlXXikoQEfP/dDIqiIkkSkgQiCPBLBVRVxfPWLu1kvUrCIRVdu+yYVC4d0Xqb
      Na7FCvAmsowCzUdjcW53S17gWXsfMbycxqIOp1sUjWtlAP12jeOTUwqb77KSi9Fud8jncy99
      vW2OIJxAe4VXaTKZYBg645FFPPHV4drqqL5Mh75iroUBtKpnqLqGHM2RyczIGDIz22UyaHN6
      ckomk6A/GBMx4mysZKmfdjhttHjn1gqzoEu30SJbXqfXPCNVukmCAceNDplkmpEvYTePsCNZ
      NHtA5cY9nn/6E/I7d3B6A5L5HEYkjGOPeHTQJhuD1e0dAitgf/cp0WwGs9NBS+W5d2vrdV+q
      a8e1qAjLFzI83T0nHnYJQjHUz1dANRLn5vYalmVBEOA7M54+fYaLCvaQwdgmkFTu3NnCGs8I
      hIfl+HiuQyAEvgdbW1sgq6QTcYyYTrPVQg3HMKIRipUNyimd+sBkNjEJKZDL5RGAY9s4XoDj
      2OTLGyR0lYsRSSNGk1/f6XrJq2HpBH9NHHPE7v4xazfuEHKnhOJpwld4+xBC8KeP/mI5JvWK
      Nb4wANM0l3O8FoxvOgnny1jUfjyLovHCCuC5Do4XoOsRfNfB9QWRiHZpw/s5rm2BEoLAI0BG
      C4ewZibIISJa6EtPUgQ+ngAFkGTla8WCX8XFep0IIfiX/9cf0x1dzgle1OjLomi84ASP+l2O
      jk64/cFvcvDgE4xshWI2zsyVMCIyw4mNN+wgZYpovkUknsX4upMMA4enT3chHEayZ9iE+I3v
      vsvesyc4QYidnVUCSaPbrrFWLjFxIJdO0Dg/oW9LJEMuk5kgXigQkzzkSAIjotJsNkllC0yH
      HTQjjT8bU+30uXfrJgDudMDDvWPWN2+SS705iXJPDk6X6dBXzAsGENUjqGENRMDmxgaH5118
      q8/uaY+7myUsH5KSIByWOXywR6D3+M0P3vl6RwtsjEwF4faxPZnAv7BE17EIxRPUT4447zts
      ruY4PjlBuGCk3+X8/JyhI5PYLICAkORy1hoiBV1ubVbY33tOtNEjGguhDIf4Lqihf/xotWaP
      995/n0nrlP/z//gj7v/G97H6PYxkgv3DOnd31smVM9ROTjltTfnn//yH1yM8tuTF33Ov3/u8
      Q7NEdzAgHImgRwSVUohMroAkSYQCm3pniJFIE46nvsHRDJidIkcz6L6PH1ysHFs375HOpDne
      26UYVkgmErizCT0zQAtc1m/cJ6Z6DJyAoiHTGtmEA/ui4kuWSWVyGEaSdC6N79g0q2fI+j/G
      90u5BJ9++hkpQ+fGnXdIxHXWivcYdjqkdLA9h2fP9khn8+i0mTqQXIyE0CVXzDIKtKAIIfjv
      /uW/ptEbX1pnEZ+9F0XjBQMQQuB5HoqiIEnyKy8NfGlRgxD4n/+bECAvQIvy18kyF2g+Gi+o
      VY/3GNkQlgJK6xtYM5tkPIZl2/iOjRZLoGvffm5V9fyc1bVVBv0+sUSKyaBPPJ1B8md8+NOH
      /OCDbZ4dmWi6zGY5z8RyiWkKM1eQSlyuVfibxl9+9ISJc7kFelHvvIui8YIB2L7C3ds7nB89
      p9es8vjJLpW1TTL5ItW9zxCxIr/1wf1LncS0X6fedZCaNepnLd7/rf8Mr3OMaVl0hjPwfWzX
      5/DwACSwTBs3FOP77935Vseb1E950uqSj+rUBjPSySSraZ2zkUNR9zluTthaK3J4eMzajXcp
      ZS4Xe39VNHujZT3AFfPCs0guHePho8comkEoFKayskI6m6ecS5FIZcmmLzepcTLo0JkEeNMB
      yXSBQiEDCEQkzT/94ffAl8gXs+A6xI0oji9TKOYvteoEnkcAiMDD8wMCAc3eAH82IRASsvAZ
      9Cbc+953mA0Hl/p8S94sroUTPGk0oFjEsPr83aMTkgkDyZkhEaAlsoy7DbKlVRrVM9Zuvksx
      dbl+nK+CZUXYfLgWBvAmIoTgP/7oJ5iX7JQuggDpkp0U3maNpQEsKMso0Hw0lhueC8xPzj7G
      rruX0ljUWtxF0bgWBhAEAZIk0W/XOdjfo3Dze6zlYtSqVYrFIqqq4Hn+53sfEkIIfN/Ht03Q
      4ij4nxfNexcF9Qhc3yekKviBQPp8hrEQPpKsID7vQS+CACQZWYJACAIh6Pe6ZLJpphOHWEz7
      4vVICqryy8v72JkydZcVYVfJtTCAbu2EmVCIZ8pkijMqSRXH9XFnEx4+aBLWwgSejyUk7t6o
      cHrQ5uj8nPfubmBJLab9LpF4CdtsE0ltkZZ61AYjQkLDixr09j/DT1TQ7R75rdvs/uwnrNx7
      F7c/Jp1PE1JD+PaAj5832Col8aVNJp0x/eEEPaljD8ZoyTTv3rv1ui/VteNaGEC+ssqDx3us
      lhyseBaEQCCIJTMUiiW6/R7d3ohCOsH+/jGpVIWSNUCoOoYeYa2Uo9WaYg5sAi5WCNeTKRaz
      JEtlTu0BoXgOaabjBrC+vUM+nyWUL5PUBUftKXo4wuZamUougedD1IhjmhN0PUYxWwI8LirC
      JghFIR5bjL2It52lE/w1ca0Jzw/PuXHrFrgWihZ9peNTfxUhBP+w/1OCSybliUAgXTKt5G3W
      WM4IW2CWFWFXrzH3GWGd+ilSNIeYdfFDSYrZBK3aCa4SZ6WY+Uaa0+mEWOztzA8SQvDf/0//
      N6fN/mWVWMhi3AXRmK8P4Jv0phJieIDjyLhBj2L6DtX6gPXtJMPBCBDY5pC+GZCNh+gMLIql
      HLoqMXYEEUXCNkeMHBnfnlDMpmiNHHY2Vl6aKGX2mjw5qbO5uUNYFkSNKLPJFC0WuxiYoUdR
      VRnf9zFNi0Qy8cpKQC/DaGrSHYxe92m81czdCZZkGeQwaytpHu+dgBRia2uF4/NTomEDz7PQ
      9QhGWKY/scnEFMbDPqcTl5wRoucEyO6U03qfldUSz589xQ0n2d5YeemXtjOY8t777zOo7vNX
      n+2ydesWsusiSTInZw3WKiUq6wVqZ1VqzSG//c/+cyLXomHMkvkagKITDzeRUxXMcYudmxdh
      v2G/R764CrM+rpIhn44jAwkBYRmkUQdLNygWEmhWgDBVlGj6IjEvm6DWt77yjr2yUuDhg8/I
      ZFKsrK6TSadIxuKM+z1msxmJZJSDgxNy+QJZ28X3uSYdk5Yso0ALihCCf/P//CXj2eV2ghd1
      MsuiaCyEAViWhaaF6fUGZDJput0uudzLe3ZeB5a5QPPRmLMPIDg5eI6eKeEMOgRaHB2Lw/qA
      H3z3Ds+f7XL/3iafPavz3Zs2Q0chm4wiSeDZM5q9Mf64h5KroHsmeqaIOzWRfBNHMdhcLX7p
      UQPfw7Rs9EgEy7IIhSOEFPACUCSBObPQozEc2yISiVy66uhV8a//00/oTpbp0FfJ3Eck9YcT
      qt3nFLMlVHtC3xcUMxdFNvlskkf7bdaKMZrdMTKCqjVCDnwUNUwqrmGRp7iSY/fhY857EwrJ
      FIoCCi/PmZnUzji2bCL2jL4fIaLKrKQiVMcuxaigN5PJxUPUOz3ShS3WS69/QgyAHwR4/uUG
      ZCz5auZrAJJK3IhRSGVJRGMgfEa9FpYUBkmhtLZBfDIlEgnjzsYMHYVkyKc1cSkX8oRUmYTh
      Uqu2SRgG+UQGQ9NQfu2WrMA0LXLJGPXGhGQuw9n5Oe2Jz9p7N3Da57TdJDt3b9M86wOLYQBL
      rp6F8AGumlmvB+k0ujPhZ08OSabTxPUoCR2a/RnDfpeN7W2O9y+mRCb0b19++apYVoTNh7ka
      gPAtemOfsLAIQjrxWJRr3v3kpQgh+PtPnxJIl1ukFzX6siga810BRMDB4TEgiEUiSJJHo2tS
      KOawRgPiqRTJTI7Q0ioQQtAf9EkkL9eEwPN8VPVy+TNvs8acfQAZGZdAjjKbmrQ6VRx0jGgI
      17Fon7X5fi5/ZYefTceMJibJdJZIWMV1XUKh1/+48zJ+dPR3yxFJV8zcUyHW1zbwpBCy8FnZ
      WGU0tUnFdXyhEATeleTgmKaJFg7huB6jdg1PjpBNxmhWzxCSwkqlwFm1RalUIBxSsC2XRrNF
      NqVD2KDXarG6sU7t9IRceY2QsDlr9FhfKTAYTVHx8NUYYtYnZGSxRx1i2SLOeARhnUREZTKb
      MjZ9Bq0T8qubyL6K8MfoqQKzfhs5mqKQudzdfsk3Z+4GoIQjXCxAF//NafovnMjVnI4/6bLb
      t1nf2kLWk1RyccTnhS3hkMxnj3fZLOf59NET3rm1yvnJkMmkjxyk8NQpiZjCs6eH5PI61eaY
      tDIiEZN4/OA5qc11qg8/IZItEfFttKTN2eEppU0bd+qTy+i02wG6ZLN72mRzfY18OsrR81Mc
      KYY03kchSsjpLg3gNXAtKsLihRWi5hlRySaTL+M5Nh4qqUyOSFglEglzXu9we2ud07M6uXwJ
      JJt4KoMUDhGPqAh/yCcf/ZSd7/wXBJ7DecPlxo11Iok00voqfjiB4kwIGSkqlRmJVIZYPoIR
      Ab8/QwtkSqUymXiERmdKplCh2zojlilhaBHAZ1kRNn+uRRj0VRD4LqOxSTyRAOEjyeqVRrCE
      EDw920WNXs5H8f0ARblc5ORt1pjbCvC2VISNR5ecXP0NkC0Vxb+kkx4EKJcMHb7NGnNeAQT1
      o1308m1mrSOmQuPGxgqN82NGjsyt7fWXvzMIcH0f13WJfeMyQUGzdo6RKRKLvBmTL4QQ/O7v
      /8FyRNIVM3cfIJ/UqNkerqsixAwCm7Elc2O7QrPRBgKsSY+hLZGLh+mMPbIJlWF/QnNisbVW
      YdxtUeuMWCllqDX73L57l+hXjHPv18+wlSiG77C3e0xlfZX6yQm5lTWa1SrFUploTMM2Tc7r
      XW7ducGbO15vyTdh7tmgo+GYgTwiZI1xkUFS8awx7W6PdrOJ5fmkjDAKAYcHh0h6iqie4/ad
      m3B0jjUzkSM6m+U81V6XpB5iPLOIai+vDbYcj2QxQe98j3Z/gitDLpunfX7GaDzDtc8or+Vo
      NnrYsxmWB7FrER5YMv9fs1GmrCjE8xt4qCAp7NzYZGoHbG6tEchhRt0m+UyRmzubjGceCSOK
      rKpUijkiehRFlpEliUQ2w3Bskkl+9eTH0toaz589J50vkLDg/2/vTHobqaIo/JWn2I7L8VAu
      z05C0lIIDUEoiB/OiiUsgFVaSughTjtOYsdDuTzi2a56LBAsoNOUlASV2u/7Abekko7evVfv
      nKendNRQmIAHVrZBLqtTaxik0xpmp4dfusE2BrkFcilCCH49u8BWHhsD4s7ti1tquOKgHw1H
      qOo21UoZX0SjlP33dQjbXmPbHnzPmUblMrJpjVDoce8auzWPxy01/mcB2FTLl/iiCSYdAyW8
      w5Y9oTVc8u3XR/T6Q0pagbvrS+zADva0S1BN0DMMgmoAswuZhIepFSAWFDT6Mw5yCermmJdH
      hw86uWY9gze1Bnk9xX3LJJZMUYiFaIxXJLcsKrUOBwf7VMpXHBy74zo0wA+/XMjr0M/M3y3Q
      dDpluVw+79fEmvK7S2x/iHRSA7FCeLx4hCAWjwOCVstgMjSZKyH0RJTtgEKlck28dEhsa5vZ
      bIBPKKz8XlhbsJpx3ezz3TcnD0Znz/t9iEcZN+7x7mRYTYb4fR5Wa0HQD6EdjcWwg0/dYTxc
      oCXV5/0PDvn+p1f0p48zxUs+jpwBXMpTmeLd2nq4pcbmNNQbylMY/D/lGlIAnziPdVB96jVc
      sQWSfJjZyOTq8pJ08RCfmDBfe9grPRwB+Ret27csgwXsUY3O2CKb1giIFaFEFtXhgN++v6He
      7pOIqXR7A9L5PEFFIAJR9ISzQOKB2eSmekssU8BoNiju5rCsIAJBMefM+CSsBT/+fMYXn2W5
      bXTIFIsEENj+CBmHs9qgfUO5PmS/oFO9rVPazbC0wiDW8gRwM7PxmBcnpyxGJm8uzolpuiPD
      UCab/fMxLF+YnBZl1DOomRMiQefbrXgiSTyexMbH50cl+q0OrytNUnHnadwRNYq1tplPl5yc
      HvO72ef8/B0pPem4RvV9hYgaYTy3efnlPr2GwW/lumMRAti2glex6XbHfHV6zLQ/4PzVa7R0
      Sg7BbkUIgXFfpd7skim9wCcmTBeCvVLhPx6KE9xdXXDX95BP+OhNLDJ6ki1lhU/ViW1vOfr+
      2/MzVt4Q8e0ARm9IOpcj7FVYKEGymrPB3GzVuG+2iMbTmJ02pb08lhVkba0o5T8cYvZPjEaN
      yl2TQiaJYQ7IFAsEPQpzESCvxxzVGJotbmp14sk07Xab3b0sSyuMtZ5LAbiVp9oCST6ObIEk
      G40UgGSjkQKQbDRSAJKNRgpAstFIAUg2GikAyUYjBSDZaP4AV6BsJphRJc8AAAAASUVORK5C
      YII=
    </thumbnail>
    <thumbnail height='192' name='SD Table (Census vs BAUS)' width='192'>
      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
      ZjW/ccwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='SD Table (PBA50 vs BAUS)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='SD Table (compare two or more)' width='192'>
      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
      OicVQvDNAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Superdistrict Map' width='192'>
      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
      ii76GIguzP8B/9NTd12gm/QAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Vacancy' width='192'>
      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
      8/8Bou9UqSjDPQEAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
