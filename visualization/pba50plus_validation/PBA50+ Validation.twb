<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0909.1159                               -->
<workbook locale='en_US' original-version='18.1' source-build='2023.2.2 (20232.23.0909.1159)' source-platform='win' version='18.1' xml:base='http://localhost:9100' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <SpatialFileLayer />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location derived-from='https://10ay.online.tableau.com/t/metropolitantransportationcommission/workbooks/CensusvsPBA50vsContingencyPlanrunscomparison?rev=2.1' id='CensusvsPBA50vsContingencyPlanrunscomparisonv2' path='/t/metropolitantransportationcommission/workbooks' revision='1.0' site='metropolitantransportationcommission' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='taz_data_wide_vacancy' inline='true' name='federated.183kuxz0zrxkm51f03wsi1n11km7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='taz_data_wide_vacancy' name='textscan.0wfh7yg0gygdzp1c8mm261l5yf1f'>
            <connection class='textscan' directory='E:/GitHub/BAUS/bayarea_urbansim/visualization/pba50plus_validation' filename='taz_data_wide_vacancy.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='superdistrict-county' name='textscan.0ymvze51qxnmla122zli9059xu6k'>
            <connection class='textscan' directory='X:/travel-model-one-master/utilities/geographies' filename='taz-superdistrict-county.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0ymvze51qxnmla122zli9059xu6k' name='taz-superdistrict-county.csv' table='[taz-superdistrict-county#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='ZONE' ordinal='0' />
            <column datatype='integer' name='SD' ordinal='1' />
            <column datatype='integer' name='COUNTY' ordinal='2' />
            <column datatype='string' name='SD_NAME' ordinal='3' />
            <column datatype='string' name='COUNTY_NAME' ordinal='4' />
            <column datatype='string' name='SD_NUM_NAME' ordinal='5' />
            <column datatype='string' name='COUNTY_NUM_NAME' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.0wfh7yg0gygdzp1c8mm261l5yf1f' name='taz_data_wide_vacancy.csv' table='[taz_data_wide_vacancy#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='TAZ' ordinal='0' />
              <column datatype='real' name='non_residential_sqft' ordinal='1' />
              <column datatype='real' name='non_residential_vacancy' ordinal='2' />
              <column datatype='real' name='residential_units' ordinal='3' />
              <column datatype='real' name='residential_vacancy' ordinal='4' />
              <column datatype='string' name='source' ordinal='5' />
              <column datatype='string' date-parse-format='yyyy' name='year' ordinal='6' />
            </columns>
          </relation>
          <relation connection='textscan.0ymvze51qxnmla122zli9059xu6k' name='taz-superdistrict-county.csv' table='[taz-superdistrict-county#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='ZONE' ordinal='0' />
              <column datatype='integer' name='SD' ordinal='1' />
              <column datatype='integer' name='COUNTY' ordinal='2' />
              <column datatype='string' name='SD_NAME' ordinal='3' />
              <column datatype='string' name='COUNTY_NAME' ordinal='4' />
              <column datatype='string' name='SD_NUM_NAME' ordinal='5' />
              <column datatype='string' name='COUNTY_NUM_NAME' ordinal='6' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[taz_data_wide_vacancy.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[taz-superdistrict-county.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TAZ</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TAZ]</local-name>
            <parent-name>[taz_data_wide_vacancy.csv]</parent-name>
            <remote-alias>TAZ</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz_data_wide_vacancy.csv_A8959EF309D149BBB60C941C3181FA48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>non_residential_sqft</remote-name>
            <remote-type>5</remote-type>
            <local-name>[non_residential_sqft]</local-name>
            <parent-name>[taz_data_wide_vacancy.csv]</parent-name>
            <remote-alias>non_residential_sqft</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz_data_wide_vacancy.csv_A8959EF309D149BBB60C941C3181FA48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>non_residential_vacancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[non_residential_vacancy]</local-name>
            <parent-name>[taz_data_wide_vacancy.csv]</parent-name>
            <remote-alias>non_residential_vacancy</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz_data_wide_vacancy.csv_A8959EF309D149BBB60C941C3181FA48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>residential_units</remote-name>
            <remote-type>5</remote-type>
            <local-name>[residential_units]</local-name>
            <parent-name>[taz_data_wide_vacancy.csv]</parent-name>
            <remote-alias>residential_units</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz_data_wide_vacancy.csv_A8959EF309D149BBB60C941C3181FA48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>residential_vacancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[residential_vacancy]</local-name>
            <parent-name>[taz_data_wide_vacancy.csv]</parent-name>
            <remote-alias>residential_vacancy</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz_data_wide_vacancy.csv_A8959EF309D149BBB60C941C3181FA48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source</remote-name>
            <remote-type>129</remote-type>
            <local-name>[source]</local-name>
            <parent-name>[taz_data_wide_vacancy.csv]</parent-name>
            <remote-alias>source</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz_data_wide_vacancy.csv_A8959EF309D149BBB60C941C3181FA48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>129</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[taz_data_wide_vacancy.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz_data_wide_vacancy.csv_A8959EF309D149BBB60C941C3181FA48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ZONE</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ZONE]</local-name>
            <parent-name>[taz-superdistrict-county.csv]</parent-name>
            <remote-alias>ZONE</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz-superdistrict-county.csv_AD28CC250C734283BC405DD3F90F7E77]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SD</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SD]</local-name>
            <parent-name>[taz-superdistrict-county.csv]</parent-name>
            <remote-alias>SD</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz-superdistrict-county.csv_AD28CC250C734283BC405DD3F90F7E77]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[COUNTY]</local-name>
            <parent-name>[taz-superdistrict-county.csv]</parent-name>
            <remote-alias>COUNTY</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz-superdistrict-county.csv_AD28CC250C734283BC405DD3F90F7E77]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SD_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SD_NAME]</local-name>
            <parent-name>[taz-superdistrict-county.csv]</parent-name>
            <remote-alias>SD_NAME</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz-superdistrict-county.csv_AD28CC250C734283BC405DD3F90F7E77]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTY_NAME]</local-name>
            <parent-name>[taz-superdistrict-county.csv]</parent-name>
            <remote-alias>COUNTY_NAME</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz-superdistrict-county.csv_AD28CC250C734283BC405DD3F90F7E77]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SD_NUM_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SD_NUM_NAME]</local-name>
            <parent-name>[taz-superdistrict-county.csv]</parent-name>
            <remote-alias>SD_NUM_NAME</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz-superdistrict-county.csv_AD28CC250C734283BC405DD3F90F7E77]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY_NUM_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTY_NUM_NAME]</local-name>
            <parent-name>[taz-superdistrict-county.csv]</parent-name>
            <remote-alias>COUNTY_NUM_NAME</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz-superdistrict-county.csv_AD28CC250C734283BC405DD3F90F7E77]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='County' datatype='integer' name='[COUNTY]' role='measure' type='quantitative' />
      <column caption='County Name' datatype='string' name='[COUNTY_NAME]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='County Num Name' datatype='string' name='[COUNTY_NUM_NAME]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Res' datatype='real' default-format='p0.0%' name='[Calculation_91760862833213440]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([residential_units]*[residential_vacancy]) / sum([residential_units])' />
      </column>
      <column caption='Non-Res' datatype='real' default-format='p0.0%' name='[Calculation_91760862837256194]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([non_residential_sqft]*[non_residential_vacancy]) / sum([non_residential_sqft])' />
      </column>
      <column caption='Sd Name' datatype='string' name='[SD_NAME]' role='dimension' type='nominal' />
      <column caption='Sd Num Name' datatype='string' name='[SD_NUM_NAME]' role='dimension' type='nominal' />
      <column caption='Zone' datatype='integer' name='[ZONE]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='taz-superdistrict-county.csv' datatype='table' name='[__tableau_internal_object_id__].[taz-superdistrict-county.csv_AD28CC250C734283BC405DD3F90F7E77]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='taz_data_wide_vacancy.csv' datatype='table' name='[__tableau_internal_object_id__].[taz_data_wide_vacancy.csv_A8959EF309D149BBB60C941C3181FA48]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Non Residential Sqft' datatype='real' name='[non_residential_sqft]' role='measure' type='quantitative' />
      <column caption='Non Residential Vacancy' datatype='real' name='[non_residential_vacancy]' role='measure' type='quantitative' />
      <column caption='Residential Units' datatype='real' name='[residential_units]' role='measure' type='quantitative' />
      <column caption='Residential Vacancy' datatype='real' name='[residential_vacancy]' role='measure' type='quantitative' />
      <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
      <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='taz-superdistrict-county.csv' id='taz-superdistrict-county.csv_AD28CC250C734283BC405DD3F90F7E77'>
            <properties context=''>
              <relation connection='textscan.0ymvze51qxnmla122zli9059xu6k' name='taz-superdistrict-county.csv' table='[taz-superdistrict-county#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='ZONE' ordinal='0' />
                  <column datatype='integer' name='SD' ordinal='1' />
                  <column datatype='integer' name='COUNTY' ordinal='2' />
                  <column datatype='string' name='SD_NAME' ordinal='3' />
                  <column datatype='string' name='COUNTY_NAME' ordinal='4' />
                  <column datatype='string' name='SD_NUM_NAME' ordinal='5' />
                  <column datatype='string' name='COUNTY_NUM_NAME' ordinal='6' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='taz_data_wide_vacancy.csv' id='taz_data_wide_vacancy.csv_A8959EF309D149BBB60C941C3181FA48'>
            <properties context=''>
              <relation connection='textscan.0wfh7yg0gygdzp1c8mm261l5yf1f' name='taz_data_wide_vacancy.csv' table='[taz_data_wide_vacancy#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='TAZ' ordinal='0' />
                  <column datatype='real' name='non_residential_sqft' ordinal='1' />
                  <column datatype='real' name='non_residential_vacancy' ordinal='2' />
                  <column datatype='real' name='residential_units' ordinal='3' />
                  <column datatype='real' name='residential_vacancy' ordinal='4' />
                  <column datatype='string' name='source' ordinal='5' />
                  <column datatype='string' date-parse-format='yyyy' name='year' ordinal='6' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[TAZ]' />
              <expression op='[ZONE]' />
            </expression>
            <first-end-point object-id='taz_data_wide_vacancy.csv_A8959EF309D149BBB60C941C3181FA48' />
            <second-end-point object-id='taz-superdistrict-county.csv_AD28CC250C734283BC405DD3F90F7E77' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='TAZ-level data' inline='true' name='federated.0kyp62f0hvmbrs19zsgps0kbnizi' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='superdistrict-county' name='textscan.1v8s6if1ujs6u516sh0g90n8mu4t'>
            <connection class='textscan' directory='C:/Users/etheocharides/Box/Modeling and Surveys/Urban Modeling/Bay Area UrbanSim/PBA50Plus_Development/Contingency Reassignment/bayarea_urbansim/visualization/pba50plus_validation' filename='taz-superdistrict-county.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='Travel Analysis Zones' name='ogrdirect.1c8sxet1mhg3lx173fw1q0zgbv0n'>
            <connection class='ogrdirect' directory='M:/Data/Urban/BAUS/visualization_design/data/data_viz_ready/spatial' filename='Travel Analysis Zones.shp' server='' tablename='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='taz_data_long' name='textscan.0qjh7st1rvhg341gqhhlx0kenr0m'>
            <connection class='textscan' directory='C:/Users/etheocharides/Box/Modeling and Surveys/Urban Modeling/Bay Area UrbanSim/PBA50Plus_Development/Contingency Reassignment/bayarea_urbansim/visualization/pba50plus_validation' filename='taz_data_long.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='ogrdirect.1c8sxet1mhg3lx173fw1q0zgbv0n' name='Travel Analysis Zones.shp' table='[Travel Analysis Zones.shp]' type='table'>
          <columns>
            <column datatype='integer' name='SUPERD' ordinal='0' />
            <column datatype='integer' name='TAZ1454' ordinal='1' />
            <column datatype='real' name='Shape__Are' ordinal='2' />
            <column datatype='real' name='Shape__Len' ordinal='3' />
            <column datatype='integer' name='within_5mi' ordinal='4' />
            <column datatype='integer' name='within_3mi' ordinal='5' />
            <column datatype='integer' name='within_2mi' ordinal='6' />
            <column datatype='spatial' name='Geometry' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.0qjh7st1rvhg341gqhhlx0kenr0m' name='taz_data_long.csv' table='[taz_data_long#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='ZONE' ordinal='0' />
              <column datatype='string' name='variable' ordinal='1' />
              <column datatype='real' name='value' ordinal='2' />
              <column datatype='string' name='source' ordinal='3' />
              <column datatype='integer' name='year' ordinal='4' />
            </columns>
          </relation>
          <relation connection='ogrdirect.1c8sxet1mhg3lx173fw1q0zgbv0n' name='Travel Analysis Zones.shp' table='[Travel Analysis Zones.shp]' type='table'>
            <columns>
              <column datatype='integer' name='SUPERD' ordinal='0' />
              <column datatype='integer' name='TAZ1454' ordinal='1' />
              <column datatype='real' name='Shape__Are' ordinal='2' />
              <column datatype='real' name='Shape__Len' ordinal='3' />
              <column datatype='integer' name='within_5mi' ordinal='4' />
              <column datatype='integer' name='within_3mi' ordinal='5' />
              <column datatype='integer' name='within_2mi' ordinal='6' />
              <column datatype='spatial' name='Geometry' ordinal='7' />
            </columns>
          </relation>
          <relation connection='textscan.1v8s6if1ujs6u516sh0g90n8mu4t' name='taz-superdistrict-county.csv' table='[taz-superdistrict-county#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='ZONE' ordinal='0' />
              <column datatype='integer' name='SD' ordinal='1' />
              <column datatype='integer' name='COUNTY' ordinal='2' />
              <column datatype='string' name='SD_NAME' ordinal='3' />
              <column datatype='string' name='COUNTY_NAME' ordinal='4' />
              <column datatype='string' name='SD_NUM_NAME' ordinal='5' />
              <column datatype='string' name='COUNTY_NUM_NAME' ordinal='6' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[COUNTY]' value='[taz-superdistrict-county.csv].[COUNTY]' />
          <map key='[COUNTY_NAME]' value='[taz-superdistrict-county.csv].[COUNTY_NAME]' />
          <map key='[COUNTY_NUM_NAME]' value='[taz-superdistrict-county.csv].[COUNTY_NUM_NAME]' />
          <map key='[Geometry]' value='[Travel Analysis Zones.shp].[Geometry]' />
          <map key='[SD]' value='[taz-superdistrict-county.csv].[SD]' />
          <map key='[SD_NAME]' value='[taz-superdistrict-county.csv].[SD_NAME]' />
          <map key='[SD_NUM_NAME]' value='[taz-superdistrict-county.csv].[SD_NUM_NAME]' />
          <map key='[SUPERD]' value='[Travel Analysis Zones.shp].[SUPERD]' />
          <map key='[Shape__Are]' value='[Travel Analysis Zones.shp].[Shape__Are]' />
          <map key='[Shape__Len]' value='[Travel Analysis Zones.shp].[Shape__Len]' />
          <map key='[TAZ1454]' value='[Travel Analysis Zones.shp].[TAZ1454]' />
          <map key='[ZONE (taz-superdistrict-county.csv)]' value='[taz-superdistrict-county.csv].[ZONE]' />
          <map key='[ZONE]' value='[taz_data_long.csv].[ZONE]' />
          <map key='[source]' value='[taz_data_long.csv].[source]' />
          <map key='[value]' value='[taz_data_long.csv].[value]' />
          <map key='[variable]' value='[taz_data_long.csv].[variable]' />
          <map key='[within_2mi]' value='[Travel Analysis Zones.shp].[within_2mi]' />
          <map key='[within_3mi]' value='[Travel Analysis Zones.shp].[within_3mi]' />
          <map key='[within_5mi]' value='[Travel Analysis Zones.shp].[within_5mi]' />
          <map key='[year]' value='[taz_data_long.csv].[year]' />
        </cols>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[taz_data_long.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[taz-superdistrict-county.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ZONE</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ZONE]</local-name>
            <parent-name>[taz_data_long.csv]</parent-name>
            <remote-alias>ZONE</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz_data_long.csv_7DEF6B455F6F48C4A4E2CFCFE2A26C3F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>variable</remote-name>
            <remote-type>129</remote-type>
            <local-name>[variable]</local-name>
            <parent-name>[taz_data_long.csv]</parent-name>
            <remote-alias>variable</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz_data_long.csv_7DEF6B455F6F48C4A4E2CFCFE2A26C3F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[value]</local-name>
            <parent-name>[taz_data_long.csv]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz_data_long.csv_7DEF6B455F6F48C4A4E2CFCFE2A26C3F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source</remote-name>
            <remote-type>129</remote-type>
            <local-name>[source]</local-name>
            <parent-name>[taz_data_long.csv]</parent-name>
            <remote-alias>source</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz_data_long.csv_7DEF6B455F6F48C4A4E2CFCFE2A26C3F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[taz_data_long.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz_data_long.csv_7DEF6B455F6F48C4A4E2CFCFE2A26C3F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SUPERD</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SUPERD]</local-name>
            <parent-name>[Travel Analysis Zones.shp]</parent-name>
            <remote-alias>SUPERD</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TAZ1454</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TAZ1454]</local-name>
            <parent-name>[Travel Analysis Zones.shp]</parent-name>
            <remote-alias>TAZ1454</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shape__Are</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shape__Are]</local-name>
            <parent-name>[Travel Analysis Zones.shp]</parent-name>
            <remote-alias>Shape__Are</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shape__Len</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shape__Len]</local-name>
            <parent-name>[Travel Analysis Zones.shp]</parent-name>
            <remote-alias>Shape__Len</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>within_5mi</remote-name>
            <remote-type>20</remote-type>
            <local-name>[within_5mi]</local-name>
            <parent-name>[Travel Analysis Zones.shp]</parent-name>
            <remote-alias>within_5mi</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>within_3mi</remote-name>
            <remote-type>20</remote-type>
            <local-name>[within_3mi]</local-name>
            <parent-name>[Travel Analysis Zones.shp]</parent-name>
            <remote-alias>within_3mi</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>within_2mi</remote-name>
            <remote-type>20</remote-type>
            <local-name>[within_2mi]</local-name>
            <parent-name>[Travel Analysis Zones.shp]</parent-name>
            <remote-alias>within_2mi</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Geometry</remote-name>
            <remote-type>8</remote-type>
            <local-name>[Geometry]</local-name>
            <parent-name>[Travel Analysis Zones.shp]</parent-name>
            <remote-alias>Geometry</remote-alias>
            <ordinal>12</ordinal>
            <local-type>spatial</local-type>
            <aggregation>Collect</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ZONE</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ZONE (taz-superdistrict-county.csv)]</local-name>
            <parent-name>[taz-superdistrict-county.csv]</parent-name>
            <remote-alias>ZONE</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz-superdistrict-county.csv_35F675E99FDD426CAB6A334DE6C59C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SD</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SD]</local-name>
            <parent-name>[taz-superdistrict-county.csv]</parent-name>
            <remote-alias>SD</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz-superdistrict-county.csv_35F675E99FDD426CAB6A334DE6C59C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[COUNTY]</local-name>
            <parent-name>[taz-superdistrict-county.csv]</parent-name>
            <remote-alias>COUNTY</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz-superdistrict-county.csv_35F675E99FDD426CAB6A334DE6C59C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SD_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SD_NAME]</local-name>
            <parent-name>[taz-superdistrict-county.csv]</parent-name>
            <remote-alias>SD_NAME</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz-superdistrict-county.csv_35F675E99FDD426CAB6A334DE6C59C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTY_NAME]</local-name>
            <parent-name>[taz-superdistrict-county.csv]</parent-name>
            <remote-alias>COUNTY_NAME</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz-superdistrict-county.csv_35F675E99FDD426CAB6A334DE6C59C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SD_NUM_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SD_NUM_NAME]</local-name>
            <parent-name>[taz-superdistrict-county.csv]</parent-name>
            <remote-alias>SD_NUM_NAME</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz-superdistrict-county.csv_35F675E99FDD426CAB6A334DE6C59C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY_NUM_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTY_NUM_NAME]</local-name>
            <parent-name>[taz-superdistrict-county.csv]</parent-name>
            <remote-alias>COUNTY_NUM_NAME</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[taz-superdistrict-county.csv_35F675E99FDD426CAB6A334DE6C59C51]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Measure Names' datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:TOTHH:qk:6]&quot;' value='Difference' />
          <alias key='&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:TOTHH:qk:4]&quot;' value='% Difference' />
        </aliases>
      </column>
      <column caption='County' datatype='integer' name='[COUNTY]' role='measure' type='quantitative' />
      <column caption='County Name' datatype='string' name='[COUNTY_NAME]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='County Num Name' datatype='string' name='[COUNTY_NUM_NAME]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Growth' datatype='real' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN(SUM([value])) - LOOKUP(ZN(SUM([value])), FIRST())'>
          <table-calc ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[year]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Growth Real' datatype='real' name='[Calculation2]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN(SUM([value])) - LOOKUP(ZN(SUM([value])), FIRST())'>
          <table-calc ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Value by SD Num Name' datatype='real' name='[Calculation_878764944827150358]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [SD_NUM_NAME]: SUM([value]) }' />
      </column>
      <column caption='Shape' datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
      <column caption='Measure Values' datatype='real' name='[Multiple Values]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='SD1' datatype='integer' name='[SD]' role='dimension' type='ordinal' />
      <column caption='Sd Name' datatype='string' name='[SD_NAME]' role='dimension' type='nominal' />
      <column caption='Sd Num Name' datatype='string' name='[SD_NUM_NAME]' role='dimension' type='nominal' />
      <column caption='Superd' datatype='integer' name='[SUPERD]' role='measure' type='quantitative' />
      <column caption='Taz1454' datatype='integer' name='[TAZ1454]' role='measure' type='quantitative' />
      <column caption='Zone' datatype='integer' name='[ZONE]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Travel Analysis Zones.shp' datatype='table' name='[__tableau_internal_object_id__].[Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='taz-superdistrict-county.csv' datatype='table' name='[__tableau_internal_object_id__].[taz-superdistrict-county.csv_35F675E99FDD426CAB6A334DE6C59C51]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='taz_data_long.csv' datatype='table' name='[__tableau_internal_object_id__].[taz_data_long.csv_7DEF6B455F6F48C4A4E2CFCFE2A26C3F]' role='measure' type='quantitative' />
      <column datatype='string' hidden='true' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
      <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
      <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
      <column caption='Within 2Mi' datatype='integer' name='[within_2mi]' role='measure' type='quantitative' />
      <column caption='Within 3Mi' datatype='integer' name='[within_3mi]' role='measure' type='quantitative' />
      <column caption='Within 5Mi' datatype='integer' name='[within_5mi]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
      <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:10]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:11]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]' ordering-type='Field' type='Difference'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:12]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Table' type='Difference'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:13]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='Difference'>
          <order field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NUM_NAME:nk]' />
          <order field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk]' />
          <order field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' />
          <order field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]' />
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:14]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='Difference'>
          <order field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk]' />
          <order field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' />
          <order field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]' />
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:15]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='Difference'>
          <order field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' />
          <order field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]' />
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[source]' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='Difference'>
          <order field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' />
          <order field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]' />
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:3]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:4]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:5]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:6]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='Difference'>
          <order field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' />
          <order field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[year]' />
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:7]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[year]' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:8]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[year]' ordering-type='Field' type='Difference'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:9]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[source]' ordering-type='Field' type='Difference'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[COUNTY_NUM_NAME]' derivation='None' name='[none:COUNTY_NUM_NAME:nk]' pivot='key' type='nominal' />
      <column-instance column='[SD_NUM_NAME]' derivation='None' name='[none:SD_NUM_NAME:nk]' pivot='key' type='nominal' />
      <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
      <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
      <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[value]' derivation='Sum' name='[pcdf:sum:value:qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[source]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[pcdf:sum:value:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[pcdf:sum:value:qk:3]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[pcdf:sum:value:qk:4]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[pcdf:sum:value:qk:5]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='PctDiff'>
          <order field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NUM_NAME:nk]' />
          <order field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk]' />
          <order field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' />
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[pcdf:sum:value:qk:6]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='PctDiff'>
          <order field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk]' />
          <order field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' />
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[pcdf:sum:value:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[source]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[pcto:sum:value:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[year]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[year]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation2]' derivation='User' name='[usr:Calculation2:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]' ordering-type='Field' />
      </column-instance>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='2000' show-hidden-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:value:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:value:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:10]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:11]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:12]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:13]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:14]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:15]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:2]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:3]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:4]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:5]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:6]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:7]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:8]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_878764944825671700:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_878764944826802197:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:value:qk:2]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:value:qk:3]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:value:qk:4]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:value:qk:5]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:value:qk:6]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcto:sum:value:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[usr:Calculation1:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[usr:Calculation2:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:1]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:9]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:COUNTY_NUM_NAME:nk]' palette='superfishel_stone_10_0' type='palette'>
            <map to='#55ad89'>
              <bucket>&quot;5 Contra Costa&quot;</bucket>
            </map>
            <map to='#6388b4'>
              <bucket>&quot;1 San Francisco&quot;</bucket>
            </map>
            <map to='#8cc2ca'>
              <bucket>&quot;4 Alameda&quot;</bucket>
            </map>
            <map to='#a9b5ae'>
              <bucket>&quot;9 Marin&quot;</bucket>
            </map>
            <map to='#baa094'>
              <bucket>&quot;8 Sonoma&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;7 Napa&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;6 Solano&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;3 Santa Clara&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;2 San Mateo&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:source:nk]' palette='miller_stone_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;census&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;v6: additional pipline updates, costar data&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;v7: additional pipline updates, costar data, fixed vacancy&quot;</bucket>
            </map>
            <map to='#4f6980'>
              <bucket>&quot;Census&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BAUS main current with PBA50 equivalent inputs&quot;</bucket>
            </map>
            <map to='#638b66'>
              <bucket>&quot;v2: BASIS buildings, updated control totals&quot;</bucket>
            </map>
            <map to='#849db1'>
              <bucket>&quot;PBA50&quot;</bucket>
            </map>
            <map to='#849db1'>
              <bucket>&quot;v0: PBA50 equivalent inputs&quot;</bucket>
            </map>
            <map to='#a2ceaa'>
              <bucket>&quot;v1: BASIS buildings in dev pipeline&quot;</bucket>
            </map>
            <map to='#a2ceaa'>
              <bucket>&quot;v7: housing preservation activated in 2025&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BAUS main current with BASIS buildings, updated control totals&quot;</bucket>
            </map>
            <map to='#b66353'>
              <bucket>&quot;v6: additional pipline updates, costar data, fixed vacancy&quot;</bucket>
            </map>
            <map to='#bfbb60'>
              <bucket>&quot;v3: aligned 2020 HHINC control totals&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;baus_main_current&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;BAUS main current with BASIS buildings in dev pipeline&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;run182&quot;</bucket>
            </map>
            <map to='#f47942'>
              <bucket>&quot;v4: aligned 2020 HHINC+employment control totals&quot;</bucket>
            </map>
            <map to='#f47942'>
              <bucket>&quot;v8: run from main&quot;</bucket>
            </map>
            <map to='#fbb04e'>
              <bucket>&quot;v5: aligned control totals, updated pipeline&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:source:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Census&quot;</bucket>
            <bucket>&quot;PBA50&quot;</bucket>
            <bucket>&quot;BAUS main current with PBA50 equivalent inputs&quot;</bucket>
            <bucket>&quot;BAUS main current with BASIS buildings in dev pipeline&quot;</bucket>
          </dictionary>
        </manual-sort>
        <manual-sort column='[none:variable:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;TOTHH&quot;</bucket>
            <bucket>&quot;TOTEMP&quot;</bucket>
            <bucket>&quot;RES_UNITS&quot;</bucket>
            <bucket>&quot;HHINCQ1&quot;</bucket>
            <bucket>&quot;HHINCQ2&quot;</bucket>
            <bucket>&quot;HHINCQ3&quot;</bucket>
            <bucket>&quot;HHINCQ4&quot;</bucket>
            <bucket>&quot;AGREMPN&quot;</bucket>
            <bucket>&quot;FPSEMPN&quot;</bucket>
            <bucket>&quot;HEREMPN&quot;</bucket>
            <bucket>&quot;MWTEMPN&quot;</bucket>
            <bucket>&quot;OTHEMPN&quot;</bucket>
            <bucket>&quot;RETEMPN&quot;</bucket>
            <bucket>&quot;AGE0004&quot;</bucket>
            <bucket>&quot;AGE0519&quot;</bucket>
            <bucket>&quot;AGE2044&quot;</bucket>
            <bucket>&quot;AGE4564&quot;</bucket>
            <bucket>&quot;AGE65P&quot;</bucket>
            <bucket>&quot;COLLFTE&quot;</bucket>
            <bucket>&quot;COLLPTE&quot;</bucket>
            <bucket>&quot;EMPRES&quot;</bucket>
            <bucket>&quot;gqpop&quot;</bucket>
            <bucket>&quot;HHPOP&quot;</bucket>
            <bucket>&quot;HSENROLL&quot;</bucket>
            <bucket>&quot;MFDU&quot;</bucket>
            <bucket>&quot;OPRKCST&quot;</bucket>
            <bucket>&quot;PRKCST&quot;</bucket>
            <bucket>&quot;SFDU&quot;</bucket>
            <bucket>&quot;SHPOP62P&quot;</bucket>
            <bucket>&quot;TOTPOP&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Travel Analysis Zones.shp' id='Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7'>
            <properties context=''>
              <relation connection='ogrdirect.1c8sxet1mhg3lx173fw1q0zgbv0n' name='Travel Analysis Zones.shp' table='[Travel Analysis Zones.shp]' type='table'>
                <columns>
                  <column datatype='integer' name='SUPERD' ordinal='0' />
                  <column datatype='integer' name='TAZ1454' ordinal='1' />
                  <column datatype='real' name='Shape__Are' ordinal='2' />
                  <column datatype='real' name='Shape__Len' ordinal='3' />
                  <column datatype='integer' name='within_5mi' ordinal='4' />
                  <column datatype='integer' name='within_3mi' ordinal='5' />
                  <column datatype='integer' name='within_2mi' ordinal='6' />
                  <column datatype='spatial' name='Geometry' ordinal='7' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='taz-superdistrict-county.csv' id='taz-superdistrict-county.csv_35F675E99FDD426CAB6A334DE6C59C51'>
            <properties context=''>
              <relation connection='textscan.1v8s6if1ujs6u516sh0g90n8mu4t' name='taz-superdistrict-county.csv' table='[taz-superdistrict-county#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='ZONE' ordinal='0' />
                  <column datatype='integer' name='SD' ordinal='1' />
                  <column datatype='integer' name='COUNTY' ordinal='2' />
                  <column datatype='string' name='SD_NAME' ordinal='3' />
                  <column datatype='string' name='COUNTY_NAME' ordinal='4' />
                  <column datatype='string' name='SD_NUM_NAME' ordinal='5' />
                  <column datatype='string' name='COUNTY_NUM_NAME' ordinal='6' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='taz_data_long.csv' id='taz_data_long.csv_7DEF6B455F6F48C4A4E2CFCFE2A26C3F'>
            <properties context=''>
              <relation connection='textscan.0qjh7st1rvhg341gqhhlx0kenr0m' name='taz_data_long.csv' table='[taz_data_long#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='ZONE' ordinal='0' />
                  <column datatype='string' name='variable' ordinal='1' />
                  <column datatype='real' name='value' ordinal='2' />
                  <column datatype='string' name='source' ordinal='3' />
                  <column datatype='integer' name='year' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[ZONE]' />
              <expression op='[TAZ1454]' />
            </expression>
            <first-end-point object-id='taz_data_long.csv_7DEF6B455F6F48C4A4E2CFCFE2A26C3F' />
            <second-end-point object-id='Travel Analysis Zones.shp_50803B4A5DB4462E94FF1264C50F44B7' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[ZONE]' />
              <expression op='[ZONE (taz-superdistrict-county.csv)]' />
            </expression>
            <first-end-point object-id='taz_data_long.csv_7DEF6B455F6F48C4A4E2CFCFE2A26C3F' />
            <second-end-point object-id='taz-superdistrict-county.csv_35F675E99FDD426CAB6A334DE6C59C51' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='County Chart'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>As of 2023-09-07, we have not prepared &quot;new BAUS&quot; 2023 metrics, so these exist only for Census and PBA50 (run182).</run>
          </formatted-text>
        </caption>
      </layout-options>
      <repository-location derived-from='https://10ay.online.tableau.com/t/metropolitantransportationcommission/workbooks/CensusvsPBA50vsContingencyPlanrunscomparison/CountyChart?rev=' id='CountyChart' path='/t/metropolitantransportationcommission/workbooks/CensusvsPBA50vsContingencyPlanrunscomparisonv2' revision='' site='metropolitantransportationcommission' />
      <table>
        <view>
          <datasources>
            <datasource caption='TAZ-level data' name='federated.0kyp62f0hvmbrs19zsgps0kbnizi' />
          </datasources>
          <datasource-dependencies datasource='federated.0kyp62f0hvmbrs19zsgps0kbnizi'>
            <column caption='County Num Name' datatype='string' name='[COUNTY_NUM_NAME]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[COUNTY_NUM_NAME]' derivation='None' name='[none:COUNTY_NUM_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]'>
            <groupfilter function='level-members' level='[none:source:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:variable:nk]' member='&quot;HHINCQ4&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]'>
            <groupfilter function='member' level='[none:year:ok]' member='2025' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NUM_NAME:nk] / [federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk])</rows>
        <cols>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]</cols>
      </table>
      <simple-id uuid='{081D57D3-BC8F-41A3-BD52-1C86D0808A36}' />
    </worksheet>
    <worksheet name='County Map'>
      <repository-location derived-from='https://10ay.online.tableau.com/t/metropolitantransportationcommission/workbooks/CensusvsPBA50vsContingencyPlanrunscomparison/CountyMap?rev=' id='CountyMap' path='/t/metropolitantransportationcommission/workbooks/CensusvsPBA50vsContingencyPlanrunscomparisonv2' revision='' site='metropolitantransportationcommission' />
      <table>
        <view>
          <datasources>
            <datasource caption='TAZ-level data' name='federated.0kyp62f0hvmbrs19zsgps0kbnizi' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0kyp62f0hvmbrs19zsgps0kbnizi'>
            <column caption='County Name' datatype='string' name='[COUNTY_NAME]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Shape' datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column-instance column='[COUNTY_NAME]' derivation='None' name='[none:COUNTY_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]'>
            <groupfilter function='member' level='[none:source:nk]' member='&quot;PBA50&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:variable:nk]' member='&quot;HHINCQ4&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]'>
            <groupfilter function='member' level='[none:year:ok]' member='2020' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]' />
              <text column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NAME:nk]' />
              <text column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]' />
              <color column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]' />
              <lod column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[clct:Geometry:nk]' />
              <lod column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]' />
              <geometry column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[clct:Geometry:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NAME:nk]</run>
                <run>&gt; County&#10;&lt;</run>
                <run>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</run>
                <run>&gt;: &lt;</run>
                <run>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NAME:nk]</run>
                <run>&gt; County&#10;&lt;</run>
                <run>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</run>
                <run>&gt;: &lt;</run>
                <run>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[Latitude (generated)]</rows>
        <cols>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{018838E5-E38D-43ED-81DC-71021EA334D3}' />
    </worksheet>
    <worksheet name='Input Files'>
      <repository-location derived-from='https://10ay.online.tableau.com/t/metropolitantransportationcommission/workbooks/CensusvsPBA50vsContingencyPlanrunscomparison/InputFiles?rev=' id='InputFiles' path='/t/metropolitantransportationcommission/workbooks/CensusvsPBA50vsContingencyPlanrunscomparisonv2' revision='' site='metropolitantransportationcommission' />
      <table>
        <view>
          <datasources>
            <datasource caption='TAZ-level data' name='federated.0kyp62f0hvmbrs19zsgps0kbnizi' />
          </datasources>
          <datasource-dependencies datasource='federated.0kyp62f0hvmbrs19zsgps0kbnizi'>
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' value='156' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]</rows>
        <cols>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]</cols>
      </table>
      <simple-id uuid='{CF51FF8D-9010-4C0F-8353-071F587979AF}' />
    </worksheet>
    <worksheet name='SD Bar (compare two or more)'>
      <layout-options>
        <caption>
          <formatted-text />
        </caption>
      </layout-options>
      <repository-location id='SDBarcomparetwoormore' path='/t/metropolitantransportationcommission/workbooks/CensusvsPBA50vsContingencyPlanrunscomparisonv2' revision='' site='metropolitantransportationcommission' />
      <table>
        <view>
          <datasources>
            <datasource caption='TAZ-level data' name='federated.0kyp62f0hvmbrs19zsgps0kbnizi' />
          </datasources>
          <datasource-dependencies datasource='federated.0kyp62f0hvmbrs19zsgps0kbnizi'>
            <column caption='County Num Name' datatype='string' name='[COUNTY_NUM_NAME]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Sd Num Name' datatype='string' name='[SD_NUM_NAME]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:9]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[source]' ordering-type='Field' type='Difference'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[COUNTY_NUM_NAME]' derivation='None' name='[none:COUNTY_NUM_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[SD_NUM_NAME]' derivation='None' name='[none:SD_NUM_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[value]' derivation='Sum' name='[pcdf:sum:value:qk:1]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[source]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[value]' derivation='Sum' name='[pcdf:sum:value:qk:3]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[value]' derivation='Sum' name='[pcdf:sum:value:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[source]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:value:qk]&quot;' user:op='manual' />
          </filter>
          <manual-sort column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:9]&quot;</bucket>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:value:qk:1]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <alphabetic-sort column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk]' direction='ASC' />
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' filter-group='6'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:source:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:source:nk]' member='&quot;v0: PBA50 equivalent inputs&quot;' />
                <groupfilter function='member' level='[none:source:nk]' member='&quot;v1: BASIS buildings in dev pipeline&quot;' />
                <groupfilter function='member' level='[none:source:nk]' member='&quot;v2: BASIS buildings, updated control totals&quot;' />
                <groupfilter function='member' level='[none:source:nk]' member='&quot;v3: aligned 2020 HHINC control totals&quot;' />
                <groupfilter function='member' level='[none:source:nk]' member='&quot;v4: aligned 2020 HHINC+employment control totals&quot;' />
                <groupfilter function='member' level='[none:source:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:variable:nk]' member='&quot;HHINCQ4&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]' filter-group='5'>
            <groupfilter function='member' level='[none:year:ok]' member='2020' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:value:qk]' value='p0.0%' />
            <format attr='text-format' field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[Multiple Values]' value='p0%' />
            <format attr='text-format' field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:value:qk:3]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk]' value='204' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]' value='false' />
            <format attr='text-format' field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[Multiple Values]' value='p0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NUM_NAME:nk]' />
              <text column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:value:qk:3]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='400' />
                <format attr='maxwidth' value='400' />
                <format attr='minheight' value='680' />
                <format attr='maxheight' value='680' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NUM_NAME:nk] / ([federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk] / [federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]))</rows>
        <cols>([federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk] * [federated.0kyp62f0hvmbrs19zsgps0kbnizi].[Multiple Values])</cols>
      </table>
      <simple-id uuid='{10836DED-80AF-4BCA-B0F5-2D7A7E7E9CC3}' />
    </worksheet>
    <worksheet name='SD Grouped Bar (compare two or more)'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>As of 2023-09-07, we have not prepared &quot;new BAUS&quot; 2023 metrics, so these exist only for Census and PBA50 (run182).</run>
          </formatted-text>
        </caption>
      </layout-options>
      <repository-location derived-from='https://10ay.online.tableau.com/t/metropolitantransportationcommission/workbooks/CensusvsPBA50vsContingencyPlanrunscomparison/SuperdistrictChart?rev=' id='SuperdistrictChart' path='/t/metropolitantransportationcommission/workbooks/CensusvsPBA50vsContingencyPlanrunscomparisonv2' revision='' site='metropolitantransportationcommission' />
      <table>
        <view>
          <datasources>
            <datasource caption='TAZ-level data' name='federated.0kyp62f0hvmbrs19zsgps0kbnizi' />
          </datasources>
          <datasource-dependencies datasource='federated.0kyp62f0hvmbrs19zsgps0kbnizi'>
            <column caption='County Num Name' datatype='string' name='[COUNTY_NUM_NAME]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Sd Num Name' datatype='string' name='[SD_NUM_NAME]' role='dimension' type='nominal' />
            <column-instance column='[COUNTY_NUM_NAME]' derivation='None' name='[none:COUNTY_NUM_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[SD_NUM_NAME]' derivation='None' name='[none:SD_NUM_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[value]' derivation='Sum' name='[pcdf:sum:value:qk:3]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' filter-group='6'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:source:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:source:nk]' member='&quot;v0: PBA50 equivalent inputs&quot;' />
                <groupfilter function='member' level='[none:source:nk]' member='&quot;v1: BASIS buildings in dev pipeline&quot;' />
                <groupfilter function='member' level='[none:source:nk]' member='&quot;v2: BASIS buildings, updated control totals&quot;' />
                <groupfilter function='member' level='[none:source:nk]' member='&quot;v3: aligned 2020 HHINC control totals&quot;' />
                <groupfilter function='member' level='[none:source:nk]' member='&quot;v4: aligned 2020 HHINC+employment control totals&quot;' />
                <groupfilter function='member' level='[none:source:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:variable:nk]' member='&quot;HHINCQ4&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]' filter-group='5'>
            <groupfilter function='member' level='[none:year:ok]' member='2020' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:value:qk:3]' value='*+0.00%;-0.00%;0.00%' />
            <format attr='text-format' field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]' value='n#,##0,.0K;-#,##0,.0K' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' />
              <text column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:value:qk:3]' />
              <text column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run><![CDATA[<[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]> ]]></run>
                <run fontcolor='#898989'><![CDATA[(<[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:value:qk:3]>)]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NUM_NAME:nk] / ([federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk] / [federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]))</rows>
        <cols>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]</cols>
      </table>
      <simple-id uuid='{F4D0E8B4-0F53-4422-A716-462EE03712FA}' />
    </worksheet>
    <worksheet name='SD Table (Census vs BAUS)'>
      <repository-location derived-from='https://10ay.online.tableau.com/t/metropolitantransportationcommission/workbooks/CensusvsPBA50vsContingencyPlanrunscomparison/SDTableCensusvsBAUS?rev=' id='SDTableCensusvsBAUS' path='/t/metropolitantransportationcommission/workbooks/CensusvsPBA50vsContingencyPlanrunscomparisonv2' revision='' site='metropolitantransportationcommission' />
      <table>
        <view>
          <datasources>
            <datasource caption='TAZ-level data' name='federated.0kyp62f0hvmbrs19zsgps0kbnizi' />
          </datasources>
          <datasource-dependencies datasource='federated.0kyp62f0hvmbrs19zsgps0kbnizi'>
            <column caption='County Num Name' datatype='string' name='[COUNTY_NUM_NAME]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Sd Num Name' datatype='string' name='[SD_NUM_NAME]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:1]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[source]' ordering-type='Field' type='Difference'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[COUNTY_NUM_NAME]' derivation='None' name='[none:COUNTY_NUM_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[SD_NUM_NAME]' derivation='None' name='[none:SD_NUM_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[value]' derivation='Sum' name='[pcdf:sum:value:qk:1]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[source]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:value:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:1]&quot;</bucket>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:value:qk:1]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:source:nk]' member='&quot;Census&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;v0: PBA50 equivalent inputs&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:variable:nk]' member='&quot;HHINCQ4&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:year:ok]' member='2020' />
              <groupfilter function='member' level='[none:year:ok]' member='2023' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' value='81' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' value='32' />
            <format attr='width' field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk]' value='216' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NUM_NAME:nk] / [federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk])</rows>
        <cols>([federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok] / ([federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk] / [federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]))</cols>
        <subtotals>
          <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NUM_NAME:nk]</column>
        </subtotals>
      </table>
      <simple-id uuid='{010B7512-0A6E-4046-99EC-A17FAC78EEDF}' />
    </worksheet>
    <worksheet name='SD Table (PBA50 vs BAUS)'>
      <layout-options>
        <caption>
          <formatted-text />
        </caption>
      </layout-options>
      <repository-location derived-from='https://10ay.online.tableau.com/t/metropolitantransportationcommission/workbooks/CensusvsPBA50vsContingencyPlanrunscomparison/SDTablePBA50vsBAUS?rev=' id='SDTablePBA50vsBAUS' path='/t/metropolitantransportationcommission/workbooks/CensusvsPBA50vsContingencyPlanrunscomparisonv2' revision='' site='metropolitantransportationcommission' />
      <table>
        <view>
          <datasources>
            <datasource caption='TAZ-level data' name='federated.0kyp62f0hvmbrs19zsgps0kbnizi' />
          </datasources>
          <datasource-dependencies datasource='federated.0kyp62f0hvmbrs19zsgps0kbnizi'>
            <column caption='County Num Name' datatype='string' name='[COUNTY_NUM_NAME]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Sd Num Name' datatype='string' name='[SD_NUM_NAME]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:1]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[source]' ordering-type='Field' type='Difference'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[COUNTY_NUM_NAME]' derivation='None' name='[none:COUNTY_NUM_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[SD_NUM_NAME]' derivation='None' name='[none:SD_NUM_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[value]' derivation='Sum' name='[pcdf:sum:value:qk:1]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[source]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:value:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:1]&quot;</bucket>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:value:qk:1]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:source:nk]' member='&quot;PBA50&quot;' />
              <groupfilter function='member' level='[none:source:nk]' member='&quot;v0: PBA50 equivalent inputs&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:variable:nk]' member='&quot;HHINCQ4&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' value='81' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' value='32' />
            <format attr='width' field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk]' value='216' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NUM_NAME:nk] / [federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk])</rows>
        <cols>([federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok] / ([federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk] / [federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]))</cols>
        <subtotals>
          <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NUM_NAME:nk]</column>
        </subtotals>
      </table>
      <simple-id uuid='{0563DCC6-FBCD-4BBE-9C5E-57718B92C15A}' />
    </worksheet>
    <worksheet name='SD Table (compare two or more)'>
      <layout-options>
        <caption>
          <formatted-text />
        </caption>
      </layout-options>
      <repository-location derived-from='https://10ay.online.tableau.com/t/metropolitantransportationcommission/workbooks/CensusvsPBA50vsContingencyPlanrunscomparison/SDTablecomparetwoormore?rev=' id='SDTablecomparetwoormore' path='/t/metropolitantransportationcommission/workbooks/CensusvsPBA50vsContingencyPlanrunscomparisonv2' revision='' site='metropolitantransportationcommission' />
      <table>
        <view>
          <datasources>
            <datasource caption='TAZ-level data' name='federated.0kyp62f0hvmbrs19zsgps0kbnizi' />
          </datasources>
          <datasource-dependencies datasource='federated.0kyp62f0hvmbrs19zsgps0kbnizi'>
            <column caption='County Num Name' datatype='string' name='[COUNTY_NUM_NAME]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Sd Num Name' datatype='string' name='[SD_NUM_NAME]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[diff:sum:value:qk:9]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[source]' ordering-type='Field' type='Difference'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[COUNTY_NUM_NAME]' derivation='None' name='[none:COUNTY_NUM_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[SD_NUM_NAME]' derivation='None' name='[none:SD_NUM_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[value]' derivation='Sum' name='[pcdf:sum:value:qk:1]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[source]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[value]' derivation='Sum' name='[pcdf:sum:value:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[source]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:9]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:value:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[diff:sum:value:qk:9]&quot;</bucket>
              <bucket>&quot;[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[pcdf:sum:value:qk:1]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' filter-group='6'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:source:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:source:nk]' member='&quot;v0: PBA50 equivalent inputs&quot;' />
                <groupfilter function='member' level='[none:source:nk]' member='&quot;v1: BASIS buildings in dev pipeline&quot;' />
                <groupfilter function='member' level='[none:source:nk]' member='&quot;v2: BASIS buildings, updated control totals&quot;' />
                <groupfilter function='member' level='[none:source:nk]' member='&quot;v3: aligned 2020 HHINC control totals&quot;' />
                <groupfilter function='member' level='[none:source:nk]' member='&quot;v4: aligned 2020 HHINC+employment control totals&quot;' />
                <groupfilter function='member' level='[none:source:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:variable:nk]' member='&quot;HHINCQ4&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]' filter-group='5'>
            <groupfilter function='member' level='[none:year:ok]' member='2020' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' value='81' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' value='48' />
            <format attr='width' field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk]' value='176' />
            <format attr='height' field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]' value='88' />
          </style-rule>
          <style-rule element='label'>
            <format attr='vertical-align' field='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]' value='bottom' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NUM_NAME:nk] / [federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk])</rows>
        <cols>([federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok] / ([federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk] / [federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]))</cols>
        <subtotals>
          <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NUM_NAME:nk]</column>
        </subtotals>
      </table>
      <simple-id uuid='{B5C822A8-5E71-470C-9AFB-63E387C7A03B}' />
    </worksheet>
    <worksheet name='Superdistrict Map'>
      <repository-location derived-from='https://10ay.online.tableau.com/t/metropolitantransportationcommission/workbooks/CensusvsPBA50vsContingencyPlanrunscomparison/SuperdistrictMap?rev=' id='SuperdistrictMap' path='/t/metropolitantransportationcommission/workbooks/CensusvsPBA50vsContingencyPlanrunscomparisonv2' revision='' site='metropolitantransportationcommission' />
      <table>
        <view>
          <datasources>
            <datasource caption='TAZ-level data' name='federated.0kyp62f0hvmbrs19zsgps0kbnizi' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0kyp62f0hvmbrs19zsgps0kbnizi'>
            <column caption='Shape' datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column aggregation='Sum' caption='SD1' datatype='integer' name='[SD]' role='dimension' type='ordinal' />
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column-instance column='[SD]' derivation='None' name='[none:SD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]'>
            <groupfilter function='member' level='[none:source:nk]' member='&quot;PBA50&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:variable:nk]' member='&quot;HHINCQ4&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]'>
            <groupfilter function='member' level='[none:year:ok]' member='2020' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]</column>
            <column>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]' />
              <text column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD:ok]' />
              <text column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]' />
              <color column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]' />
              <lod column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[clct:Geometry:nk]' />
              <lod column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]' />
              <geometry column='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[clct:Geometry:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run>SD: &lt;</run>
                <run>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD:ok]</run>
                <run>&gt;&#10;&lt;</run>
                <run>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</run>
                <run>&gt;: &lt;</run>
                <run>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run>SD: &lt;</run>
                <run>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD:ok]</run>
                <run>&gt;&#10;&lt;</run>
                <run>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</run>
                <run>&gt;: &lt;</run>
                <run>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[Latitude (generated)]</rows>
        <cols>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{7982E75D-E929-4B44-9DCF-D01BE5CD878F}' />
    </worksheet>
    <worksheet name='Vacancy'>
      <repository-location derived-from='https://10ay.online.tableau.com/t/metropolitantransportationcommission/workbooks/CensusvsPBA50vsContingencyPlanrunscomparison/Vacancy?rev=' id='Vacancy' path='/t/metropolitantransportationcommission/workbooks/CensusvsPBA50vsContingencyPlanrunscomparisonv2' revision='' site='metropolitantransportationcommission' />
      <table>
        <view>
          <datasources>
            <datasource caption='taz_data_wide_vacancy' name='federated.183kuxz0zrxkm51f03wsi1n11km7' />
          </datasources>
          <datasource-dependencies datasource='federated.183kuxz0zrxkm51f03wsi1n11km7'>
            <column caption='County Num Name' datatype='string' name='[COUNTY_NUM_NAME]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Res' datatype='real' default-format='p0.0%' name='[Calculation_91760862833213440]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([residential_units]*[residential_vacancy]) / sum([residential_units])' />
            </column>
            <column caption='Non-Res' datatype='real' default-format='p0.0%' name='[Calculation_91760862837256194]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([non_residential_sqft]*[non_residential_vacancy]) / sum([non_residential_sqft])' />
            </column>
            <column caption='Sd Num Name' datatype='string' name='[SD_NUM_NAME]' role='dimension' type='nominal' />
            <column aggregation='CountD' caption='Non Residential Sqft' datatype='real' name='[non_residential_sqft]' role='measure' type='quantitative' />
            <column caption='Non Residential Vacancy' datatype='real' name='[non_residential_vacancy]' role='measure' type='quantitative' />
            <column-instance column='[COUNTY_NUM_NAME]' derivation='None' name='[none:COUNTY_NUM_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[SD_NUM_NAME]' derivation='None' name='[none:SD_NUM_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
            <column caption='Residential Units' datatype='real' name='[residential_units]' role='measure' type='quantitative' />
            <column caption='Residential Vacancy' datatype='real' name='[residential_vacancy]' role='measure' type='quantitative' />
            <column caption='Source' datatype='string' name='[source]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_91760862833213440]' derivation='User' name='[usr:Calculation_91760862833213440:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_91760862837256194]' derivation='User' name='[usr:Calculation_91760862837256194:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.183kuxz0zrxkm51f03wsi1n11km7].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.183kuxz0zrxkm51f03wsi1n11km7].[usr:Calculation_91760862837256194:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.183kuxz0zrxkm51f03wsi1n11km7].[usr:Calculation_91760862833213440:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.183kuxz0zrxkm51f03wsi1n11km7].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.183kuxz0zrxkm51f03wsi1n11km7].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.183kuxz0zrxkm51f03wsi1n11km7].[none:COUNTY_NUM_NAME:nk] / [federated.183kuxz0zrxkm51f03wsi1n11km7].[none:SD_NUM_NAME:nk])</rows>
        <cols>([federated.183kuxz0zrxkm51f03wsi1n11km7].[none:year:nk] / ([federated.183kuxz0zrxkm51f03wsi1n11km7].[none:source:nk] / [federated.183kuxz0zrxkm51f03wsi1n11km7].[:Measure Names]))</cols>
      </table>
      <simple-id uuid='{1D5E30D1-8926-4AA0-89E2-BC4E28CCD170}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.5' source-height='75'>
    <window class='worksheet' maximized='true' name='Input Files'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NAME:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_761108404206759937:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Path:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD:ok]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NAME:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:county_name:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ED5DA773-1332-4A2B-A83F-2C97D74C6DB2}' />
    </window>
    <window class='worksheet' name='SD Table (PBA50 vs BAUS)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]' show-all='false' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NAME (superdistrict-county.csv):nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NUM_NAME:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_761108404205641728:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_761108404206759937:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3B8B2B57-7262-48BB-AE63-3FB524760644}' />
    </window>
    <window class='worksheet' name='SD Table (Census vs BAUS)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]' show-all='false' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NAME (superdistrict-county.csv):nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NUM_NAME:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_761108404205641728:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_761108404206759937:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{337C3C97-20B1-4D5E-AB7C-1CC9FEE2D5DD}' />
    </window>
    <window class='worksheet' name='SD Table (compare two or more)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]' type='filter' />
            <card param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' type='filter' />
            <card mode='radiolist' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]' show-all='false' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NAME (superdistrict-county.csv):nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NUM_NAME:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_761108404205641728:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_761108404206759937:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{05D51691-180F-48AB-8727-B407647822ED}' />
    </window>
    <window class='worksheet' name='SD Bar (compare two or more)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]' type='filter' />
            <card param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' type='filter' />
            <card mode='radiolist' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]' show-all='false' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NAME (superdistrict-county.csv):nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NUM_NAME:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_761108404205641728:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_761108404206759937:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5FF7C65E-61FF-4536-A5BB-0938B2791A4E}' />
    </window>
    <window class='worksheet' name='SD Grouped Bar (compare two or more)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]' show-all='false' type='filter' />
            <card param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' type='filter' />
            <card mode='radiolist' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]' show-all='false' type='filter' values='relevant' />
            <card pane-specification-id='0' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NAME (superdistrict-county.csv):nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NUM_NAME:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_761108404205641728:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_761108404206759937:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{495ED3E9-0896-4DED-904F-A6040D347F8A}' />
    </window>
    <window class='worksheet' name='County Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]' show-all='false' type='filter' />
            <card param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' type='filter' />
            <card mode='radiolist' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]' show-all='false' type='filter' values='relevant' />
            <card pane-specification-id='0' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[:Measure Names]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NAME (superdistrict-county.csv):nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NUM_NAME:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_761108404205641728:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_761108404206759937:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7CE9FDEB-44C4-428E-8D79-9DF37A671F72}' />
    </window>
    <window class='worksheet' name='Superdistrict Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card mode='radiolist' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]' show-all='false' type='filter' values='relevant' />
            <card mode='radiolist' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]' show-all='false' type='filter' values='relevant' />
            <card mode='radiolist' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' show-all='false' type='filter' values='relevant' />
            <card pane-specification-id='0' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[clct:Geometry:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_761108404205641728:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_761108404206759937:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Path:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:district:ok]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C3CC919E-9911-4977-BBF7-0058454EA72A}' />
    </window>
    <window class='worksheet' name='County Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card mode='radiolist' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]' show-all='false' type='filter' values='relevant' />
            <card mode='radiolist' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]' show-all='false' type='filter' values='relevant' />
            <card mode='radiolist' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]' show-all='false' type='filter' values='relevant' />
            <card pane-specification-id='0' param='[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[clct:Geometry:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_761108404205641728:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Calculation_761108404206759937:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:Path:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:district:ok]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:source:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:variable:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[sum:value:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DC76B74E-D277-4331-9936-139521787848}' />
    </window>
    <window class='worksheet' name='Vacancy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:COUNTY_NUM_NAME:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:SD_NUM_NAME:nk]</field>
            <field>[federated.0kyp62f0hvmbrs19zsgps0kbnizi].[none:year:ok]</field>
            <field>[federated.183kuxz0zrxkm51f03wsi1n11km7].[:Measure Names]</field>
            <field>[federated.183kuxz0zrxkm51f03wsi1n11km7].[none:COUNTY_NUM_NAME:nk]</field>
            <field>[federated.183kuxz0zrxkm51f03wsi1n11km7].[none:SD_NUM_NAME:nk]</field>
            <field>[federated.183kuxz0zrxkm51f03wsi1n11km7].[none:source:nk]</field>
            <field>[federated.183kuxz0zrxkm51f03wsi1n11km7].[none:year:ok]</field>
            <field>[federated.183kuxz0zrxkm51f03wsi1n11km7].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6D5838D2-A404-4614-84D9-E95C4CEBCF13}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='County Chart' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9WZPkZpam92B3+L6Ge4THmjuZXGrrVi9jJo2uRjca0w/TbZuNzGSSjbWk
      uRiNjdloZG3do56e2qaKLLJYSeYS+x7h4bs74NiBTxeRZLGYJCuKZCIyg/7cZGYgwl8AkQfA
      eXG+cyQhhGDOnO8p8nXvwJw518k8AK6A4zjXvQtzXhLzALgCQRBc9y7MeUnMA2DO95p5AMz5
      XjMPgDnfa+YBMOd7jfrpXxzHmSd7X8FsNktVTwiBJElzrRT0pC++CItDD9uLKRVyzCZDJr5g
      caFGerv96vHz9z7i3/7Dr657N14KAoGU0m83Ta2r6qlf/MJs5jIYTykVcmzv7rG0ssGod8bY
      lajlFTrDGfdur3/jSP7te78gUouYaoDnRLzxkx/x6L0P+MlPfsCHH/6W5Y17DE93SIwK7zy8
      90oEnuP5HJxeXPduzHkJvJADFMsVVOXyv92d2xscHx4zGI/Z2t5mMLYwNJkk+ebVE0mcoGoq
      SZKArOAMe+hKwmHPwTQ0XNelUG1SMjXmNRpzXjYvBEDv7Ih+f4jjR0zHY4q1OsVsjtWVFeqN
      BWrVKrL8za/LK7fv88O338A0DFRVxnZCWmu3kfwRqqqDJOHPxnhCfiWu/nNuNi/kAHNe5MOP
      n/KzDzdT0RIIEKSWLCYiQZbSMQPT1Lqq3gsBMLPGjKcei+3W3CN9zng8plwup6KVJAlCCBRF
      SUUviiJU9YVU8LXXuqreC1v7vT6F6gLubIrt+Ez7fRZXV+h2OpQX2rjDMxQ9g2oW6Xc6bKwv
      cnTap140mMU6y63aSzug62LvtMfP/+69696NOS+BFwIg9GacdXoowmN9dZHDyYTZM4tc6w6D
      4x2kQoMGMzpjcOwpz/Zi7t+5w97OFoYM/kIN4ytuHSKJiYVEEjh8/Pgxer7Og1uraHrCL//L
      exjlGpI/IogNfvSTB/ziV0/4Zz+8w3ufbHNrY43TgwNytUUe3F7Btmyy+TyObaFnTGRZARFj
      WTbFYglIcGYzMjmNw70R7aUSqmESei6SqnJxfkZ7dR1nOsXMZ/G8gKyp47gBuWwGWZKJkdAU
      mSiOsRzvJf8q5lwHLwRAs71OvlRiOp2SMTRy+TzVaoVspQD5VfqdM7xShXopQ2SbLLbq7B8e
      U85nmMU6+tc9N4mYo6NTIsejuXKLwLaI4hgNCQkJM2vi+SOMjMH50QkGDmczyGd0xpMB7fWH
      OLMe9uCU//zLj7i1vo6kK0hJhJpfQvJGkMCw30fL6Ow+eUJpdZ2irPCP//AB7fu3wAE9p+M7
      U5rtNYb9AWH3jCSIkEwTKfZwPYlby1U6cYV7zexLPP1zrpsXAqBQKgFQKhYBePjWW7/faJYo
      Pd8OUKtcPhdXq/UriUmKjp741G7f5nznKZlyiygMwcxw9+Hb1Oslnn08whcKspHnrXd/wGg4
      QpEVCoUGw842xeYaRlZlZXmFeqPK+dkJWr6O3T0kX61TNLP47ohapcKw1aaYz5FVM6yuLVOt
      1cgsFICAcT8kjBJyhTyyViarwGm3i+UJlls19g5OqK7msK0E252/Ib+pvP4uUBLh+DFZ0/jW
      H+V7HpqR4Ysu7/b+MQfdybf+/KuSZslAkiTIckouUIpaV9V7/QMgBeYu0OundVW9awoAQRiE
      KJqGLEmAwJk5KJqOrilEUYKqyLieRyaTASDwPRTNQJUhkRSUL1wg4zhGUZTP/vzTdkcQJ8lX
      /twnR095NHz6DY5zzqtOeuEIiCQiiEGKA3a3dmjfe4AmEkxT4tknzxCZDHdbBTZ7Acv5hL4j
      WG5UcHyLgzObO7fXaSgTPh4YPGiXkFUNEftY04DxuMtCvcrxxYhmrUJGl/FihbwhM3YCiqaK
      G0pUSzkGoxGyECiZPKVchn6vw8j2qRWzGNk8mp6BOEI39Mv9FoJYxGmeqjkpkWoAgOD0+AhJ
      Nmi1FpAAVVGABM93KRZL7B6dMp16FG//BaPdbVwvQM7VaFdD7JlDowiqnLD7yYfk197Gt86Q
      ohwi8jjrjVEVmfFoTBR5CEVjhGDmh8y0hEmcpVJcZzzs4IUZdN1CqxeYujGRO+HDnU0a7RUy
      skShvshSQ0/39MxJnVQDQJI1TEmQX2xy9PQRshWw3Kig6Sb5nImiqjRWb/FGzqDX6xElkMnl
      QYroOQHVggFGBm98xOrqbc5O9yg16uRyWUBm2B8gZcsUswaqVgUJLo526Ax8lu6vEnkSkiRT
      LFWpGiWIAwxTxz46p1yt04oFlUaLyBpQr5UIXBs/lvCCKM3TNCdFbnwSPB31CSWDarnwjYvr
      ji6OmQj7O92vr0IIgRDiRjozcxfoNWU4GpLP51PREkKQiARFTskFiiNUJSUXKEWtq+qlnAM8
      Rwis6RhZz5IzDUAw6PXQswXyWR3XizB1hcHouf0oSdiTEUauREaFSNLQvhDYQRCg6zphGKJp
      2jfarSi8dKa+eKd4tPsxf/tP/+c3+sw5rzbpukBxiBsBoYdlzxhOu6yvLJPPq3TO+4RSj/Va
      nt1xSMuMsBMTFcHMm3DcDbl3y8BgxIcnCW9t1FG0DEnsYk1CLKtPuZDlpG+z2KigK4JZqFDJ
      ynQnPvWCxjSQaTdrly/PggSSEGs8RDKKZJWQzZ0T1tZa+Il2+X1zbjzp3gFkmc7JLrKaRREB
      a2sbZDMqEDIZDyk2WuyfnjK1fO795V9i7W5iqRJKvk670qM3mlCuQLVWZP/J78ivvYVvnSPH
      eUTkMnR0ilkDa2IhiJFUhTMrIYxj+l7CLDFZataQghknXQ/hDlGUDOHkjLEsU6sUGQy6nJxb
      tJp/TToPIXOuk1RL/iVJIafr1Jt1huMx3V6PmT0DFIrFHEbGYGXjHn/1Fz/GGvYJhUKxXCGn
      CiYzj1KhgJQpYXVPWbz9AKtzRC5XplotUFtYRAocUA0q1QoLzSb1Wp3A6rN30iNfKGAYGsdH
      x6BnSewemplj0r8gU6iQ1WXcCLKZLIuLLWbWFGtqkaR5guakzo1Pgl3HJkElm80gIYjjz7/x
      FZdvndWvv9bvHO1yMjx5+TsLCC4TYXleC5SK3o0PgO+C4bBHNpvOA5EQApEkyCnVAsVxhJKS
      M5Om1lX1rsUFEiKhc3ZCttSglDc/tyXGdWNM8+vfwPq+j2EYjPoXJFoOg4AAA1OJGM1CFio5
      ukObxWaDIPAxDAVnFqHqCnEcoUoycRIiFBOSAJWYi+GM9lLzS98VDAef8OjDf/2dnoM5rwYp
      u0ABs0BA5KPrBoeHh2ystCkUs+w826Kxskj31CZXkJFCj0gvokUzfClDQY1wJRMTl82jHn/5
      k3eIE4nu+QmygARYbNYZ97o4loqaJIzLFaYX5ywu5tnftii1TOzJmKqZZaYkOJMQXRfEYcjS
      0goJgu7xPmphgUY5Hd9/zvWSbhIsq3RP9uiNZnieg6brFIoFRDBjOLXY2T8GwBp2mQmD2aSH
      7SUQejx5+oSLTofeeEarXgYkXMdmdXUVVTPQFYUw8Gm0l5ElmVLOIIgF3mzK3t4RsUjonB7R
      HT6v65c0qjmFoe0jKyq5fA45dhi7KpU/uCvNucmk+wgkyRRzBbL1Gie72xQqTaypRT6XoZjP
      U15YwFAMEDof/vrXZBY2ePtuAwmBJt3Ck0wM4TJLFCBmOp7iCo2SKeNJJRx7gNWzWFtb4OR8
      xIMlFXNlg2JBZ9D1yBSWCHwPQ1YwZJl8xiCQOpRzGtu7R9y7t05OPaU/HFHIGcRCp5j/9gtt
      5ry6vJpJsBCEUYSsKCgpugZfRffiAOilopV6LVAcp5Zwp6l1Vb3rKYX4Y0jSNy5neBloQqMo
      qumICXFp36X0Gi5OIhQpJRcoRa2r6l1bAMS+w9hNqP1Bshkzs0Ny+czX/qzrupimSff0kNgo
      YeLhYZJXQy4mAavNEsedERtry3iei2mqWJMQ3VSJwgBVVohjn0TNI8UeKjGHnQl3b69+qQuU
      7P8O7z/8z9/p8b9KhDdU6yp66bpAkc/UE0hJwKB7ihdl0GVBoZhl+8km9ZUW/XMHMysQoUes
      F9FCG182KWgxHiaGmLFzNuKvfvIORq5Ep3uBhYIQE8zFFok74ODEpqDKDN2QyfkplarO6WFE
      pgQze8ZiqcRMBWd0gW5IRGHEndu3sYZH7JxF3Fku0RnMuHtrJdV+9nPSJ10XSNEYnO1w0bng
      7KJPp9e/dIF8i4FlsXNw+bZ1NhngK1k8e4ifqChJyNNnT+n3+4xsn8VaCZAYj4asrq0hSTKS
      JOHaU+pLyyiShKLIJAKSKMS2HQTguQ5e8Ok1QaFRNOhNXGRJRpJkfNfDdV2ePX3GYNAnfAXT
      oznfLam7QOVyg3x9gbv3bjOdzi5doHyeWqlEpdlEV3RITN775c/ILt7j3XsNQGBqMEt0TMnH
      SQwgxrFtjs961Io6HmWCWY/eYMatW4ucdsbcyapkl1fJ5TQKOR8jpxP6PrqiYEoSOUMnUjOU
      siq7h6fcvX2Hv2iBOx1w1J3i2TaBDPG8IOjG8mq6QK8Yo9NDit4gFS0hLt+Up+UCXdZG3Tyt
      q+q9mi7QK4akSUh6OqdKEoJEyEgpBYAcx0gpWZNpal1V75oCIGF/axM5X2NtaeFzX4+YTgOy
      Wf1rGxrNZjNyudyXbrtcUiheeH8wnU4pFvLEQkJ53voteX6CLv8VM526FIsvlkCI4VOSzb/5
      E4/x25HmU9dN1bqKXsoukMfYSZDCKUMr4P5KCWtqUSiabD3epLrcZHThYWYTQtchMYqogUWg
      ZCnqMa4wMZIZ+xcT/urPfsD+9jMyxRqj3gXN9grd0yPMXIG9o1Me3r+NFwlCe0Su1saa9JCC
      Ab95Ouat+026I5dockFuaR1pNiHfaDDtW1ycHlJfvkWlMC+H+D6QsgtkMDrfYeRItNsL7Gzv
      XLpAnkV/arF3cArAbDIkMYoEzgShZDFkwbNnm0zGY6ZeRKtegniGL/LIwZTq4grHh3uUG8tI
      wK31FbyZTa1iIrQSo34HgEKxwvrGOoPBmIIUka02aTcKDKc2O7sHXHasC5hMrTRPy5xrJGUX
      SKJWb5OrVjjb32Vlff3yDlAo0qpXqbYW0SQVRIH3f/lTzMX7rK9dukD5jMI0VMmrIbNYByVP
      OdtHyTUY9y6498ZbKJJEUszQ715QXFgil81iKkMaK+uoUgy6ieQd0F5u0Ru6rC0UOe/b1Ctl
      So0mhqLQ64SYSsz5YEqjoOF6IY4fUUj1RM1Ji7kLdAXG/TNKmp+KVtptUb5RL9XXQOuqenMX
      6Ar4tkfn+WPUyyb9YrgEOSVrMk2tq+pdW1+gs6M9hFmhvfDFIjPBdGpTLBawpha6oSPLMooi
      EcWga1++y+PRiHKlcvkJSUwQJxiaBiSMRxZmNoNhXK20eWpNKRaKn/17crDL7t/+q29ypHNe
      cVJ3gYZWROIOOTi74M79xmcu0OYnz6gsthl2TvDRKagxAzdhsZJn/2CfOw8eQCTTH3SoN1v0
      O2fUFtewB6eUm+tMBz0MFbb3D2k2F0mI6Z73qS228CYzMjkFZzIFs0ReCfEwWW2VsZyIOPTo
      X5ygFZvI/pieHfHnP3wnzVMz55pI3wXqbDOLVErlGp3TY8ysifAszno9tp9tIuWrZJWIQDYp
      5TJ4fsRSe5lcRuKi06Vca9I5O6W1chvfOufivMv+c/fIdz3qjQXGgy6ua5EpNJhNxwA4ro2R
      q5GRYzafPWM4GpPEId1ul063j6KbBM6EIFIpF7JEUUQUzZvi3nRSd4EW27fJFApYQxWh5wj8
      gGy2xP27dyhWG8zGfYzqBrE7Qeg58oZO6NnEcoY33qrS717w4OHbqLJMMXuLjFmiUKqhyhC6
      FtbU5ta9B8T+hM29EffubyDFMUJKkCUVEJSLOZxIRcvkKeYscqUWJ/vbLN96QOSMiRWTIAgQ
      kOpEkznpM3eBrsCw18VMKXlLOwmeu0Bz/iixCPCSdNqjI54PyfvGzdz/NJIkQZZSbIyVktZV
      9a4lAOLQY2tzC6EXePPeBuAzHieUy19dfuA4M7LZL6//+UYkIX4skwQ+Ri77tcmQ7w4ZDD/8
      7rTnvDKk7gL1JgFS4nP3zjqnA++5CwSPP3pM+9YKzmSAWapgZnJIScBk0KXQXEW4I3Z3JmSK
      dWR/giMM3rq7zuNPHpEpt4itLrlSlW5vQKNRY+pG1HMyFyOPakHDiyTq9TqB53J2ckyxaHDU
      gztrNeThBf2xS7lg0B/MePvH7/DqrEie8zJJ1wVSM0w62/jC4LzTZ7FZ/2wQ3cqte0juiEjN
      4lgjLjrnnJx3iUKPXn+IY1uUGm0MOSaIEkLfu2whqOkEnoORL+GNuwwnE8IgpHNxwf7eHlNr
      ihsp3F5fYX/zKSQe3X6faSRTq5TxZg5j28FUIqaBynqjjMdl9znPT+ft75zrI/VHoJWNN9BN
      kyjMoKsSfgyQY3FRAAUqMwvNXCN0LWTdRAQuSiaPKonL2m5RZrN/DkYdJIlMxmRpeQ1FEihS
      m9JoSiGfpVxrkM+oWE5AoZADRePBW29jZAx+8pM8uWIRx7LJ5pvIIsZyIwq5DDIgkf7i7TnX
      w2cukOM4BEFw3fvzSjKb2WTNdMqjBQKRpOgCJXF6dUcpal1Vb26DXoEnW7s83j1NRWveHj1d
      vRcegXpnRxyfdbj7zp9ztv0RsVrgwf3bLyQLH/3mV9x568c8+uXP+dF//8/JAPZ4iF6son+N
      5rOPf0usl8jKPpNZzJvvPORwZ5vbt2/x5JOPqbRWCSYXJJkyt1eXvsFhf/ecdPr8H//hP1/3
      bsx5CbwQAKVyBcuHrAb5XJ7BLGb74/f4YGfIj+8tcjHx+eu/+DMq1SKdo13QihxvPeK9D/Z4
      eK+J2Vhm61c/o7J2Bw2ZTL7Auw/vf/b5imaQRD7T0CYJFbzZBM9x6E8drJnDgqYSaCZy6JGQ
      cpY+53vHC/+/DvZ3sWcWQZQQRREijpH0LOvLLcr1Fg/urCMBmVwN3/NZX1sARefe2jIL7TYy
      Misbd1htL5HRFTKZP3x2DgKfxZVVdE1Hl0OOTs7x4pizszOajQU65x3syQDLC1N6FTTn+0zq
      OcCnr6cD3yVKJAxdQ1YUkjgiCAI0PYOIQ5BVtD8yuigt/tPP3uN/+bf/cN27MeclME+Cr8B4
      /HxecQokSYIQIrWamSiKUiv4S1PrqnrzWqAr0BtZvL+ZzpA8eF4LNHeBUtG7nhlhScTmk8cY
      5RYby00g5KP3PyJTXQBngE+Wt966zdMnu7x5Z5nfPt5ieXWd/ukBxeYaK62vGmKdYE0dCn/Q
      2yfg/NxicfEPf+bT3kL21CJbLHxtsj2yZrz3eO9bHvWcV5HUa4HO+jaRPSTfWCKwp1jTLIWi
      jqToBL5H5LoIVWPauwASBpZHFMeEoU21dRdn1sO3JX76819z694bTMZ9iuUSeraBFFiQxExt
      C1kW7D95TO32XWRP8NNP3qe6fotgaGGUCvTPT3j3z/8Zs/GEXveU0dih1igzGIyoVKosVPIM
      kgKr1a9v1T7n9Sb1WiD7Yhe12ODieA/ncwuujEyWe3duARAFLscXfQJvxkVvSFbXGI9nnB48
      IRQqYeCQKAYidAnjGM+PONh6Qm88xQ9gdHGMKoMdy1jTKYgQLwRdk6gvrlPMZqmW80iA73lI
      epZb7Tq265GIGM+d8eTJY2x7hm3Z2O78DflN5fVPgmOPi1FAs17849/7R5iMhuTLVZQvPH5/
      +Hibn3+8/60/f86rx+sfACkwd4FeP62r6s1doCswdMc8nmylIyYuC+LScoFEIpDkm6d1Vb3r
      CYAk4tnTTVbu3iOna0DIh7/+EL1c5/5Skc2Ox3JZ4fC8z0p7mYSQo6MOzfYKi9mIgbxAI/vp
      h8VYU4+pNaLdXqbb7WJmTArFL29mKESCbTsUCvnPf5Fuv8dCY+FLf2YWOOwND7/TUzDn1SB1
      F+j4YoIsQpqNGkkinq8I0/G8EDmKOO1OyUgClDxJIpBEQpAkSCJBlhWIbJ5sPWIpD9nWbcLZ
      BcRZQm/Cx7/r4WPQKOU4PtjCEQbVjMT52KNqRITZFm/fbjMcnLH5zMIsVbm7XOPJ5i6KpvHh
      r35ObXmDxYUWsmaw9ELTrjk3jdRdoGB0jJqrcLC/y8Hx2adbUBSJJIoZj3uMh32GUx+ZBHvm
      gpBQVBlraoGsIkkJkqJwuP0Uyw0uW+DJMlEUo6kKcRxTqjVp1csEQUgYBpQqFcaDAQJBEse0
      Vm5RyuokcUQsQJElSrUmzWabQeeYYqlE4NpY9gwvmPcHuqnc+CT4/GgPK1K5u7HKN32s3jzZ
      ZttOyQUSl2sC0hpOKcTN1Lqq3o0PgO+CuQv0+mldVW/uAl2BvfN9fv6Pv0hFSwCkWAuUZt1R
      mlpX1bueWqA4ZGvrGbFS4M1760DAb/7rh+ilGg/aRZ50PFbLMkedEavtNlHicXTSZ3F5hUUz
      oCe3aH7WIujSBRqN+6yurtHpdMhlc1/pAn0dvU6HaqvFF6+909mUR3sff7uDnvNKkroLdHg2
      RCaiUa/jC/0zFygIQtQk4bg7wRQCxagikgSRxESShiY9H3cWBzx7+oiRGZJbvE8wO0eKcsSh
      ze8++oBQMqnmHQ73nuEIg0pG4nzsUtMjfLPFD9+8heRP2e374I+xBmNiPUdBDRlaEb2LAzbP
      PP7l//DfzVejfQ9I3QVK7AuMfIlnW7s4rvfpFjTtsnGt61j43ozh2EGWwQ8iZHHZEsVzPVB0
      FDnByOY53dvED0FWZDRNAwGGrqEoCrXmMiutOkmSEMcxtYUW3sxi0O+DojI8P8RyAuI4Rtc1
      hBDoho6QDZZqZabWFGtqpT7VcE663PgkuHO8zyzRubXaRpISplPnc6NQv/jvL+c3Tz7gnz75
      Ly9/ZyH9N8Hf8xzgxgfAd8HcBXr9tK6qN3eBrsBkvMXe9t+nonV5ObqZV+VX8Q5wfS7Q5jNC
      OctbD25/bovL/t6EWiNHsfDVLs7p2RntpRY7T58wEzpGPMMhw2JJ56gzZalZ4PR8zDs/+SGj
      7gXtpQLbj8eUl/LYkxFFzWAmPLzQRJM8RODixQb337jzggMEEIYzppPd7/w8zLl+UneB9k56
      yCTkswbj4LK8oZDX+H/+3b9n8eEPKCp5OqcH7Do+oaShhR6RlsPpbjPTFlmtqkxDhfbSEtV6
      nZyQ8GdZMiKkUKmwQIYoCfjBnSZDN8YaXvCof4SIGww2n+BGMg9X28RqBiWYYguJnJ7hzXu3
      IfH4zfsfs3L3Ps3qt19fMOfVJ3UXSPXH5Kt1praHdPnaBxH6LKzfI29oZDI6ZiaLJEkIAUtr
      t1hbarCwtMbdjTaqqmKaJhCys7WLNQuIvBFWEHO4t4M1schoEh8fDKiZKpXGEu+88zbFnMnd
      N97iznobzTAwdJ3llTau46ES8eTpDrGkYmY0ktBnNrOY2vPu0DedVzMJTmJ2d7YoNpZpVK5/
      Rvvx0W+Zjn+ZitbzFCDF+pzvdw7wagbAK8bcBXr9tK6qd20uUBy4TL2ESvHzY49iHCcim/36
      gdae55HJZOhfnJJoBTKSj0+GrBLSt0La9QJnvQkr7UV83yOTUZlZIWpGJQ5DVFkmjgMSNYcU
      +6jEnPanrK+2v7QdY7z7Ic4//e/f5eG/UqS55D/t9gJ/TC/dJDj2sT2BlIT0use4QQaVBoVi
      lu2nmzRWFumdzcjmgNAn1guo0QxfMiloER4mGRy2Twb85U/eQVYz9HtnSEImIWGxtYA7GbLv
      TjAlGHl1pp0z6g2Tw12PXF3Fnk5ZyBeYKQJn3EE3IA4jVlfXcafn7J7HbLSynA9n3FlfvryF
      Bh5ikE579Dnpkm4SLGv0zvY4Pz/j9LzPRX9AoVhABDbDqcXO/jEA9riPK2VwrAFuKCHHPk+f
      PaXX7TKYurTqZUDCtiasrK2hKCqqLOO7Do2lZRRJxjRUogQCz+Hiok8sBONBn6ntPt8ZlXpB
      Y2B5SLKMYWhMRyOGgz5Pnj6l3+0Rzp8ObzwpD8qWKRUq5Bda3L13h8l4hjW1yOezlItFKs0m
      hqyDyPDeL36GuXiXH9xvAAJDuYMjMpiSyyzRgBh7YuEJjUpexaOI5/SZ9m02NlqcnI+411bJ
      rqyTz+uM+h5GfonQ99AVlYwkkTcMArlLOaeyvX/KvTsPqLUF7rTPSc/Gs20CGeJ5QdCNZZ4E
      X4HRyT4Fu5OKlng+J1hOqXtCEifIKQ0BT1PrqnrzUogrIBkaSraSipYQgkQIlLSayKY5vT3l
      SfFX0bumABAc7GwiZausLX2+FUmEZYXkcsbXdvV1HIdsNvul24QQCHhhxpZlWxRy+cupM8+3
      iSQBWX7u/CRYlns5UfKLnzl4TLz5N3/SEX5b4rlWKnopl0L4TNwEKbKYzGLuLpefL4jJsvXk
      GfXlFoOOi5lNiH2PxCigBja+nKWoR7iYZBKH3fMxf/Vn73K4u4VRqDLqdWktr9A9OSKTy7N7
      eMLbb9zFCxICZ0y+tsRk1IWyym+ejnn7jRa9kUc4Oie7tI48m5BfaDLpTemeHlJtb1AppDMV
      cs71kq4LpGgMz3YYWgn1WpGtre1LF8i3GEwtdg8ue/DPJkMiLY9nj4kkA12KefrsGaPhkLET
      0KqXIJ7hxFkkf0Kl1eZwf4dCbRGE4NbGKrPphHLZIFEKDLrnABSKFdZvbdDvjciJALPaZLlR
      ZGjN2NndBxI8z2dq2WmeljnXSOouULXWIlutcb6/Q3t17dIFKuRpVCtUmy00WQOR4/1f/Izs
      0j3WVi9doKz+JlaskZMDZokOSo5ypoucqzPudbhz/01UWSEpZOh1O5QaS+RzWQx5QK29iibH
      oGURzgFLS026I5fVRoFOz6JaKlKsL2CoKv1OgCEFnA+mNAoarhfi+BHXX5Ax52Uwd4GuwLh3
      QklJ566QdhIcp5iYpql1Vb25C3QFfDeiN5qlojWfFJ+u3vUEgBCcnxyQGCXaL7ywlCUAABlO
      SURBVPTfFNj2jHw+j23bGIaBJEkoskScgPoVkyMnkzGl0mXBmkgSoiRBU1UgYTK2MXMmuqZd
      afds2yaf//064cneNrt/+6++yZHOecVJfUHMaBaTOCMOz3rcvV9/7gKZbD1+RmVphVHnBDdR
      KemC/iyiVcmxf3DAnQcPIFIYDjvUW4v0z8+oLq5h948ptzaY9LsYMuwcHNJsLRElEf1On9pi
      C2dsk8kpeFMbzCI5JcTDZLVVxnIi4tBjcHGKVmoi+2MupgF//sN30jw1c66JlF0gg9H5NlYA
      +UKB0+MjcvkcwrPoDMdsP3mClK+TUyN8OUs5b+L5Me2VVQqmzMV5h8rCImfHRzTa63iTU3q9
      IfvP3SPPdVlYXGTQPcd1p5jlFtZ4CIDj2qhmGV2K2NzcYjweE4U+/X6f84seqpnDs4f4kUq1
      mCNJEpJkXgNx00nZBZJYaK1jlkpMe+cIvYjjuORzJdaXlyg3WljDLmZrjWg2Qhg1CqZO4FoE
      wuTBW/e5ODvl/sO3UWWZYnYDRctRri6gKhC5Ft3uiHv33iD2xzze6vHGwztIcQwkyPJl76Fi
      LoMdqehmAUMdUV9Z4WjnCav33iayB0RqDsdxAP7gUWjOzWPuAl2BwUWHjEjnbpC2CxTFMWpa
      i29S1Lqq3twFugJCjolkNx0txGU5h5SSC6RcloPcNK2r6l1LAMShx9bmFhhF3ri7DvhMJoJS
      6atn8rqu+3wx/HdEEhHEMknkY5jml64E+xTPGdAffvjdac95ZUjdBepPQ6TE597dDY57znMX
      CD757WOW76zijPuYpRqmmUWKA6xxn1xtmdgdMhpPMYt1JH+CIzI8vLPKk8ePMCuLRNMu+UqD
      4XBItVJm6kbU8yq9iU8pK+MEgsZCg8B16HYuyOVkDi4Ed1arKIT0xy7lgkFvMOPtH73N1QzT
      Oa87qQaApGaYdJ5g1G7jnvdYXF5HTmLAY+XWPZLZKbFexJn2sSYGURRiSB7ucEgmtijWlyB0
      cBKIQxeRJKiZHL4zI5MrMuuf0BnMME2T84s+w1OLWC+iKA3ubizz0Ye/Zand4vTslIXVFRbq
      dTxnRhAH5LWEsaewXi/hAYQhAq787mDO60nqj0BLq/cwcjmiIIOhSrhujEaWVksAeWbTMXp+
      Cd8eoxg5kmCGapbQ5QRJ0UCUePrRewSZxmXvECFYW1tDlQVKe4lcb0i5VCBfqlDO6oxsj0q5
      CIrOvTceYmYzvCsbFKtV7NGEfHkFRUSMZwHtQg4ZkIAwii5blMwD4EbzmQvkOA5BkPaa/dcD
      27YwM3oqWp8mwXJKSXCSJKmVXaSpdVW9uQ16BZ7t7LN5mM6SSIS4HO6W1pLI73kAvPAI1D09
      5Pisy4Mf/Bmn278jUvI8uH/7D14Zz0YjtEqFb3JN3Hz8EYlexpQ8Jk7Cm2+9wdHeLhsb6zx9
      8gnlhRVCq4swKmystL6BwnfP0VmX/+3/Tqc79Jx0eSEAisUi8UkXRRZkTZORl7D7yfv8ZnfE
      j++2uJj41JQIqbXCxePfoDUf8Nc/enB1QSNL4LtMQps4VHCdCfZ0ysBymExtmis6wSyD8GeX
      yxe/y6OdM+cLvBAAw9EQXZMJIkEcJ8RBQqxnWFlsUKwuUKpJ6LFH1wso1Fcwsn9akjibTlja
      eMCgc0iCy9HxOX6ScHp6znJ7mbPTU+TIAS33td78nDnfBannAJ/2a3RnFkEskctmUFSVKAzx
      XAfDzJNEl7PAMvqr4cD8/U9/zd/8m7+77t2Y8xKYJ8FXYN4c9/XTuqreC1t7Z4ecD22KuSyL
      qxsYKbZxeVXpj20+2j1PRSv1xlhzF+gPmboxbz98yMn+FoOzXX76y9/y7rsPkbQsF7u/Q2vc
      469+ePWk98sQSczW08cY5Rbr7QUg4ne/+YhMtQnOAB+Thw9vs/Vsj/u32nz0ZIvllXX6ZwcU
      m+ssN7+qSVWCNXUo/MHUx4CLjk2z9Ycrzz7tLWRPLbLFwtcm28OpzS9+t/2tjnnOq8kLAZA3
      JB598phiziTwQ+7eXkHS8txabTEbdtAy3/zKJCKP84FDbA/I1RcJ7CnW1KRQ1FH1LKHnEDgz
      UBWs/gVhFDG0HIIwIopsKgu3cWZ9/JnEr379AWu37zEaXFCqVNBzdaTARsQx9myGJCccbW5S
      vXUL4STsbX5EZWUNtz8hUyrQPTvm3T//ZzjTKf3eGcOxQ71Rpt8fUq3VaZRzjJI8y5WvLtCb
      8/rzQgA0lzdoLn/5N//4z/6bbyUmqRnsi0dkm7fpnR6g58pIn92iJDZubbDzeEQY+Rx1ekRB
      QKevU85nGQymhG6XbLlO6Fm4EYSuRSLLOJ7P+fkm2XyeQiaLPzxkYanNJIiRhiPKeoaJ5VOV
      YmqtNSRc4moJRQbPcZEzJreWTM6mM2QFHNti6+IYY/FNHD3G8cJvddxzXl1ST4KTOEaS5ed/
      KsDl8+5ll0KJKAwRkoQiy8/nhInL9haqShJHyIqKxGWCoygKcTCjb8XUyzlkRbm0ToVAkmWi
      KPrsa0kSI0kykiQDApEkn+nDZVnReDjELJQxNJko+n1LjQ8eb/OzR3upnSMBqVnAItVxTOlp
      XVVv7gJdgbkL9PppXVVvviLsCozcCc+m6c0JvqmD617FIXnXEwBJxLOnW6zcvUdOV4GQ3773
      W/RynfvtIlsdn3ZJ5uCsx0p7GSFFHB2ds7C0wmIuZig1qH/WHDrGmnpY9pilpTa9Xo+MkaFQ
      /PJmhkIk2LZDoZD//BfpDfo06o0v/Rk7mLE9TO8RaE56pL4i7LRrIYmAZqNKkiTPV4TpuG6A
      nIs46UzQhCAhhxASCgmzMEIk4vJ2Fto83nrEclEmu7BB4PaQIhPfm/DJox6e0Fko5zk53MYR
      GaoZOJ941IyE0Fzg4a0lxqMO25tTMqUqd5erPN7cRdF0Hv3m11SWVmnVm0iqzuJCOjMB5lwf
      qQ/Kdvr7yGaJg70dDo5+P3hOliAMAobDLuN+l6EdQBIysRyEkFBVidFoDJIMxCRCsLf1lMlz
      m1QSgiAMURWZMAwpVBosVAt4vk8QBOTyOfrdHgJBEPg02usUnk+NjBKQSNAyOcqVBS5O98kX
      CwSujWXP8IIozdM0J0VufBJ8drTLNFC5f3vtGzsQz463eGallwOkawPdUK0r6t34APgumLtA
      r5/WVfXmAXAFPnr2O/7r1q/SE0zxSjl3ga4BEYdsbT0j0Yq8cWcNCPngVx+il2rcbxd51vFY
      KSscnQ9YabeJRcDR8eUYpMVsSF9qsvDZKK9LF2gyGbC8ssrFxQVZM/uVLtDX0b+4oNJs8sVr
      79ge88HWvC/QTSR1F+ioM0YWIc3GArNY+cwF8v0AJY457VnkZIGsFS+b04qEUMgoJJfRHPk8
      3XrEOBeTbd0lmF0gRVmiwOLRRx8SSBnqBZej/U0cYVDNSJyNXap6SJRb4t376+Bb7A188MdY
      wzGJnievBAymIeWLA56defzLf/HfzhfkfA9I3QWKJqdo2SKPn23hef6nW1BVBSESppM+49GA
      wcRFlsD1fCQhkFUFZ+aArCFLCaqe4Xh3E8e/dGhUVSFJBLp2GdOVxiJLC1WiKCKOImqNJtZo
      xGA4BFmhd7LP2PaIwghZkYnjGE3XCFFpVQpMrCnW1GLeH/pmc+NzgPPjPexI5876MpKUMJnY
      lErF51sTJhOHUunrO0C//8n7/MPv/r+Xv7PXwLwW6IYHwHfB3AV6/bSuqjevBboCk8kOB7v/
      mJLa875AN9CZmbtAzxFxyNbmMyIlx8P7tz63xePgYEK1lqVY+GoX5/z8nMXFJjtPn+BgYCQz
      HGHSKqocX1i0m0VOOiPe+dEPGPe6LC4W2Hk6pryYx56MKegGbuLihVlUyYPQxQk17r9x5wUH
      CCAMLMajp9/5eZhz/aTuAh2c9pFJyGcNxoF06QIVdP7ff/fvWXzrB+SlHN2zI/Ycj1DS0UKX
      SMvhdHew1SbrNY1xILO42KLWaJCNBYFjYoiQYrVKXegEScS7txYYujHTQYde7xARN+g/O8SN
      ZB6utglVA7wxM0nG1HTefOM2JB4ffPAxy7fv06wW//gBzXntSd0FwhlglqpMbQ+eT10RgUtt
      9Q6mqmAYGpquI8Tl83BrZZ2VVo1aa5m7G20kWSaTyQARW8+2sZ2QwB0y9SL2tzexpzN0FR7t
      96maKuX6Iu+88xaFbIa7Dx5ye3UJVdfRNY2VlSWsqYMiQp483SGWFAxNJQl9ZjOLqe1//QHN
      ee15NZPgJGZ3e4t8o/1KXImPDj9kPPppOmKf/jpSey5Pnq+Su1laV9V7NQPgFWPuAr1+WlfV
      m7tAVyDe+x3uz/82Fa1Pr0ZpFmimteQ/Ta2r6qWbBAtx+QsWgt7pLh1L5e0Ha8iyRBiGKErE
      wf6EWiNLPptDSBKSEAgkJEkgkJFJOD49Z221zc7TJ1ixipE4uGRYKhscnk9YahY464x558c/
      YtjtsNwusvnxkEq7gD0eUdQNZsLDC0w0yUOELn6S4f7dRXrjhGY1R5QkqIp6+STiz0g66a4I
      S/O2fFO1rqKX7h0g8dk/6iICm6njApnLOcFZhf/0H/8jzftvUlAKXJweceDHhMhoUUCsmVgX
      O3jGIssVFTtSWFtdoVKrkpc0PDtHVkTky2Vakkkc+/zgdouhF2OPujwaHCPiBntbTz9zgRLV
      RItt7ATymsmbt29xuPkhz04D6rmY3XOL/+l//Bdoab66nJM66c4IUzJo4ZTc0m2KzojB6HLO
      l4hiGiu3yJsZTNWAJIfjjYmFxOrqOhIJAyVEydVInCGGkgFC9nYOKS0uowQTXEzcgz0iKUej
      nuXj4yHvvNtGXWizsJDjcGfKyu23ca0puqYTKzK1SolHm/voGZknT3e5f+8hxUXBbHCMll/A
      sSwUBeJ5QdCN5dVMgpOY3Z0tSs1V6qXcH//+l8zwyfvkHqdTC/TpI2Jab0wTIZBvoNZV9V7N
      AHjFmLtAr5/WVfXmLtAVEN2PiH79r1PVTHMZ/k3Vuopeui5QEhMLCRKfD9//Lc31OyzVK2i6
      ynQywcypHOyNqTWymLpOImsoIiJCQZMTYlRUIvaOznhw7w7uzEZSdQLPJZvP481sZEWl0+2x
      3G4TxxFJHKEZWQ4O99hYqnHcC1lZKuP5Mfawh1lroMQhuqlztN9labGClsmha5+7Aic+eIM0
      T9WclEj3DiBijo5OkYQgV8gxm82IKkW0OOT9X/6CyvotCkqBfueEQKhEcYIaxwjNYHy+S5Rt
      0Spp+EKF2GFz+5BKUcOJZOLjQ0Qio8gSThgSORZGqcSkP0XOGOjq5XDt4dgjcLqEbkIsJzSz
      Jtu/+wi91qKWzfPhr3/F+jt/zspCOo88c66XlF0gHT3xyS9uEOxvoWjaZTNcRaLaWqaYy5FV
      TRAlzs8vCGSDO6srSCRk5BAyZfDHhEID2SCjxshakWDap7awRCFfIPRtLi46FGpNFhpl7MGA
      bK5ORhNkChV0sUcul6MfuKw2S4xth1K9RbZYIJ/JstBqETkTuiOFak7F9UIcP+JPX2E853Xg
      1UyCRczRwQHFxhLlvJm6fBT6IOuoyqWDMDp+RHHyfjrizyfEpDUn+LJLdkq1QClqXVXv1QyA
      V4y5C/T6aV1V79pcoDDwSZAxXpgEeTmeVVGUy7kAV/yP8NXf+/vPuypf/Kzuow/49f/1v175
      5+e8PqTsAkUEMYjQYXNrj8XVDQqmgWnqXJx3KNYW8KYDLkYzlholjs8HLFSLdHs92svLgE7g
      TSlV60xHA3KlKva4T6G6wOnhHhvr6/T6AyqVErYXEHse+UqJs8MOpWoeXZZIlAy6FBJKBsWc
      QRQlCJEwm45QsyXkyGX/rMfbb9z//Y4nCUkYpHmq5qREyncAwenxEbEX4ngOZ2cdHt67BZHL
      1rNnmIUL8tUaSuJz2h2jqjLj8fTyOU54HO6fUqqXOXvyiFy+ymR6SPf0ELPuUTDAGvXxo5j9
      3R30nIHjmwynR6jojMY9Ik9G0WR6Z4cohSY/enONztAndMdEYUAsDVGEjKbNX498X0jXBZI1
      TElQuHsXZW8LkcnjeR6qqVCq1SmWq1jjIUa5RmIPkTIlSkUTfzbCixSWlhY4vzij0VqhVCzi
      z4Z4boN8KUfWAERI9+KC9fUNpMTm5KTLnfsbqIlASBm0ag6I0AiJ9RKqnsEa7GGWFpj0zlhY
      eUBkdYmlDNbUQkiCYuH6F+TMeXncqCQ4jkKQFRRZhiQiiGV07Y+7DkIIwjBE1/Uv3X66+RR3
      +8l3vbtftTfPuxncvNm9r+Kc4BsVAC+L8XhE8Rv0Gv0mCCFIkj8taf82zF2gayCJIwaDAYqR
      pVoqAAlhKNC0V3MsvT05prM/b457E0nXBYpD3AiIfBARx8dn6Moy+XzCJx8dsXZ/g8DqYZYa
      aIoMImE2GSBnq0TuBBFHKNkKajRjFqu0F6qcnRyQrbSQQxuhGIzGUxbrJTpDm2YlS98KaZSz
      jMcWlXqDOHA4P+9Sykvsnoast8sU8ga9iU+9aHAxsNhYX5k3xv2ekO4dQJbpnOwiawXyasz6
      rVtkMwoww8wXGB5vEppNhgebqNkGIpgR+TZmVSOx+8R6EdXvEUcRUSJYqhXxYonp6Qmh75CR
      E3rTGZ63iO359E/2iGSDcT/D+voqB9tPyRaKdM9PcOo16s0V7GmP/nBAOSOxeSCzYCjMgK/v
      FjrnppCuCyQp5HSdwmILbzKkmFWxpzaFok5rsY4k8lx0zsnWl3FHXTAKFHQJWdcwawsoZgHi
      kK2PP8BWyjy4Df3OKcu33iSfkZGTAP+0R62cJxlL1GorjJyIZqNOvlAkm8uzUCszGVepNxYZ
      djo0WnWKkUt35LK+vEBGEiiAZU1JhEQppWf/OdfD65cEC8HMtpD1DBldI04S1JecMPa6J6iy
      /VI1PiPlWqAkTpCVlFygFLWuqvdZADiOQxDM33Z+GaPxhESkVJz23AaVU7JB4yS5tI1vmNZV
      9b7kDiDY3Nzi/v37JP6Uw55PI6+i5YoYX+PSiDhi6riUvqapLUDn9BDFrKDEM+xQZmWpiTWZ
      UCgW6Jweo+Yq6MIHPU/pGipBv4y//+mv+Zt/83fXvRtzXgIv5ACD82NG7mU7ofOzPl4ssBMF
      NYr4+PCElcUGZ90LJCHTXGrTOT1hsd2mc3pKtlzlaG+HhZU7NKtfHggz18cfnaBmFHA8rFqR
      x5885Z0fvc3I9tioGxzuHyOkEcUH9+ZuzJyXygsB0B8OGXe72O59Lrrn+GGMqC+heX365+co
      Woa1O6vE04jO0f/f3rk1p21FYXQhCWSBBBZgwGCbONdp0047/fv9B22aSdKMr8EGx4aAuZmb
      hIR0+pA+NE3SoVMsJ+WsZ6FvBPsbnbP32ewLmsMRSlwnY2dxnQndXh9PaVLMPvmUHsPrNmah
      ij/tEhMxus0m/mJK7XKAHvqc1OqYGzoiEJGPlZWsH5/cBHueRyIRx/N8NFXF831UBUZjB9NM
      ocVVRPg+QEeDAWYmw2Q0xrRMptMZKTOF/pljBePRCCud5rJ+ynAWUi4VyNibDPvX9Dtd0oUK
      waSLMGwqhextP/9SyCXQ/5evLwt0B5w13tLqjSLREuLPTXBUG9MgRI0oMxOl1rJ60gBL0L7u
      gvL3xp3bQQhBKER0mZl/0XT0NWktq3c3B99FwMnhARubJfbKW8CCV7+9xMgWEbMecwy+ffqA
      N8fnPN7f5sXBKZXde/Sa56SL+1Q++48NIePRDCv91zquR6c9pVC0P7jScRwMw2AyGpNMW/84
      KaTR6vLzs5P/+NCSL5Fo6wCBx8yPEboTfEUj8Obo+gaWtcFg4BAE8/etkJ5HJmPQaE/YK2Rw
      hYKhhcwcBd+fks/ZnNXOKFf3adVrbBZKJBIGhD6EC2JakhhzmheXFPZ2ccc+vtsnlSsx7rxD
      TZq0Luo8ePojceETLlxa12PKxQyX74ZUdwpoqspcxEnpKkfnV/xyfHW7343kTpBLoCWIsik+
      6uPQ674EinRGmGQ5omwaiXJsaZRay+rJ5tcvjKiDJEqzRam1rJ40wJIc/v4cX7XYslME3pyt
      ShVdW80PKsIFz5/9SmH3ITftBhg2uXQSz5lRuXcfbYUH485PD0jl97hpnTFZxMmZKp3+lO3t
      EgoeyWyFjLGasHAnQ04aHZ7cK/Ly9RH7jx7xtvaGdGGHpLrA9QX7+9WVFTvrp4cMHLD0gBsn
      RsnWabaHVMoVFG1BwiqSTX1Yn5JLoGUQAiOdY9NQ6bWvGLhiZcH//v6gqgqeN8HMlEnFFTrN
      Go4wVhr8AKVymVgYEk9alCydKQm+qdo033VpXE9WFvwAG+YmtmUgWKAqGu64y1b1e5TQpXbw
      AsMurLTSn81vkc9n0fQUu5sGw0Djh4d5Ltt9as0hdvLjVLY0wDLEYrjjAaO5IF/aIWcozLxg
      ZbcXsRA9kcRfKMxGLZwAipWHJFUXL1htjuLivMbFZRPfmdCZ+liKz9HbG3a2t7hfStNf4Wzk
      6U2XeqNOb+gS1zVC1aR38Rq0JI+++wl30GGVKZjT40OmkxmB53A1mmNrAa/O+uxu53i8m6M3
      dj/6jMwCLUGUWSBJtMg3gGStkQaQrDXSAJK1RhpAstZIA0jWGmkAyVojDSBZa6QBJGvNHxdm
      85lJURgTAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='County Map' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Input Files' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='SD Bar (compare two or more)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='SD Grouped Bar (compare two or more)' width='192'>
      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
      D0pyjGpCIEqfAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='SD Table (Census vs BAUS)' width='192'>
      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
      YEhKLWXTfPYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='SD Table (PBA50 vs BAUS)' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='SD Table (compare two or more)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOy915MkV3an+Xl4aC0zUmtZugqygW6CzaaxySGNM7ZixnbGOGvLIW33gfsf
      7AMf9nlfaPvA5dpwm9NksxVasEl2Aw1VQGmdMlRmRIbWWoeLfchCFQoooDIBFFCNii8tHzIi
      /fr163783nvuOb8rqKqqMmTIU4rmy67AkCFfJkMDAAaDAZ1O58uuxpAvgaEBDHmqGRrAkKea
      oQEMeaoZGsCQp5qhAQx5qhkawJCnmqEBDHmqGRrAkKeaoQEMeaoZGsCQI9FqtZBl+cuuxufG
      0ACGPNUMDWDIU83QAIY81Wi/7Ao87dTKedL5MhPTc9jNhi+7Ok80pXyGYqWOxe5GGDRpdno4
      PKP4PQ6CwRCrqytkEvvU210mZ+YppmNIGhMLs5MfW+bQAL5UVPaTOU6eOonUabC+EcJqdyO1
      y0iyim9skkw6hdc/jtLr4LHrKLehVCwwMjbBqNf1ZV/AF0qp1mR5eZmtrW30ej0LczNsBWNY
      1TrVepuWpJJMJfFNzGGiSVMyYRxU6SiTmD5mrDMcAn2pqGg0GgSgmEvTVzRUKmUE0cDy3AT1
      dg+tRqDX69Fpd5AHPXqygChAr9f7siv/xSP3CYVCuH2jdFs1dqMJTCYD0VQBl1VgdzfBcy++
      jM8mEAjvI2gN6DQC0ifkPA4N4EtFg8tmJBAIoLN6MIrg9XoxmUwIGh0GnRadTossyYgamVgy
      h06rQafTIUvSl135LxyT1cHy8jLjfg8mkxlQEDRaHG4fK2unsRsU9vfC7CcL+GdWoJWipmqx
      iR9fpjDMCT7ICJMkCZPJ9GVX5Ymn1WphNBoRxU94qn6DGPYAQ55qhgYw5KlmaABDnmqGBjDk
      qWZoAEOeaoYGMOSpZmgAQ55qhgbwBKDIAxLJNL12g0y+9GVX54lGHnRJZnK06xUK5dpnLm9o
      AF84PS6+c5GN2zfJVZrk8nk2rl+g0uzy7nsXUNSDsIhas0O73aZULNDvdYgn08hSn0I+R75U
      RZUlYtEoA0kmsb9PX1I+/6oqPW5cvUZoL04oGED5wtdMm7zzxiVu37hGtT0gl89z8b3z9Htd
      3rlwGYBsKk6rO6DdblMsFOm1GyQzeaRem1w2S7nWRJF67O3tIysysdg+8geuY7gSzBe9Etwj
      HMyytDzGTiCORqti0yk4xleIhjdYnBolVuwjt6vIUge3f4ZqIcPkqJtcpclAtCBKLURVZmJ2
      gVxiD7t/ilw6w/G15c+3qkqPmzc2kBQZUW/A7fEx4nF+gSvBTcLBOktLDnaCRTTaPhoUFhdX
      2NreYMZro6A6aRdT9Ds1xueOk0vFmHCZKLd7YJ9BrqdRpD6LS8vsRsJMz86SSBVYW54Hhj3A
      l0Ypm8Zodz7kG5VUPIakCOgsDibHfLQaFZK5MnpRg91uRyOKCIIAgDzoEd2LotU/hlBqjYEz
      Z0/gHhnDYjLQbzc//3McgvR+HMeI9yOfq4rM/t4uqkaHxelj1GOnXi6SrbbRCepH2mrQbbMX
      jWMwGO+VMewB+KJ7AIX9vT30VjdjI27a7TaiBrR6M91OE4vFSiGbQtGasZkNmM1mBr028VSe
      qclRFLQoUh+TQc9+IsnE5CTpRBy3fwLbY8gn6HfaoDfSqRYRzU4EZfAF9gAyu6Fd7L5RfC47
      7XYbAJPJTLvdxGy2kE3F0VvdmPQiZrOZbqtOOl9latyLqjUj9doY9SKxRI6Z6XH2YzHGpmYx
      6Q8yAYYGwDAY7igMg+GGDPkKMTSAJ4RGo/HgB6rMXnQfVIVodP/ex81imnT5UWPxHjeu3GBj
      fYN2T6LRaJCJRwjFUuxs3CZTKH/+F/AF8uG2UtUB0WgCVZWIxRL3Pi/GQpT7n1zWMCXyCSGT
      zVDL7VPu69BoRE6sLtJrN2lWcmCwkU5EyeTLzE2OgqZLOFhGo9bQm+2Ua02MZisrCzN3S1Ow
      O0dYWHAR3E2h0fRpFpNY/fMkMzlsDgfXb8TRGgwIgwYavQMdPfr9AS6XnWS5h06j4rPpafVV
      LCYd9WYXo8XO+Ij7S20nOGirVHwXjdaIIppYXZim3a5TSfXQu6bYj4bJVVrMu82oSp1IpE2v
      W8BhMVJr9zHZ3cxPjQHDHuCJQtDqWFhcQSceTMu8TjObeznG/TbyuTK9bpv+h/L7KuUyolaL
      qPnorRx0u4h6PQA+/zgz0zOMTYxj0wv0VQGdKGKwujhxfIVarYbBaEQaSEzNzmOzGOkMFNZW
      V+nUa3fPITz+Rjgkot7E8vIKgtoHQcCi0xCtDhizQyFfo9lsPfD/KlCqVNFqtYgfuIxhD/CE
      4HF70IkqOhE87oO3rHd0nHIbDKIWh9OKfmDBarOj6gx0hSJtScPS8hKx/QQWi/kDpWmR+jX2
      swMW5ueoVMroNCpaDYz4RnD4vIzUumiMZuxWEwKwtLhIvlzD6fYgmnQY3W7MOoFAMMjk3ALJ
      ZAaz2fKltM2H8bg9HDzS99tqenaKfrIK6HA4zRhVB2anG0FroTRIomr0rCxPsZfIPnAdQy8Q
      Qy/QURh6gYYM+QoxNIBPg6qQyxcAlXw+f+/jXrNKodL4+OPuEtrZOLQnJhWL0lcgHA4evn7y
      gEbrwW1fC+k4ja5EMZOg0b2vKBEKhz6+mHaFyzc2kZTPEGekSuTyJT7cVo18mlrv0SK72+u3
      KFbqhzpVdC8KHK2thnOAT4OgoVjI47brqTR6yP19ipUGMxMj9AYCyUQLHW20FgfpVAaHZ4Tp
      8REAFKlPJpvHbrfz2hvrrCzMUKrUQRAxiTIIKqWWjMmg55kzJ0nu79FUdXSbNXY2bmF0jVLK
      ptGIes6cOclD56VKl0yuyXbuOqLWyNqps7jdDsKpLGq3zrzLTTAQQRENiMD+XpDR6RVCwU3U
      XoeBInL8zBnquRQ9WQU+w+RX0FIsZHHoe9T7RnqxXartARM2HYrSIZnoIst1bBYTmXwZ98g4
      Y74DwS+53yZbLDPitvKLmxucnPNTafcRBA1Cv4VOkKgoFix6kVPHV4nthhANJhrVElu3ruAY
      nycVT2IwGjlzcu2h1Rv2AJ8Sr81AIJJkdNxPo9Gk06zQ7MmAQqfdo9tpkdpPoGp1VMr33/Ya
      rZ7xyUlGvS5mFlexGTSMzy5h1WsQ9GaWl+bwjU1itxx4bzw+PzPTk5itDtaW5mjXK7R6Mnqd
      iPyI2ZvL62d6bISBrCAaHai9MogGasU8kirQbH5oPUFVqNUbGPU6JFnB5fYwPTOL9jN6f4xa
      kUi6ysy4nUajTblcQlHUu23Vp9VqkUykELVayqX74eCi3szU1CRep5WltVOoksTy6ho6FIwW
      O6sL03jHZjEbNAiCwMjYBNMTo9icHtYWpijns3RVLVrtx89Xhj3Ap8Q7OsZeNojDpCUtKxhM
      Fgx6PYpGS72Xo9brMDu/QDabx+UdeeBYt9sDogGPQ4PL7mU3EsHo9GA1aBFEAx6HiCAd3LSx
      iTGS8cTBMVoj/olpLIY0A/SIAuSzaWw2G+XmgAn/XR+9Ro/HZQVFj1EnIuoOyvLYbWid4xjV
      NuVWnhGfF6tJj0EL0d0gVocXr9NOrTlAr9WgMVhxinoy6RRup41SS8Fh1h25raYnvdwMFdBp
      QJZlzGYLOqMJNAY6rT3asszy7ATZYg2v78GgN7fbA3oDHpsej3+eYGgHl8+PXgT0ejxWPeg9
      AEyMetlPZXG7PQgGAxOzHszpPTTGAw9ZIpFg1G2l1NMx6rYCQy8QMPQCHYWvmhdIC6Cq6ke7
      w6cISZKQZRnpKZQbPCrdbhdJktA8ZOHtN5GP9ADteomBaMNh0SMPumxuBZhbXvtY6e7U/i7Z
      YpWFleM4rcYPfauSz6Qw2r3YzQaqtRpO50EMvCIPiMX28Y1NfWIYb6t1ECL8MAbdFnvxFOOT
      09jMHz73R1HkAd2+gtn04PkO2wPEd4NkSzVWTpxmb+smGoOTE6fWEFGJR3YQ7GNYhS578TQ9
      WWBl2kc4luHk2XNYDI9ntFkvZdkOxVg9dRan5fDh0HK/zc1b6/inF5ke86IMuty8dRvv+BxO
      g0Igss+xM+fY37mFf+4EUrvC2Pgk7fbheoBCOk6lJ7A46ePO+iYao41Tx1YQBAhvr9PTmJkf
      sXA7nGJichqd3CCeqfLMc+fQHWbOoaok98PIWhdjbgPr2yHMDg/HluZQlS6X3ruOe3wKn1Uk
      msgwOj2P0iqSqXR57pnT9ya/D5ix2qnw//zff8VW/GDS9rN//C6VVodkKsult/6VH/z8NUqp
      XV599ce8e30TgNd//WsA+rUc77zzNsH93L3y2uU0lb6OvXCQZr3CTnj3/TOxub7BxPQsqtyn
      kM8S2Y2RSycIhveQ+h0CgQDZQpmrly8QT2UPvotE6TYrhMO7NDt92tUcDv8s+6Etmt0uwZ0d
      MvkShUKBYjZJrdmlUMgRDuwQCEYo5va5fPUW7d7gEI/IR/FPzrI44SYa3SUSy+Ed9SMCqApW
      q4VKrYHLN8bpY4toRB2B3QTPnVlmczP8qc53GLaDuzz//Dm2NzaOdFxwa52lU8+SjB24QUPb
      G8wdO0c6sct2eI/nnz/L5pU3GJgniW5dYTe6T6NzeEVqg9VJq1ZEQcPJs89QL6ZRVJVuKUok
      28JutxON7CFrNIz4PEQTOZ45NsLtreShylcBu9tJpVAE0cAzzzxDPhkHoFfcJ16T8PtHsLp8
      nDm1RjQcIZGrcGzMwGb0A06JDxYqmFz88e9+/d7fr3zrd9i8fplcuYbWaKUcXicU3cO/+gLR
      7TsASN0mN27cpFxIs5Fosjztv3d8q1bB5R1BqxOxOtx4nXff5KqCRmeiVS0Qi6eJx+NMz0wS
      CkVoFRPEiwdxHIlEghH/ONPjXoLBCM1CnL14CsngwGo68JIIgsDUqJvAZhD//DKVYpZisUit
      0SSfilFrdlAFAx6TjGpwMjU9jdlw9IkcQGY/QjjX5fSxY/yP/8O/JRu5Q62rgCBit95fXt/a
      3ObY8TU0GhGNToc6+HQGdyg0AoKoBY42fJNUFZ2ogbvZUpKqotceZE8JGgFB1IHRib6Tpqcx
      YzQYCW1tHbp8u90OgFYrcuWdN5hbO4OoEeg267jGZ0lGdph/5mu8fO4EVy5dQKMR0RpNyN3u
      I8vOJWMkMkVsNhsAOlHljddf58QzzwFgHFnhP/zRb3H72mU6tTzvXF7nhRefRaMRMZiM9Lv3
      Q0Qf6Jc7lRQ//MWvaRoinFv73wiHQuiMJmqVMut33qHZUlBUAYvViigc2I7BOcqf/Kf/RD2+
      zvKy9/32BMDpn+TW9i20Oj21coFEIonR4mRqfASdZkCuVENRFKwOF3pRxON2oTGY0XUqNFUB
      QQCdRmU/XcDjcSEazLgtGhS7AwBVVYjuhjEwYGHWRzSwg0bUMmYTSHX0yMUoc2e/RjmZBQFE
      rZFSLorfa6LdERj0GkxNTR3ylqrsxfZxePxkCznSsThdLJT2t+n6Z8iEAqSrEgtTPgSjA7tR
      i99t4eKlWyyeOHvIcxydKb+XSxcuMrV44kjHLczNc+vaJZzecaKRELOz89y6fhmH249TL3Hp
      wgVmlk9j1zRxyhYKsU2MrolDlx/cukMqlcJj1lKVjZhzGWrpKHPHT8CVKyg6M7VMnGS2gNc/
      iTiocuHSFqde+Pojy/ZPzqKqCpu3r5JKVTEKLTRWF9l0mmSoxsz8JLt7CawuH6HwHk6rlUyu
      iFWvcnkjwfMv3T/H0AvEZ/MCfdIc5avIZ/ECPf62Umm12lgshw/aeywGoKrqb9QOJu97gQyG
      4R5dj6LT6WAwGL4yXqAjXIXKzZs3D/3fiqJ8JX8zySR9SSYS2OTOxg7S3c/3QlvcXt9iIMns
      Bneot7vUSjnWN7fpD+THVh+p32F7O8BAOuo5ZCKBbRqd3r2/90I71FpdBr02WztBJFkmHo3Q
      7knUqzVk+eBYWX70uWqlHNuhPWRZJhYJkC1W738v90kmM8hSn631dZqdPvVyntBe/N45DvPb
      7zYpV5tUChlu3LjBZiByt3yZWCRIpdFGlmUK+cK9a0wmEw+UIf7lX/7lX957xAdtvvcP36Wr
      sVJMRXj7zbdwjs+zffUttuIVHCY9/UaeH//Ta8wvLfGvP/kBksHF5uVfEyv1mLubZQMHb9VB
      u8rtzRD5YgmjViGRSpMtVBjxONlcv0O1Xsdss5NLJRB0JuR+j1w2i9lmR6PKXL1yld5AwWDU
      06zXUVWJVLaI3WalWi5SbXaxmo2kEnG0Oi2NVp92vUS7r2LQqiRSGawWM8lkGovNjkYQuHnt
      EtVqhYFgwGYx3jNWVVXRaj/ZVdmuFXjj1+eZWVkgnalx5tTqQZSM0mdvv8CZ08dJRzZQrKNE
      drbwjvjx2TTcDuWYHPUc/l1zBG5eu8r0zDhboTgTo75DHxcLrCO6xgltbTI9NUkysoVs8RPe
      3qSQTTM7M8bWxgYt1UQpE6PW6jM64kWSJERRfGQPUChVsAyKBOMZ+gY/uegW41MzaAQIbd0h
      ksjTKKWZXTnBnRvXyZfKjJgkUh0jXvujXdqqqhLdC5DPt5idn2F01E8kHGJqapLSfoCK6CEe
      3MBm1nFrI8z83DT1Qop/ffcap4/fjwt64Crkfhf/1AKXL5xnJxjm3/z2M7xz/g22szLffPEM
      G+sbBHa2ETQaNi++zujp32FcLFDRTlEO3aT+IUdErZBhevkkBp2Awz2CQQSb3QEImE0GZEVA
      K4IkyWxubhHb28XldpBIZu4XotEQ3wvR7MvIkkSznCKWyBLPFGlXS+zthnF4/ahSn2ajzl48
      jV4nEo7sMer3EQlH8HrdRCLRe0UKGhHNUeNbVIWd0D6ri7OoaDGIPd56803aAxXQYNQpvPXW
      m2QKbbxeDzodGLVw6do6I48xjVARNDhdI8iDoy1kNjodfC4Xou7gEai22ox4nOh0WhSNiMPl
      R1JllGaBaqNDOZ/kxp3tQ5dv0MgECxLHFqbJ7m3RlkBApdco0hEPnAQeh41bN6+jNTsw6wRK
      nQ7VTOGRZedTcVLZEgtLy/eCAROhdWZWTgNQzDWZmPKi14u4fGP4XDZUVSEYy7AyM/ZAWQ8Y
      QCUb48qNdfqyitZgxGIygMFBK7nFr85fBcDhclFKxxCdY7z7i++zW1aI3XmbWFXG/KEXqMXh
      olYuIksyyWgYo2uc6XEfoOIeGWfcqSUUCKKaPJgMOgwmC0aDAYGDMFn3yBjzM5NojRamxkaI
      J9JMTIyjyhI2uw1RI/KA20kQWV6aJxKO3BNDOuD+NMfh9iCoCkaDnnq9TqtRf2RQ2UERCiaT
      nsjuLql0hn5fQRA01PJJ8tUG/YGEgMDY5Ag3r1xCEcykUilcHg/1auUQJ/h02E0Grly+gMM1
      fqTjxkZGuH7tMoLGSGwvgt/n58a1qyiCDptBx5XLF3D5FlhbnmNidgH9kV4YKm+fP4/NpCOX
      LWG0WpBliVQsSqMPSrfG7u4uhWoHs9FIv9fB7XbRqHZZOjb7yNJHJqaZGHWzvX6HcDhIszsg
      Weow4TYR291lfGmM6+cv0VN0FDIJwpEw0UQSo1bL7u4u2dJ9TdHHNgnudDqASjGXwWB1o/Qa
      FMo1rA43oz4X1VKBRk9lcsxHKpHE4faiFQWMBgO9fh+jwUCn28NkMtLpdDCZTLQbVWqdAS6b
      DVUQEFQFvdFAOpHE6x8FoFEpoDU7sJu0pLJFJsb8pNJZxicn0WoEOp0ORqOBeqOFgIoogNZo
      BuXTTYJz2Qw+/9jDw5K/gnQ6HfR6/afyAmUzGfyjYw+8sz5fVDKZHGNjo4c+4rEZwG9SXM1g
      MECWZYzGR489n3ba7TYGg+GrFQz3eSMIAjrdp1tt/bL4Tazzl4FWq0Wn0w0N4DAoUpeNzSAG
      i41Rt4VcoYzO7GB+aoxIKMBAFZiZX8Ksf0hjqhK3b97B4vSwsDD7SH+tIvfp9FQsj0Ef833e
      e+t1THYPC4tzXLt6HRUt3/zWNxGVPusbG+Rzeb72zW+T2HqPVMPG0oSJQqmEaB7l3MmFx1Kn
      7dvXqLY62LwznFyZefQBd8nHw2zv59AZLLz8/FlKqT3u7KbR6Yw4DTKNTheH208qmWR0cgap
      VefsM88cuvx+s8R3/vFf+JP/8G3evryNVqflW698HaVb4bXzN9HqdJw9NkcsmaPVk5kfdxGK
      FfnWN186VPmqqhLYvEK952BtwsCVUAa9Ts8rLz1Ht1FhI7hLpdbmxNIk6VyRgWBg1K5lv9Dh
      t19+9l45j3U1o5LeY2T+BFK/jd3pRLnrqwaVVrOJzeHBKMqEAwHWt4Js3LzBztY6sXQBVJV2
      pwsaDYGNm9y+s0WpmGNz/RbpTJ4LFy9y+eoN0okom9s7VKpVCoUCV69cIZ7KEgluEQiGiISC
      bG9vEYmlPvP1OF0u+r0OhWySibmTLIyZqbQlNFo9XqeVVk9FaeWRDW6sRi0z84sgSXgfoxeo
      3u3z0su/RaOSPtJxmXyB5198GUE5iL1J5fK88MLX0AoSzb7ESy+/Qq2UQBA0ZON7VJsNApHY
      ocu/sxXh5NoCuVic48+/hNOiQVJUyqkIS+e+gcOmx+GbwG7U4PL4mJpbxmM3P7pg7scCrZ44
      jUGESCzP1195GYN64DwxWp1YRBlV1DE2NYdekPB4R5hbWsNh1j9Q1mM1AJ1ez6DfBxUEjZ7F
      pXma9RogcOrcs+h6RQLhPRoDaDabGC12lpeWkPsHKsBe/zhLc9NojVbOnD5OMZ9HEFSarTb+
      8UlGnHaqrS5ra2vYTHrQ6JgYG6FSqTJQNayuLDOQFNbWVum3D5dY/fEouEfGWZnxU+0o1GoF
      yvU+BqVNpVbD6p5kdcrF9m6KTrPKXmyfKxcvsHjmRab9rs/clh+HiEqlnEertx/pOIfFRKFc
      QZZVKuUSDquFbKmCJMloFJVqOYvOOsXvfOM5xqbncFhttKuHlFSU2rQ6XXYjESSdjlw6Q68r
      06lXMLpGKWYSDHp99gO30TinOLU6f6S6+ydn73oTDxjzmkmky/QViWqpRKVeZf74Mxjosnnj
      Er75UyzPjj20rMcaC6SqCruhAEa7FwN9yvUWTo8fv8dOdDdCT4KZmQlisQQ6oxmXzYLLZafa
      aOF22CiV63g8LkqlEh6Ph3w6QaXRxuPzo9EICLKE2WJgL5pkbGIcVYFKMYtotOEyi2SKNUZ9
      HlKZHBMzczgsRhKJBEYt2HxTGO8OAA8bC1Qr5UiX26wuzlHIxJF1NjrlDGNzy6SjITRm18Fi
      oCpTa3SoFdMUKg3Gp+fvJXp/3ihSj0AoysrqyhGV21QigR1GZ5cYtOvYXW72wwF8UwuYtQf5
      AGury3RbTbQmC9VcEqNzFFE9vDx6vVbDZneQ3o9gcI5SSO+zvHaMXCKK1uZD268TTWaxu0fQ
      DhqUGx0mZhYY9T5s34QP1V5V2Lx9i74Cy8dPU0yE8UwskNgLs7qyyPb2Dv6peeRWiXS+jHd0
      kn49T73dZ2Zh5V5k8mPzAimfRUrjC2boBTo87XYbo9H4lYkFemyT4N/EYDjh8TmovzL0+wex
      9EMv0CFQVYVoJIzB5mZi1EcxEwezF6/DRC6dpNbsMDW7gOmhXiCFcCiEqDczOzd9KC9Qt6di
      /kQvkEo6sU+zKzE7v4BePNoDn4xFyFQ7nDu+yI2bd1DQ8uxzzyKqfTY3t2i0uiwtTLMXz2I0
      W7FoBtSaLUaml5l6TPOAVCxMMltgfO4YU/5HDx3ep1XJcye4h8Pt5/jyHN16kZtbEWxOL06D
      TDpfYnJumdRukJHpRQbtGotLh9+DLBraoTYQWJv2cXNrD53RzDNnjiOgcP7NN/CMz+GzG0jl
      itRaPbxWLdVGh9PPv4TNcDTjUuUeNy6ex3/iFaZcelR1wPql97AuPo+5myWZK2H3TmDT9knk
      a7zwzJl7xz7WfqyRj6F3z1CvFFAGXXL5HNVaG1SVdKbAwuISBlFmNxxmdz/JXjhAOLhDvtIA
      VUHQmZifmyadiLK9FaBcLhDY2aZSa3Dnzm02t4PUy3l2giFqjRaNZpPA9hbJTJ5sap9QOEIm
      nSIYPIhGRB6QKdZYXFhA9ymufHJ2Eb1GQZX7tDs9ep0WkgqCqMfjtDEYSHQ7LSRJpt1u02o1
      URSZdvvRWU6fllS+xPMvvkg6frS0y2gsyplzz9OsHai17UZjnDr3HJ1GmXSxwvMvvkgydAPR
      PkI8tE4mXyB1hC1c55bXEOQexXSa0YUVeo0isqJCv067r0XQaPCNTTHtszA+s0S11eO507Ns
      bu0/uvAPIYgGji9N0e4fDLsFQceJtTmaXYlUKsfJM+fIJnYZn5rDpHtwxP9YDUAeSOj0OhAE
      Nu/cQkGgUCyBoOH48RUCG7fI5Ev0ZJVyqYQq6Jifn6PdqAJQzmfY20/SbnVYXluh02yCKlEu
      VbC5vFj1WpKlKmsry1gMGnp9CZ1WpNfrUW/3WF5apNlss7KyQq2UA1HP8eU5Nm7fpN799CvV
      3VYd58gMXrueTk9CVVXGphdwW0TiyQJLx08g99u0ejInjq9Qrzy+WCABAVWRQDhaZ64VRQay
      ci9MSi9q6Esy6vtlygMw+Rm1abB6x3Da7ZTSh8vX/SATKydQqylaPRlBAFlj5dvf/m1a1Tyy
      ohKKF1madHNqbYmdwC5Wh+3I5/gkzj33DLuBHQSt/qHfPxAO/XkiSRIGs5X4bhCd0cax4yfw
      OMxoDTbsFj2JRBwVDVarhVa7h06vw2axYLNa6PUlrFYziAZmpsbp9vs47Xaq5RKyCmaLDZ1O
      h07U4HJYiMZTGI1mQECW+kiKgMOkI5MvYrWYSKfSOLyjWIw6EokECFrsdiPVWo9atYTVaj1U
      OHQsEqBQqmBzj9OuZpFFK91SAllnIrITQNVbOLYyz144jGdkHJ/DRDSRZW5xEbPx4Tfgs2I3
      61nfDLJ2/CQG3eGHDi6Xi53NO4xNL1HOp5ieWyS0vY5/Yo4Jn52NrTDHT57GqEBPxhMAACAA
      SURBVFFw+icYNMs4RiYwGXSHCocO72xQqtawmK0USiWmZheJ7qxjd7vY3trGZPcw4jaD1oLD
      biWXSdJWLZxamT7yXEzut9gIRGnUmhTSu1icHnaCEVr1OlazgVKlwsqxUxRTe+SLFbQmOzbL
      gcfvMQfD/WYwzAg7PJ8lGO5J5KvhyxryhfKV8papj5F6pagGAgE1GI6q8vsfKorabLYe+L9a
      oaj2H2dFHkG/31fb7fZDv+u16+rrv35blVRFffe1n6vf+fsfqtVGXf3pD/5evboeuvd/rUpW
      /fkv31S7jbL693/3HXU3WVBvXHhD/a/f+a5aqD287M+DciamfudTnKPfqavf/+531J1oWlVV
      VZV6LfWH//B36kY4oRZTe+p3vvNdtdRoqTcuvaumi3V1NxJWZUVRm82mKknSQ8ts1UrqG+9c
      VBVVVW9fekv98T+/ocqDjvrqP35Xvbm9p6qqqhaTEfWv//qv1b/+u++ru9u31L/5m/9XjSQL
      6u1Lb6nf/+kvVVlRDlV/RemrP/3ef1N/8LNfqZ1mRf377/xX9fLtwN3vZPXXv/iR+qvzVw/u
      x3f+Vt2JZlRF7qs/+sGP1cEHynmsPYDN6UEdSMwuzlIv5tjZCVCrVXjvvQuUaw2ikRCxRJp6
      qcxjVM75TGQzaQI7QRRgbHoeK00uvfU6xumzhK6/S1cBVJXXXnuTZDLG+Td+yQvf+gPefv2X
      +EYn8dtEdhP5R53mU/OrX73JH/zBb/HLX755pOOuvPU6J7/xbS688RoKcPOd11l84Xe5+s7r
      /Mtrb/GHv/8yv/j+P1CUDdw8/yaRvTiN9idvuZhKpwkFAqiDOlcDecY1Jb7/o1cZPfUKty6+
      iayoeCYW+PP/8j+jUwbYXV5WFqbY3triyp1djnslrgSyh7wCgYWVY9TSUUKBdQT7BLevHyRt
      pbYuslfXszQ7yb/808+YWFhjxG3j6lu/IrCbfkBB6QsbAmUKJVaW5khlC0xMTOGymZEVhUQi
      /kVV4VMxPb+Cz2EBBOx2O1qtiGfuFI3dawT2UigqZMLXee/mDlu3bhHL13E6nejEA3EoUaul
      12k/tvrJGvFAblI62iuk3ZVwOR0Y9SIq0O70cTkdmPRaFI0Wh8uFxuTBK/YR7TZUVeXKhXc/
      scyl1RPYTXqQe+hNNlwuG+XSQXuYjPp7eXk33nmNZ175Pex2OxqNln6/z5m1KV47f5V+/9HX
      sX7lHS7eCGF3mBE1MrV6B7PZiKg9eJxr1SoGg5Ef//hVavUmelHiRz/8Hj/8+esUEgE2ArF7
      ZT02L9D7FPMFXCMjNIo58sUSNpePeimDVq8lnamgoOA0mTB5PXxZ0fjvKwQ8LB9g89p5Ll67
      TbunsrN+nXy1y6mTKwS3dlg++yJidR/N6En+/b/9Njq9yDdfPMs//P33WD37NYI3LxLPVjh1
      9jk8jsezwZxRbfG9H/0LL//utxlxHV5zx+ex8b3vfpfptWdpllIsH1vj1e99l9HF0xyftPOP
      r/6SV779h0y6DZg9M/RqaRy+KbxuB1qt9qFeoCtv/yvX72whWCcQarvc3m/xJ//TH/Pz7/83
      PFOr1FMhrKOzhHejvPTMKa68+2s2g3vMrZyint+niZ0/+r1vPHI/Av/kLGM2lR/89JdIgpEX
      nj3FtcuXcfmnqCZCLD37DdYvvoV7fI5vfe0Eb717lRPP/hZ//qf/GZNOz7MvnOP9KfxQGIvP
      JowVi8WYmZ39LHuo/EbxWYSxHntbqSqx/X1mZ2cPfYhwdy7wucqjq79hKZGSJKEoCnr94/HV
      f5Xo9XrodLqvTDDcE7UOoCrKQUL85xiVKfW7qKIB3SfE/Rx2HaCcz5CrtFhZXqCYSdBW9MxO
      HiRgD7pNOrIWm1nPXjiI0z+NRSsRS5dZWZx7bIngitQjFNlnaXnpyOHQe6Eg/pkFLAYdoBKL
      hPBMzGHWKoT2EqwsL5KOR/GOzyJ1WlhsNrrdw60D5FL71HoCS3NToA7I5GqMjx3E8HcaFRS9
      HYtBpFQq4nZ7KeWSJDIFFldPYDMdfTDcrpfB6MSs14CqkohFMLvHcdsMBHYCzCyuYhRldgIR
      FlfXMNydLzwwB+jXsvz1336XX1+4wTdefJbzv/opv3zzHWStA73SJF1sYhZlUpkcnYF6bzXt
      YXxYGItWmWihiqjRYjYZuH3zKrVanWZHRkufXLmO1aQjlc1h0BtAkZAQ6Vbz7ETiSIpKr9sm
      GbpNqqZiMekw6LS02h10Oi25dJIBWpAlCrksepOVQbdJOLCFzj6K3MwR3E3R7Q9w2h9cbj+s
      MFZvIGGmRSTTwGQyU0mEMPqmMIoKke11Sj0NVo2E0elj685N8oUSMyMWQqkGo17HkW/qYXhS
      hbEGiopc3Keq85CJbLOfLjI3MwlKn8CtyzT0o5iVBpdv3GZubp5gOMzZc+eOtJr9PqrcI3Dj
      Ii3zFF6rlloqQFHwEg3cplrMMbd6gts3rlPI5Vg9cQJUFe1dA37gKvQOP7//W88yMnKwp5XP
      46HZ6uJw2tm+c5O/+au/YmvjOm9d2+bVn/zskRX7oDCWaLZiEBTad3sGq8PNyuoqvU4NSZIo
      xENk630EQSC2v09iP46g0ZDIlTl58hiTYyPUa3UcThdTMzOU0glq9Qr5ShPuDrm2tjaJ7+/h
      cDmJx+NE4xnG/Ad7ThlMFlAGaLWffqotKgNubEbw+3306gX6Rg92gwYEkYXFBTQCWJwuotu3
      GZtZxG7WkyxUaFaqn/qcj+JJFcZSem224kWMvTKK0YNFf/dR0+hZXpxFEMDi8DDhP1DMG3HZ
      uH75POH44QPu3kcQDSwt3s+HNrlGKCcjVGtNXC4bN65fR2u2US7k2bx9k3D0fkzTAwbQKkT5
      21ff4szaEgow0Oj5+ovnuPjueTZDe8z4nfQUgbMvvITT9OiwgQ8KY+n0RuZmZ6hV7qfVdVt1
      FEFHMpNnanwEaSADAg6jSFMR0WvAYzOQLlTpdg4iKkVRZDDoMzk9ye1b24yP+ei3y7RlPVaz
      AVF/IOgl3A3r6t/NS1AUgaXVVUqFNO1mnf5gQLN1lGGaQiqVxet2kUtFuXIriFZQKKQTFGtN
      tre2CAeC7Ny6TKahMOh1cbvddFsdZhdnj3Ceo/FkCmNJpFM5RlxWcrUeg1aZ3d0oe7u7tDot
      1reCBLd2KBazhMMRQnv7tNsH9+LTzC3kfov17SCh7W3SiT26GjM2ox6ff5R2q4vFZKTf6zE6
      NoKK8MDw7YE5QKdeYTu8BxoDZ8+eoFuvENyLs3b8JMVUFFnQ43RYEY02WtUS/lH/QyukPkQY
      y6wXiCczTE5PoxM1FLIpOpKGqYkxGtUSPUnF5nCAIjNoFSn3rcyMOUFVKeQyCAYLFqMeo0FP
      MplhfHKMQCDE8WNrqKpKJpXEbHdh0ImYjAY63T5yv02jM8DrG0EUZJLxBE7fGFq1j9Zgot+X
      sFpMnykWaCiMdXgevzAWZLIZxkYfnv/7MJ5AYSyVQr6Id8T3ie6yRrWM1mzHpP/sOT3DlMjD
      81UTxhquAzDcJvUofNW2SX3AC6RU9vj3f/F/8t//8e/xf/0ff4Fp4WXauT366Hj35/8fWwWR
      hQkHO8EoPp+bTDxKs8/HeoMUqcv6+hbVRhuzViG4t49Ga8Bs1BMJBcgVS1jsroO9qj6MKvHe
      hStMTk+xH96k0gbX3dXUbjVHvi0cSKEckVA4hMfzoFT5J60Ef5BIcJPA9iaNvkoitsebb77J
      4toJ1G6Ft9+7QjgUwW4zEQgEOH/xBt1anmQqQbkt4Pc8Hi/Q9u1rhHd3qXbAfwg1hffJx8Nc
      W98hlSsxPTFGKbXH5dtbJNN56oUEu3u71Ftdbt++Tasvk9qPMTo2zmAw+NiV4A+ys3GL7Ts3
      0drdXL9yjc5AwetxIah9fv7qz+ijRejVuL0VQtAa2LlzlWg4hOAYP/Jm3HKvxa9/9lMs88ex
      3h0QJMIbvHlpkzG3mV++8S6ry4u89/abpBJ79HUe3LaD3v4j44czCz5ubGxi8y2i0uPqxUsE
      sk1enDsYH//kh9/H5TAT3Y+xn8hCp85/+d//AtND2uN9YaxSYodQpIjZamcgSbwvjOUZn70r
      jBWmIwsIvSZagw6Ta4zZUSdmrUy21KDZ7qATuiSiu2RKDcYdApEy9H0Wmu0uRouDZiWPqqos
      nzyHXm6zu58ArYlmOY1ep8M3OU8mkaDV67G8dKT2vceI10dgJ8zC6TE8U156ihazTkO3K6PI
      KoLSQja6mfLVsPrnaCW3abY6OCYe39DqfWGsi5cvAYdXhntfGOv2jcvAfWGs9VvXaPZlXnr5
      FS6+9zqCIJKN76E1GAhEYg/o8XwSPp+XnWCUicwekt5MoZBndWkOYdDD4fNTr9eo5aqY7E7y
      hQKKaOIb3zzL5cv7TL+09ugTAKgqkcAmnsklTq7dv6nKoE26rjDmsuD0jt5bq1FVmVarj/kD
      2/l+5LGdOfkc//q9f+DcsydoZ/fISyZsJh3jY+MM+n06jQrBeAmbUXM3ne7jR1AfFMbS603M
      L69QzKY4rDCW1T1KJRnEaHOjSH0K5QrdZhOby830zBzNehWtToeg9DHZ3cyOuai1+5QKeRQE
      Ws06dpeXhdlJ6uUivskF/N5Pm5yu0Fd0fPPrzxKLp9jZ3GbtxDF6rToDjZWvvfwiLocHp0VH
      OFFkacpLrSPx4ovPUEh+dlW6j+OJFMZCAtHKbz+zSEnWY7e70dKnXi5T60gcP30aud/E5bQx
      Pr9Cs1ZCHvTJx5PYJx7uWHkogsDi2klctvsPdL1cIptJI0kDwpEw72e+qqj00fPCs8dIRO+r
      6D0wB1AHHfL1PlK3idtmRtJbSUcj2NwexrwutnbCLC/Nsr0TZvnYcarZOILJ9bGiTx8Uxhp1
      Wwjv7uPxTzDith1aGKvTqOIdH6PZ6FAr5ehJGpaXZ4iEo0xMjJJMZfGMjNJvlmlLGpYWZunU
      y+xnilisNixGPTazno6sJZ+KIQl61pYXKOVSGGwearUaI173oeYAudQ+hXqPtZUlmvU6DqeD
      veA2Y/MrZKIh7CNTeOxG6s0uDruVTrNKOJrm2LE1tEdUoDgsT6owVjIWoTkQWVmcJZ/aR9bb
      qRUzLK8dIx7eweyZwO+xEw5sMTqzjE7psJ+psLwwe2QvUa9VYzMQAZ0Jo6hw7PgJBFTqtQb9
      To39VB6be4RRu554ocHx1cV7DpahMBZDL9BRGApjHZKhMNZXk6Ew1hH4oDCWSZQp1xoIWiML
      s1PEoxG6fZnxmXmsxgdn/el0ivHxw23KPOjWqTYFfF4rmWScdk9hdGwEnU5Prd7E5/n8BKn2
      wtsUSzXGZ+YoZjNksll++3e/jUGQ2NjcpNXucfa5Fygndsg0DHjMfXLFKnNrp/A7H8/+uE+q
      MFZw6w7lap3lYyeJx/boSvDCs+fQCDK3rl7D4Bxh1GVkP5FFa7JDt4qE+KmC4XrNKluhKBIi
      z587harK3Lx6DbN7FLdJIZYq4JuYo5GLoWj0LK2dwHpXGPYLE8Zy+0YZ99oRdAfj7L4Ciwuz
      pBJxIsEdtgNh2vUSO8EQhVKFRCJBfHeHUrVFIpEkGNhmeydEvVJgOxAknsqRikeJ7O7R7ksM
      OnUaPZGFhTnkdpVatcb6xiapRJRSo8f+/kHmWSGbYntri6509CGaz+NFGgzQ6MycPn0Cp9uH
      SadBo9Vz6tQpVKnLoNsiV22j9Hvky01eeP40++HY59msD/CkCmN5vV4G/QGCwYLDrGcwOJAu
      b6SDpJrQ7/VwebyosoSsKHQ6LWRZQas9es9isDiw6GFw957W4ptkOyL9fo/9ZJEXnn+eUjp2
      cA7lwXN8YcJYoBJLFZmdOAhOa9bKvPveZSbGx8gXSwyaVcLpCqsry1jNB/uCKYKOQjLEQJEx
      mL34LLCTKLO2ukKnWaXTl5mfm0YEFGmAqDtYFxj0OuhMVsbGJxkbn6CQ2mMgq4BKs9lC6rWo
      tj45v/WjqFhdPlbmJ8iXKsRD20wvrh58o0i8d/5dTj77Mtm9AN1en1g8gawe1EvzGHeeeTKF
      sQ42QVycdJErN5lbWkOQ2iiKiqjTMzWzgNpr0FW0nDp9knq1xLnnX+bc8UnWN4+gDKeq7Aa3
      qDR7LK2dZNA52PxO1BuYmV2k36wgCyoHPwLPvvgNTi/72dy5fx2PNR9AkXrsBMLozXYWpnwk
      cjVm7vpkU+kUHruZdKmN0muARo/HaSVbqiFqRbwmkbrGSisbZ/HkKWKhADI6JkddJHNlrDYn
      9Ot0e33s3mn8HguRUBBBNOC2G9A7RklEdpiYXSQV3sC/dBq3RUckGGAgDfBNzDPodVCkPn6/
      /xCxQAqBzU3afYnF1RPUSjmmpqYI3rmOY2KOaDiI0Wzj2PHjGDQSqUwVs25AeD/LidOnMX8O
      IRsPo1HJsxPeZ/XEaezmwy8Myv0Od9Y3GJlaRGqVmZicYmNjHe/YLA6DTHA3wbFTZ6FdRjY5
      KeyHMLnGcNvNh4gFkti4tU5fEZifmyIaS6A32+jV8hx75kXiwQ0GGjM+m450oYLLN47cLFJp
      djl++iymI+pW1st5IrEUZruLRj7F6RdfYnf7DorOxsK4k/WdXRZWT1JORai1B5w8fRaD9mC+
      90QlxDwO5EGXcCzF6tLHb1E0FMY6PF81YayvvAEchqEBHJ5Op4PBYPjKuEEfiyrE+zsudlt1
      UuksjVaPEb8PvU6HTqulP5CwWMwH+p46HZ1aHYPDgfHu31/0r0ajQaPRYDabP/KdKnV579IN
      FleWiAdu8/aVDSZ9Fn7wo5+yHdrj5Jlz6IU+//Tqj4kX2xxbWWRv6zr5jpatK6/x7qXr6O1+
      psdHHkvdm6U0P/2n15hdPobD+tH6f9wvcpefv/oqRs8EYz43GnXAP/3kx4j2UYxynZ/94nXm
      V9eIbNxEZx+hWsziHRkBVcVkMmEwGD5S5qDT4PLNLZYW59m5cYFrOwlOrC1RSkXYjJVYnJ1E
      6TX48Y9+RKUnMj/u4d3L11heWmI/eIs3L21w8vRxjHr9kdqg3yzzox+9SldjYXFmAq1Wwxv/
      /BNqshGxU+Bn//w6nvFZLrz2Kpev38Y1NseYz3Vw7z/vh/+DfKWEseQe568FODdrZTMj82d/
      +p8RAYMWBEHL8uoa+USYWrXIhWs3iUUT/P6/+4+cmhvBZHs8gXDw5AtjbcaLvHHxGvuBAAAa
      rYFjx48TjeyQTqUIBIOoqsL5K+u8MG/i3VvRI7eBqDdz4sQq4Z0tADLbl1FGThG8fgGT08PK
      4iTbOyH+u//4vzDptuBw3XcXD4WxHsE9YSxVQms043I76HZ6bF59h+PPv4IGEHUGrBYTqqry
      k+/9N3KlKtdvrSP1WwRzPVanHt8ukU+6MNbbP/tHIvE8V27eoScr6IwWzAYtg4HE5PwyXqcZ
      UNHpTbhcbjrtIwydVZVf/uR7ZGoSBq1If3DQBp12B6fLidloxGy3oxFE+v0uUrtCUbIwar8/
      1B0KY3FIYSzVgkes89b1Xf7N73+TUGifl188S+DGu+SrLd4+/x4ag50/+dM/44VTS1gcPoRm
      Ft/iWUacj0cUC558Yaw//1//jN/9refRa3SUU2GanS7vXLiMxTmCtl3g4rVbtBQjHl2bN66F
      +aM//D2Mh/UC3Q2Gq6UCvHXxFs6RcZrZPSZPvsA7P/seet8MnXyUzeAe8ysnaWb2WHvhFewf
      WGgbJsQwFMY6Ck+0MBYqsdhQGOvIDIWxDs9QGOsQfFo3aK/TQWsy8XHvlk6nc+S3tKrIdPsS
      JuPHuzg/jTBWPrWPpLUxOXqQXVbKpegJJkbdFrb+f/berEmS6zzTfNxj39eM3NfKtfYCCkCB
      AMkmJYpqSc2WZGNjbTPXup+5m9uZvzA9GpuW2XS3ND3dmiZFLSSbBEmQWGuv3CMjY8nY932P
      8Ah3n4uolQBRkQATLEJ4zcpgiUw/ftwjjvs533m/5zv0Y3ZOsjjlJBLPsrZ27syS5l9UMFaz
      WiRdbrNxbpFKIUNzoGFxbmr09FeHZLJlZmYmiYUD2CbmMGuGnCQLbG2uIY5pShxKHVo9cNrN
      1EplrF4PWkaJL/69PXQ2D+fmfRwdR1jfOk+vXiRX67G+svC4jWfWAN1Kmv/7b/4Lb3/wgDde
      e/mTwViSwnf/3V/Sd3qxa4aEYjkmJtyPX2+/CsaS2lXyxTKlagOv2zUCY9XqtCSFbqOCLOho
      ZLPoXS4q2TRojeh1GlR5wC9+/jbTSyukk3GkaoadaIGpCTfZdAqjxYZGFKhVilQaXcwGDaVS
      CUkeRWjiJxFqPRmP00okHMXt/qg57rRgrONYmloXesU49ulFRKnOfjiLVE0zlGW0jllW5ia4
      e+cOC9MugqnaWMWfP41eVDBWsVzFMigRLXcoNWSW5yZGyUtA8HCXcLKA2K+i9yxgN2qpVOtM
      uwR2wk1mJ58fNVNVlehJgEKhjcdh4M47t/BurGIE5GaavOTmwuoMd2/f4cLFLe7f2yNXLDJn
      HZLoW5iwjR52z1yFyTXDpF2DVjf65bhgrMixn7//T/+O/cSzAKinwVhajUCv30cQn1qACAIC
      o8FycHAAQDUXZ2hwED8Jj9oo5di6cpVsZmTasjudzM4vkomHcXgnCIdHfzccDIgHDyiVClQl
      LaV8lnAkwvTs7NhPlOfpMRhrapJ6PkWpM0AnqPQ7DexODy6nFVlno5Y94d2bd1C1ely+CQb1
      +m/k/B+nFxWMZRBljotD3HKdeqvOO+/fRFFU+s0SXY0Du1FLLl+mkAxzd/sAm0nD7f0UVy7M
      P7ftQjpBOlfm3No6ogA6k43l+ae4SHonSivFL967icOi4969+1icHlSpw0G0gNf65E3/zAAo
      pmNMLF1i2K4i8xwwltnIzMwEkiTzYPeQ9XML9PrPxomfBmNV6x02NzfotkeDxOpws765xbRD
      oKOasP4a0Fa+XKfdqFOvjZyIgkaDMhjwzMRNHZIr1pn22hkqInarFVEUURRQhtKoPOdTajQa
      DHodutJp1ilPgbEyOUS9AS0K2VSCrminmAxykq5h1iqogCiIWLQKtz68h3vudNCq0+jFBGOp
      /PLdd7GZdJgnF6DXQqvVkolHaUqg9OpEIhF80zN0pSFarZZf/OJdnHYLrdbzayn4ZheYnXLj
      39slFDqmVCoRCIfw+4PEIhFanS6qCqIg0JEGGI1m+p0GQ0XGajFQrz55WDyzBpAHffx+P765
      FSY9DjrPAWN5nFaC8Sw+h5F2X8Y1MY3drP9YMJbFIBJPppmZW8Cg0zyez4+gVkksDjdGrQat
      0Ugpm8bi8mE16eh0upjNZtrtNqIoYjQayKbTeKdmKGTS+Gbm0GtFqqU8sqDFZrWCqEMZ9tFp
      IFuo4vV6MBn1ZJIJJHS4HVZMei1DUT/675dgrLH1YoOxVLLZPNPTU2Mf8QKCsT5/fZkSOb6+
      aGCsX7vqqxZzWDxT6D9FtOuRF+h3Sb+Lff5tSKvVotPpvpgDQB20+bf/+/+JYWKJFVOXS3/8
      P1KLHuCZWUEddJEkCYtBQ7rc5vzGueduaCjDHvsHxxgsNlxmDaVaE6d3hlmfi3AwwEAVWFxZ
      w6z/9DczGAyxPibop1FM0tJOMOP6dE/693/xU0x2D+fW1jgJHlEul7nxjW9j06ns3XkfybHE
      9c1F/A/eJd20sTFvIZfPo3cucHVrfGbPaeTfuUut3cXmXeTSxvjnKCRC+ON5dAYLb7x6jXL6
      hN1IBp3OiNMg0+z2cLgnSadSTM0tMmw3uPbyy2O3f7S/TSGbYfHSKxRTcYqVOt/+1u8hDDs8
      2DuiUK7y7W/9Prsf/oi2YZMZW5dSKYd97hpbS57ntq+qKoGD2zT6DmackCzVGSgavv6VV6gm
      g2wnaiiDAbMuPbW2hNk1RTMfZTAYcvErv8eEZfSwe2YAFCK7bLz5p/zBq6v87Lt/g9pv8uHN
      2+Rat5izSExuvIpbqPODH/6Ef/M//W9sTpo/sZNPg7GKXZmN8+fZ3z9k1ud8DMbSSmViJQPt
      chIBCY3WgGiyU0kn0WkF3L4JDM5pKukoiBpcJg1ah49KIYOoG239xyMBmh0Jm3eGhUkXsegJ
      lWYPk24U2lS1VuROBanfwXdu/FDhr8rpctHsdOnLAqvLC9RaA0xaEQQ4f+EC/myHdjWHbHBj
      HahMTExwdHTE2tLFT33O5+lFB2Nd93qxKB26QwFREBD0FtxWPZmiSC0XxTq5QL8OE74J/P4j
      lq/Yntt2PhWjL1rYvHiF3Z0YQ3kIgoZaacQtMlnNtBtJTCYT1Y7MV15/nVsf3EI02/nq1gwP
      TvJMXJoDfiUK5JpZZv/mW7x/+z4AuZMDhqYJTDoNJvcUf/DmK2zvBVhbmqXff7756mkw1tbW
      BolYDI3WwNNgrHihCYwy83RGCxvrayiyhNs7ydKsG+vEEsXYISaHD4NGoCapSM0yINJqjY6t
      VOvo9HpEVWEodajWWrTaLTR6E+sb64iDHhq9jZXFubE+vI+Xgts3w8biJKlUgnuHUb7x9TeQ
      uw2a3SfRr0KhRLdV4yQWp9GT+cY3v0Y2foo0v1PqRQdjHR4d4U82+OqN67TrFer1OhOLG3is
      WlKFGo1SnngqRV/R8K3f/wonwdhzW5+cW3pmIM4unOPla5fxeBzUymVOIkmuvv46otJDpw5p
      NOqoBgvDXp9MKsfE1BNz4kcWwbVSjnSlw4zLjMXlJRIK4/Z4EAWYmJigkEnQlVQ8U7OPM+t/
      nZ4GY9mNIpl8ifnlVSx68TEYa/ncItFQBEWjZ9LrxONyUarVERQw6xVUk5fQ3l02r11H6FbJ
      NVQ8Jkjmy1isDsxGLUYtJLJFfFNzuGwGwqEwsqhnwuPE63FRLtXpd+s0Wh1ml9Yxa2Xy5Try
      oM/8/PzYXqB6OU+m0mFtaZqD/UMUUYtZr2VhZZVw4JCBLLB58SIWvUi9xATrUAAAIABJREFU
      2UXpN0nkqpw/v/nx/NPfgF50MNbKrIf9oxCi3oRBVNjY3CR45MfmnR3toisS9bZMv1EgX+9z
      YWu8nWBVVTjY2UZSYG1ji/hJmLWti0SOjzh/4TzhwAHOqSW8diP+oxCbF87Ta5TJVrusLj15
      EL7wYKxhv0O61GBxdvzQ1mn1ZRRofH3RwFgvlBfot6UvUyLH1xctJ/jM8gGGwyGqqpKKBhFN
      LgSpTSgSRWu0YtRraVZLxJNp9CYrBt3ziQmdRpk+BhSpgyrqOe2MQurUqTaHmIwa4tETStUm
      LpcTgfG9QAfbd0nnihhNBo6PAmzv7DC3dA6dqHC4fZfaQIdNp/DBB+/hmVkhFtgjGA5jtHux
      GM8mxJqOhTgKHKPqbDis47/B2tUC93b3aXQG+Dwueo0Sdx7sUWv1kJpFAsdBBJ2JwN42A8FA
      MZfB7faM7QVSZYkf/vAtzq3McfPmXQqVBtNTPpR+k9t3d0jni5g0CoFQmGK1SSUbJx6LorF6
      PwJK+9j2VZWg/wHF2hCvXcftu/fpywJup51uo8Le4RHJTIFBu0o4HEbWWqjlYpykK4/rxsEZ
      k+FQhpj1Gpp9hXQ6yfrWJseBIM7NdRKZAhcunGfQrZGvDOk1SqBIDIYyZtck3WqevizitZrJ
      teropBZtjYcljwmdXSEWSqA3m/A5jJRqTRzuKaa8DlKJGI2ezKRNR749wGQwo6dPvV7DNrHM
      oNeg3oHLFxae3/9fUbvTRWvUYjDbuHLlIl1Jfozw2NhYJZDroDdPsjTjYahAsd7k1Wtb3NkN
      M3Hj8m/67gJPwFh37t5nfvKVsY97BMba370LLD8GY/l379NpKqM23/spWtcKieAe6M2YHB48
      9k+O/D3S0cE+DqeT/MkxcxdephzZQVZU1EGPjjREHAxx+WbQa0UOokW0UhsElU5XAufzHb+C
      ILB+/gL7e3FCezsoestjbKPJ7ubylo737+6T7bd49dVX+PDmPb725g1qe8/6mc50IidodJge
      jWZBQGQEyAIVQRidWpUH9CWZTqfDUBVYXVunU86TK5UZduuUai2WVjfxeUbVIRWpy1Ae4p6Y
      Ra9RqdQ7bGxsUK/kUZUh7W6XerlMTxqwsLyKPGiPAFpLC4iA3uRiedbJgwc7nA4Op/Lya29w
      YXWa40jyGTDWr9O1S+fxH4UwWs8GiwgvKBhr2CWWKpBJxmh0evR7EqoKAtCqlpha3MCsg3w6
      ymGiwo2XL9FXRM5vrlAtPz/SVEgnSGVLj3/W6/Usr5+nUc4BMOhUeOf2Pl9783VeeekKR/4j
      dIaPH7hnOgWSpS4n0TiNtsSMz040kcLlncJmMTPotcjmi+hMForZNH1ZQaP2qdYaOH0z6AUF
      jdGC02LF6nagFwWSqRw2iwmdyQyqiEZUsJl0JNMZHO4pLCY9pWIJQaPD7bRjsNgZ9nsI8oBy
      tY7F4cagkUlm8mh1eowamb4iUiwUsVotz50CnYSOSObqbG2u05WGzE1NcLx7D8VoJ34SplZr
      YjbpiCeztDoSGlWi2VO4fOG0EZrxZTfr2Ts4ZuvCpVPV2HW5XBwd7DK9sEalkGZheZWgf4/J
      2WVmJ+zsH4a4cOkKRlHBOTnLoFXB4ZvFZNA9fwok6lhbX8PtcrO4vkkucojFPU0idMjUyhb5
      eBiDxYVOGCL1+3QlGadZQyJbZX1j/bnXYbE7sFmN+Pf2qDcaLF+6Rjqwh907Q8h/gMVspC0N
      qTfb6BhSqbW4eOUyiXCAUrWG1enGbBwlP71Qi+DTQHF/k/pyETy+vmiL4C9zgvmySN5p9IUu
      kncW6rYaKKIOrQC1ev1xrF0ZSkSjMcx2B9pffZ2qKu1OF73+o9GAUrmM2WxGVRVSiSiqxoDR
      8OujBu12G61e/4m+pXGL5EWODwhHYthcboL+fVLZElNTk6AO8e/tksgUcNvN3L3/gL4s0GsU
      OQxE8PimzmwjrFHOsb17gNU9gfEU/FFZ6nD/3n1kjRGHzYwy6HH//j0kVQf9Jjt7h9i9PoL7
      9xCMLuqVAlabfewieeHAPqFIAu/kNOH92wi2acx6kV6rxu7+IYFwlIUZHw8ebCOLeqr5JIFw
      gumZqfESmFSVVDxEtaWMkl7u3kVStbgco/VWt5rHnyihHTTZOzjC6vFRSIYJnKSZmZl6/H04
      00WwIkvEQ4eUWkNajSpHocij3nOwf8Ds/ALKUCIY8JMrVklEwwSOjqjWKrz//oeUq3VikSDZ
      YplwMEAqW6BcGS2S8tEAWsc0gjKkUshydBSg1+tz5D8gFH3CGkpEY0j9DkdHfgqVOtlkjOBJ
      nH67jt/vp9EZv5DHyvoFpl1G0oUqmxcuI/TKtKTRQnLt/CW0wwbRkwiVtozPN0E8U+T6pRV2
      94O/ydv6jPzHEV599SX8+/unOu74cI+1y9dJxUZ9C/r3WT7/EplkBH/ohFdfvcbB7Z8zMM8R
      PbxNJBqn2R3/Xs0vrzNjh2ShitWkpdYd2eONVicvv/wSehEOdrfR6PTY7TaypRpXV11s+zPP
      aXkkFbC7nVSLJUI72yxdeYVscgTVUlWVveMorWqeUDzNa6+9zMGD+yTzVc5PGziIPllon+kA
      EDV65h/SoK0ON95HRSJUBVFnwqDX0SnEKLVVgsFjugOFlaVJ6vUBs3PzOC16SvUuky4rigKJ
      RPJx2xPzK1SSIXKlKrIsM+w3SWWKGKxOlEHvmX7EY3FW1rcoZdM0mg00ooZAIIAgqgSDEcZV
      s1IgV2mh04rs3v0Qx9wmdoOIoNFwcP8mZt8KW5eu8UffvMH9OzeZ87nZPwoiDc4wN0IUEDRa
      4HTnGKrq6K308Gk7VFX0Ws0oTVUUEDQ6MDrRdzP0RTNGg5Hg4eHY7UeDB5RVJ6szHuzmZ9dW
      qeAes2uXaDbbrG9u8uDebXwuK4FInIH0fI9ZPhUjmS1hs42Mc/0hmPQahIfP9djBLfL1HuFQ
      jIW5KR7sHNAfDBFFDQaTEan3xLt1pvsAstQhHE3Q1g0wL7pIJlMYLU7mZ3zoxAGBQACXw4JR
      08CzuEiv+zBVTRDptapUGx7cbhe95qi64NOvxk67hUanp9tuk2/1Rq9kVQWefKj5TIJmf8CK
      28Vx4AiNRo/VbCSby+Hxeel2BywsTI95NQqpVAYEEWHQIl/vIZrzhJtFLB4f2UqbKUOJnF4l
      lcni9Eyh0WjoSSqXL41fWeW0mp/0cvODD5lfPZ3j9NzyCtt3b+L0zhANB1laWmH73i0c7kmc
      +iE3P/iAxfUr2MUWTtlCMXaA0TVugEIlnkjinZqnWqtyHE7S0st0kgrnLl2l2hO4uGbHq7nA
      zs42nolpNBqFtqTn5WvPd7ROzi099ALdIZ2u8frr17j//gc4vRPs3LvPxeuvs3xRYf/oGL1G
      gzzocv7SVUrJI27tJ3n1K28+buvLRTCfbRHcbrewWM4uzv+i6bMsgs/+Xqm02x0slvFJfGcW
      Bv1dLJL3ZRj0+fqi4dHPbAr0adygw34XVWviFPs5n6hxQVqPokDj9DmfyeCZmkHuNZHQYzMb
      GEodDg+PUUQtmxtrhI+PvrBgLEVRkGX5ua3n03HqfYG15XlQB2TzdWamRx7+xEkIi2cGj91E
      MBBgcW2TZilDMlv8VEXyQCWfTjDQWJib8qKqKsloGKNzEp/bTrNaRDU46NdypPKVz69IniJL
      HN7/gEx9QK2cJxQKchgYcXxuvfMW5faAXOyYW9tHFItFWuU09d6AfDZDpd6iWSlSLhd5+513
      aba7pBIxmp0+3XaDRCqLCshDiVg0Sn8g02rUSKQyqKiUizkOjo4BSB4f4Q+HyZeq1KtF0rni
      p7qeTr3Ie++8T3c4JHx8SCo/2o7X6s1cuXYNuduiXkxj9S1zbnGG+/e38Tl07B2fXULM9v37
      TE06ebB3dKrjYoE9tE4fO/dHyU+p8CGqxcvug/s8uH+fGZ+dB3dvkW/KHO0/4CSZORXNQW+x
      Y2hniVd7HB0ccPwwAliJB+jq3Rzu3ONg+x7umTnu371PPJPn6rVrn+LLD+1CglxHi8cxmvp0
      i2GKQztB/+6IEnfvPY7TNRK5EteuXX0mj+XMo0DLD7OwHG4fBg3Y7CPql2dmnlohQ2sADqOW
      Rr0BwFBqUWsq5NMJOs06WrOd6Zk5LCYtw6HMwaGfk0gEk9GACijDIcNhD38gzEk0ilUrkUhl
      qPc1OG3P+j9EUWQ4GJKK+Kn1TvmGUhWOgnE2V5dA0LJ6buWZp3q/WUK0enC6PF+CsQCl3+Ew
      UcLYr6AYPVge0hUsbi+lZIRqq027r+K229FqZXwuG/duvUsoMX4lykdF8vwHJ7TaJd798DYA
      WouLUuyQ7hDCh3ucO38JAK/Dwp2b73CSfgJw+9wmcqloCKNr5nEqmyDqUKQmWv1HTUoGg/5x
      JAdBQFVkmoUkmD2Y9FoWl1cpZ6I0+wqpRBzv1Cw6ESxWGwadjuFwgCCKj9chokbPyuoqE24r
      2UKVaZ8bqd+j1e7RaDTGuwBVwWTSE45EyGaz+A8POQ4ck03FKTf7+I/CbG2s0ut2vwRjMSST
      zuNzWcnX+wzaFSKRKCeRCIrOgtmoY8I7xYzPzu07t9EYnHQe1gU41dpCEDi3cYHL17fo1dto
      tTqSJxFqlSoGqw15MERvsRCPhMmkM3S6j87x5FrO1AskS12iiTSCoMXlslCp1LE63ExNuOl2
      uwjKEMFgYdjvIYoCOhEkucfhfoKNixsYNSqi3kitlMNodVErFXF4PIiKRLUlMTftQx70yeTL
      eNwuBAH0WpEhWuqlHBqTFY/TQbdVJ50rYnN6MAgDBqoGu93KYKCiyBJms/lLMNaYetHBWLls
      jqnpcUPbLyAYS1EGSBIYzyiB5OP0ZUrk+PpnA8b6LPpskCkdv41o5JdgrPH0RQNjnakZTpEl
      /Dv3EGxTDJpF4okkjc4Al91KOBggXypjsbs+1igWjZ7gsls4jiXxPixq1iwXCMcT9AYKDtuv
      31CJR6NYXa6xFzjjmuHCxwcE/Ae0h7B9/x6RkwQLy8sIssTu7g57u7tY7HYCRwGOQlHEYYdQ
      6Jh8dcD05NnUCfPv3CUUiVDrwuQpEOyFRIi7e0ek82UWZqcpp0+4tXNIKlOgUUwSOYnQaPfY
      2dmhLcmk4zGmpmfGNsP5d+9zfLiLpLNzEgqwe3DEuZUVBo0sP/tgh/BJBJ/Lxg/f+inr65vc
      evdtMqkoHcGJx3G6Dclhu8QvPrjPQBXwuhyoSpd//LsfMBR16JH48c/fY3NjDVlq82//6q95
      7fpLj4898yjQ0rwPaahgdzpRhvLDWLtKu9XC5vAg9irc295ne++QUDCILHU5PNwnGAxSKNcp
      ZdPcuXmXASD1OkgyTE54KeUz7G3fI5PL8OGH97m3vfv4vJ12h3wyyr7fjz94ws79O4SjCRIn
      QQ4O9oilC5/qenzeCSqVOlqly+zyJc5Nm6l2hohaPV6nlXZfxev1olX6iDojiyurMBzi9Z1d
      kbxHYKxmdTwT2SM9AmMJysg39QiMpRWGtKQhX3nj69TLSQRBJJc4odZqEgjHxm5/bWODvqJl
      0ufFadYgo0EAtCYL/U4TVRlVEX2MKFEV2q0O5lPkNaOqhI/2uX9zB53DSrHw8HMdSDgmJqk3
      Gji9UyzNTQEquzv7XLp84ZkmPrcokCDqWV1bodWo8zQY6yiUZH51k6edvILOyOzcHD6PA+/0
      LDNuJwPAPbPIlc1z7O/vUyjkQR3S6vSZW1h+JiFcRaXR7rG1uYU66DE3N0u9UqNYraLT6RE/
      1bJHQVJ0fOPN6+QqLer1IpWGhEHpUK3Xsbrn2Jx3EUkW2Lr2GsKgyb2bH7B69QYLkx8tyvGb
      0osJxoL33r/J137v99FILaZXLuA0Qr1SJpc4YeHCK1gNAoOnsPVdWeTGjcskT8ZMu4THRfI2
      N+ex2SZRpDaNSplmT+by1atInScRPlWR6XS7xCMh0oUn13GmXiBZ6hAMhhhqrEw4DdQbbZye
      SSY99idgrNVlEuEwJocXk2ZAqdrA5pqAfhOtyY6oEdHLMiavh261SCZfxuGeQO03aba7eCen
      0GqMDAdtPB4v+UyCjqxlzmsnHEswMTVPr16kq2iYnbATT+WZmJrF63qC4BvXC5RPxyk2+mxt
      rFHOJZF1NrqVLNPL62SiQUSzizmfg6NAkNmlNdrlNMVqk5mFFaYnzmYQvJhgLJWj/W06ksq5
      jS0y0RDOyXnqpSzrW+dJRY7R2iawaCQi8Qxmu5s5r5VYtsrFrTWE04aJVJV0PILO7qOYTXD+
      /AVOgn7svgWEfo14uoDN7WN9eZ56o47D/qQCzQsPxvo89GUUaHx90cBYZ+YF+l00w536yfPP
      UI/QI19GgZ6jXwVjGbQipWyCjqLDbNTRqpeJJ9MMFAFUGblTpSkbMX2aggRAo5RG0trRyG2i
      8Txul4NYOIDO6kav+eQv9rhgrFQszHEszbTXxf7eLpFogqnZOdRBh/29A3Z2dnA4Hezu7lHv
      DKjlEsTSWQwWB+ZPSNv8LHpRwViPNOzWuH1vj2yxzMzUJINek/0DP/ce7OKza7i1f4IgaHDa
      rbz9j/+Ed3UNwyl3FfutGnsHRySzRWanJ5HaZW7fPyRfriK0KvhjSUSNgVohQTheYOapYoJn
      +x57CoylDHrkC3lq9Q6oCvFUnrW1NSa9Lhr1OvKgR6/fZ+fBXbL5Av5DP8FIjFgshjLskUzn
      UBWZaCRE6CRO/CRIKHhMtlglGg5ychJlqIA86JFJ5xnKEtl0gmazhf/QT+gkTjJxgt9/zPO9
      jB+vuaVV9KKCqNXjdlgZSANUHprhrlzC4fJQTsW4eP0GnXqRdrcNioL2DJ+Wj8BYmUToVMc9
      AmO16qPIySMwVrdZIVOq8uqNG6SC99HYfSSCe2QLRdKFU/h0HqqWzeBeWGPQqTFUFPQmG1ev
      XsLj8dBqdNHrQNCIZKIBRJ2N5+eDfVQGiwOLHgYPQU+VVIrJc1u062Wq3Q5aFDQaDfPLa+jU
      Zz/9zw2MdbC7jYJAsVTmERirWspxb3vvCUJFVTHZ3ZjVFp6FdRj2sRkEAsEoFqcHedCl25ep
      lMsMVZG1lSVajTKy1sTCU/DcqQk74eMIzolpGuUsvqV1lEGPdqfHxub6r61DPK5UVWV2aRWH
      SaXVG+14p08CzKxsoNNqkAajm3zp2qu8dHmdI//pvpyn0QsJxnpK3pUtDN0Cze7gcUZf5HCX
      lfOXmVpZ5/XrL5OJhzkOR2nWcmTS+fEbf2iGq7b6rG1dYtAdmQ4n1y8j1pN0JJn1rcu8dO0a
      0WDgY5v43MBYF69cxuswozXYsFtNDHpNaq0eFqsNk0GP2ahH0ZrQi+DyeEichNHoTczNzROO
      nLC+sog87FOqNNDp9NhtFmxWK72BwqBVp95q45qYRssQQWehWq0wP+nCaJ+gkIyiNZixWsw4
      7Hby6TQarUKtOcRi0o89BYqFAxTLVTRaLSehCKLRQa+cBIuHwVBmfsaHw+0mdLDL5Pw5mqUM
      kXiWja2tUxEbTqMXEoz1tIZ9Ysksc4srZCN+dM4pZEVl2uemUc4TCIaYnFvm6pUreN1uJmen
      0Y27FhME3F4fg3YF/3EY18QU0cAh3qkJEqksSytrSK0KwfAJ8+c2KKailKpVTHYXlodVSV8o
      MNbHqV4p0JRE5qa8z//jT6kvM8LG1xcNjHW2cNzfgBxuH8+vG/6lPk99kaJlZ7oR1qyVyeRL
      CBoDq6tLowXHQ+iVxfIkD6BRKmPyevhtWdE+aSOskIrwo5++y5u//8dY5Ao/eece//rPvsNP
      /uG7DAwT/A///b9Cldr8/Xe/h8G7xFevLvH//f2PWbnwMot2hQ+2Q3znz/4ct+1s9hiquTj/
      9Nb7/NGf/jle+/gemkGvyfe/930uv/EtNpemkaUO3//e99h85RtMmwf88Gcf8id//mfEDh4w
      vXaFbi3P0so5ug/3AT7uDdBpVLi1c8w3vvY6N9/+IfEq/Os/fJN/+v7fc+kr3+L8ygzKoMP3
      v/d3OBfOY5dLbB/FWD5/DZ+2zXG+z3/3nT8Yr0JMr8pf/fV/BeBP//zP+Pu/+z6+xQ3+9Ntf
      ByAb9RMqyujaSfZDKdYuvYJDqRCtwp//ye99PmAsm9ODOhiytLpEo5Tn6ChAvV7l/fc/oFJv
      Eg0HiSUzNMqVT7X6/zykaox854+/yQcffsg//eAnXLx8BXpVSi341je/igYQBC3rm1sUkiGO
      9/dxL25y4+XL3N/eY8qpZfcodmb9+8lP3uZf/suv8eMfv32q427/4qdc+uq3+eDnb6EAD975
      Kauv/T533vkpP3rrF/zxH77BD/72/6UkG3jw7tuETxI0O9IntpnOZAgGAqj0OThKolTj/PAf
      /4n1N/6Q2798C0WFWjZKTTYT2HvAS298iz/5+hVkwcDt3QgXvENuB3Jj9V8wuviLv/gLTDod
      w1IY1TrDv/jKqwCoisTP3tsmGd7n9W/8Ed9+fQtZ0HL/KMk5S5MHkSdk6c9tOy9bLLOxtkw6
      V2R2dh6XzYysKCSTiecf/FuU2mvw3R+8y5/+ye/T7g6opg656S/yxquX+du//g90ZNDoDFgt
      o6r3M5vXWHRq+Zv/5z8jCCIGoxlF/uQvzmeRLGpwOp0wPN0jpNMb4nI6MOo1qECnK+FyOjDp
      tSiiFofLhWjy4NVIaOw2VFXl9gfvfWKba5sXsZv0MJAQjEZMZjOb19/k8N0fEc+N/DeS1Mdk
      MqHXalGAn9/083uvX+Lq1jxvvXsHaQww1t7td/jgnp9ybBfH0hVcs5u8vDbJv/+Pfw3A3Z/+
      HaFUjtu3dumpKr+8F+Ybr13k4rlJfvbBfSTpSa7K5zYAtCgEjoPYHG76nRrFUp5ytfPCzyf3
      dx4wlLrcfnDEjZe3CCYqLE1ZuPdgG/fcOaLb73Ho9/PTX34AOiuNUprtnT3Wz19iwm3jKBxn
      esp3Zv175dIqf/mX/55rr9841XE33rjBd//D/8XE0nn2Htzj0o3X+cF/+iscc+u8cn6Z/+Mv
      /yOvvPkmy4szrG1ewaJX8E59cpXN27/8b0SiJ7x3P4RVI5Gt9bFqh3S6Pb72jd/jzjtvoVh8
      1HMnaC0OBvU08xvX0YkC1WoV08Q5Xrsw/9y+X37t67xxfYvdYI4//PpL1Eo5tre3WV7d4v2f
      /TfOf/Pf8L/+L/8z3/nOt5DLcVYu3kADVKtVbDObvLzxJGT+JRiLzwbGisViLC4tPbdo+BdF
      nwWMdeb3SlWJxeMsLS2NfYigjkSrdTqqwCf349OnRP42NBwOURQFvV7/2+7KC69+v49Op/vC
      mOE+8gYYdpvE8vVnaqmeVk/vA/TaDQSDFXHYJZ7K4vT48Lrsj6FV7VYLk9X6uczFfh0oa9x9
      gFqthm5UZ4l+p4uqyrg9HpAH1Nt9ZKmH2aRHUrUM+j30GlAR0ZutmM5oI6zVqKGoIOjN2Ezj
      D2BZ6tLoDlAVFbfLgTLoUWtLqIqCXqOiAhqDhWG3iaAzI6hDbDbb2PsAxUIBo16L3urEoBVp
      1OsjJI4qUan3UGUJh8VAZwiyLKDKfQRVxeHxoBkTj57PZTBZXdjMWiqNLqgKHvfIdt5rNWkN
      wWEUSBebLM1PUynmUHQWvM4nVnjxVxv90T/9Az/62c/HvpGfJEWWSESOKbdlcqk0s8ureF2j
      xI10Jg1AX5KoFovIqkqpVCaXTnAST9KuVTiJRslmMoTDIY6DQaLxFN1WjePjII12l0ImSTyd
      IxWPEk9lAWg3qgSDQZqdLuHgMaFwFFkeEAkF8R+HP9P1OBwOqoUUsWiESDJHMhygMwRELQ6b
      mWjwkK46osUdHfnxB0JYTXB4+NnO+0nyHwWw2sz4Dw5OdVzo6ABRbyYUGlkEwseHoDMSDh3j
      DxxjtZo5uPtLokWJ4/077B8c0nhOFOhp2R0OGvkYqXIHVJlDfwAEyIf8tAUDkXCInb1DTBYr
      oeNDwpETzJo2u4HsWO2rgMmqJ3aSJLK/i2qyEg6NUO+qqrJ/dEQoeEx/oFAvFQEVncFEOv4s
      pOyZAZA/2SVRh04lR+83MIMRNXrmZkYLQNeEl9RJkEAo+szfVKpVjJoBqXSOeqNF+CRGOXVC
      KptHZ/MidbosLi8i6o0PTXF51tdXyabipDIFZrwWosksqUiEvsLI1qwOSaYzoDVh08rEYgkm
      Fs/hsI5X4fDXqVUtkq+2ERDot6q0hyrqQxt1NhFFUrUg93j/3fe4ePU6oigianUoZzgdFEQB
      QdTCKS1+8mM8+ujnofJr8Oi9LNJDPHokMD4YKx4+oqI6WPFZSRzvM79xCQGYPLdJKbxPvlRF
      RUQjjBBQPpeVYDTBcIwoUCGdIJ0rY7M+xKMPwPgUHj3uv0Ox0efkJI7RZn/4f4XHOPWn9cwA
      MDqneP3aJ1c+PI1kqctJPEUqnqD7MD/gUdSnVa8QiSZQAbNrkmT4iOn5OVxOB87JOWwGHQ7H
      kw4/ujizQUMwGERntOJwutBoDThsZibn5tCKUCoWn4ksCYDZYiIWClNvjaZl+XSabqdGsXKa
      dY9COp1DEATMVuvogxO15KIBsuUK+VIdjVZHMRVFMFrJZbP4XBZu39lleX35M93HT9LshJs7
      t24zu3g6BPvy0jI7D+5gc04SOwmzsLDM3oO7WOxeZjwu7ty6xfzyFgtz0yytbKBRe5gd4+Y2
      qySSKYbdBs2uRHOoY9ZlJrC/S2+oImg0LK2ssb40w907d3D65tFoRDp9/Vjla32zC8xOufHv
      7ZPJJpk5t8jOzVuYHG72treZu/Aaf/TNN7h29SLVbJJMLsNJIkPk2E82m6Zcf/K5v/BeoM9D
      n8UL1G63T4Xj/l3XZ/ECnf29eoHw6F+mRH4x9UVLifzIVdRKWXLlOkq3wl4o+XHHfKxSET/l
      9miuKwgCGo3mt/9PFOhLg7H+VhTFsf6umMuiCiLRkJ+DwyBoNGh+ZUP7AAAZzElEQVREkWQ0
      TCJbpFEpsLOzQyASJx4JsLOzQ6HSOLNrFNQhx8chEMbr/5N/ItHQqCzVo5/jkSAdSQZlQCAY
      RhBF0okYAwU67TaiOLpP49yrYjZJKJpEFEVSsTClWuvx7/LpOOVGB1FQCRwe0huqSJ0G/sDo
      nKe9B51GmZ2dHQ6PIw8/d5FM4oRssQbKAL//GEQN5VyKnZ0dugP1yfHP5gOo/OAf/4FgNMnF
      BSdv72epx3a4d5zGo5f40VtvE4vHeXAYYXXGyX/+L9/Ft3CO8Pb7/NfvfY/lC9d56+//Fklr
      Z8bnRpEl9u++z9A6g1RNc5LMIGoNmE0G7t+9SavdQ6cz0uk0ETV60skkNrudWrlAtdmlVilh
      tjpoVos0e0O0qkKxmAdRx4fvvo3GYMNht1KvFClWW1iNWorFIv2hgFEnEIuEKDYlfG4rh/tB
      fF4bB0dRfD7PM4N3XDBWp1bgJz/+BUubq6TSdV66dh4RUJQh6E1kgnt4li+wNOMlGIpy5eo1
      9HKTSl/PhPNsXv13b91kcWmOvaPY44DDOIr6t9G65gjs77K4uEAiuIdsneL4YJd8NsXK0ix7
      u7t0VBOlTJRaq8/05MTYYKyBrDAsRUmWSrQ1PvKRfWYXlxjUkgTyMqXEMcVchnPnL/Pgzm2M
      JjOzbngQbDI3NT7gC8BgsjA9PU0oGGBxYYFhr0kXM8GjXQr5ApsbK9x54KfVafHK9evotU/6
      /sxVqMqAdKZALpl8GFNQ0ZvtZPZ3iCRCrF3/BuVyFaFe5Ac/+Ee8s9P86Ic/YD9S5JtvvIws
      9ZhaOMeth54RUaPn3MpoUZNK59BrBGq1Z1HhpWSMTK1NPBzA7XURPA4TSxcpZRM47BZi0Sjp
      QpNGPs5JOIpoc5FOJvBNzbAwOzm62YMBydA+6WyWcl9DMZsiFAwyPTc/Xkx5HKkKh4Eo5zeW
      UQUdRk2fn/30LToDFVGjo13OkKn2MGrgJHDIua2LgEowXmJj8eysEIoo4nJPogyapzqu0ekx
      4XGhfYRHb3WZ8rjQ67WoGg1O9xQyMnKzSLXeoZxLcPfB+KFWud/mIFZkyjdFLrJHewgCKo1y
      jomZefQmAy67lXt3b6M1O7GbNHy4k+Laxecvgh/rIRir2uyRjewzu3oZAK3RRj0TwuWbw+uy
      cxSK0e+2mHBYufn+20RS1cdNPDMAcoF7OBcvsDVnYztcAnXI+7/8JdV6axR3NZuxWi1oRJGl
      lSXCwQibW1vUc2Hevb1LKRPlzvY+0vCj83+b1czk3CLt5ojNbnN6WF9fw6DVs7y8wFDqcBJN
      YDDqsVitGC02TEY9AiqP8vYEUYfdZkGjGV28rCiAQjpXZm7Ky1AGh82GRtSgKCqqPGAoK4DI
      UO7TbTcR9Qbq9Tq9dpP+x/Tz199sBZNZTygUIpVOI0kyCCK1fJJcqUy+1MBm0tHq9shU+0y7
      zNTyMay+hTMlRztMBj784F0c7tNtXM5MTnLn1gegMRENB5nyTXH79k1kRnj0Dz94F5dvlQub
      K8ytrKF/KmT6fA1Jp/L43FaisSxGqxV5OCR5EsE8tUp4+z0arSGdroTZaETqd/jpz97GaTfT
      bLXHv4iHYCyn1UAkW2dlyk48EqJWiHAnkEMeDnC53ajDHrOLy48R7MJTb68zB2OFo0kEUce5
      1SXS8Ti+mQWMeg2dTgez2Uy/00FrNiMqQ2LROFNz86iKAqqC0ainL8n023UGggG7UYf20TGC
      QqHWYW7aR7WUZ6BqsFktiFo98qCPQSeSyhbxTkxgMRnptRtkinWWFudoNhoYtCKCwYJBK34m
      L1Aum8E3NfPPBo/+WbxA2UyGqemZM8WjZzJZZmbGr5XwwuHRfxv6Mgo0vr7Eo4+pweBFTXH5
      qB7tA/wu9fm3peFwiCiKv1Nh7k/SmeYEK7LE8cE+vnNXELolKrUGnQFcPr9OOpNmdmaWeDzG
      4uLSpz5HJBLm3LnVT+iERDiWZ3V5llAwiCpqWVpeeSYSMPa5jg8pVyoYbG5q5SqDocy/+ObX
      EaQm7354H1SZC5cuk0omaXQkHDoFRQCje4ELq5/eXPhJCuzdp97pYfUscGHt+V76RyqmIgQS
      BbR6M69fv0IlG2P/JItOZ8Chl2n1+thdPrLpDL7ZeYadJleuXh27/ePDXYr5HCtXXif24OdM
      vfTHrHhGZr1s7JjbhyneuLZOKp8nma0zadei0YBz/jKrc6fjqKpyn7u//DGOi99mY9KIKvd5
      /71buKfnuLC+wvbdn9EXltArBaThgKmVayxNjzLNz3QAiBo9i7NearLKzMQU6qCH1TiichVz
      abqdLuV6E4fVRDaXw2J1MtSYkVrlUcEKYYDG7KXfHYU4c8U6k04DyfqABa+dWqfPYDCaapXy
      GXK5HN7JSRLpCga9Bq/dSLvXZyCYRvjtdpvphXOf6ssPsHRulXzhJtN2C+VSFWFQp9aR8Rj1
      DKU+qqDB6XaTT0QQdUYEoU2n08M+c3ZTq2ZvwGs33uDW3TvA+AMgVyxy/ZUb7O7cBSBTKHD9
      lVc52HlAS5J57cab3PrwbQRBQz4ZRWswEDyJszBmqNXr9RIIxXnJbuXS1jqPkhDVYY9Upc+M
      x8bEzDytWpGpN94gvneTdqvPtOX06zBBY+DShQ0e5RY2M8fUMaOWSpQdWiwT88glFVnV8+qN
      V7i/s8/S9MvA55gRpqoq2WqHKfcoHm51uFldXcVuNlAslhAEFVm0IDXy6AxmDBoBRW+lV8tg
      NNspVWoMWh2GGi0XLl6i25fYWF/DatIDKsViCVUe0OkPmV1YwmrS05Vk1tbOYdBqUAUNV669
      RL+Sotj8dNzSO7ducfW1rzI3O8eN117G4ZzAqHYoFbI4ppaZn7CQyJTYuHwdYdCi0R3yyivX
      KGVOx+4/jTSo1KpFtPqPGr0+SXazmVK1ijJUqVUrOCwWCuUasiyjUVXq1Tw62xxf+8pLTM0v
      YbfY6NSrz28YgCFoLHzt2gqR7JOKjK16lXw+x1AeEolE6A5kcnWJKYeRniLy6isXScdOD996
      Wt1mFcE2hdtmxawOSZVrtCoFEpkMQ0WiXkxjcjypIXbmRfLCkQiyaGFtZYp6c4DXPbJDVyoV
      3G43xWIRddin0e7imZilkgnjWTqPWWlSaIHYq+GZWyQbP6HfV5mc9mCyuRGkJrFkDpPVxvzM
      FJlkjHa3j9c3iUZnYthvo9eoZAoVbA4PU14H0ZMIsqBjYdZLrakwlFrMzs6O6QVSOQkeUW/3
      WVhZo15I4ZpcoJZPMLW0Ti0XRxLNzHhtHAfDzCyuYtYMCMeybG5uoH0On/TT6jdRKHvQaWJ3
      ukhEPloou/8Ij15IY3BMohPksbxA6cQJrYGGc3NeDo6CqIIeg15gY3MLjSDQaDSwWYw0OjIO
      m4lWrUQ8V+P8xrlTp8nKUpu9wyCgw2DUsL65RS2foi+YmJ30oKoDWs0BRp1CJF1kc/WJOfHM
      BsCnoUOryoBEqsDiwuxvukufqC/BWOOr2+1iMBi+MF6gL3OC+Ww5wf/c9Fn2AV5EnWmRPFVV
      SUQCiGY3cqdGOBpH0Iy8QLVSjpN4EkFnwmwcRQeUoUS2UMJmtZJMJZ+p5PGret7vAVLJFHaH
      HVA5DgRxe72kUikc9mfLCY3rBVKVIT/5h39kYn4O//4+9+7fZ35lDY0qsbO9TTgSxTczRz52
      wFG8zrBdJBQK0VVGNOmzUOrkmAN/AEVnw2kbfwC3K3nuPNil3hkw6XXTqxe5eW+HWrOP1Chw
      eBQAvQX/zj0GgoFCNoXH4x3bC3S0v81x4Bid2UIwEODu9h7ra+cQ1AH33vs5ffM0xkGNuzuH
      oNFTSkcJBQMIZi928/NTO1VVJXBwl0J1iMs05L1b29SaXaZ8Xoa9Gu99cI9Ks82wUyMUCRNJ
      FChnohyHTpiaX0T7cLp4xnj0ARaDhmZPJpFMsbS0SDadAlUhmS1zfnOTbDJGrVzAf7hPpdGh
      02kRjkTpdrsMe20CgQDxVI7A4R7+gz3K9Rb+g32iidHCstOsEjg6JFMss/fgAXu7u7Q7bfYP
      DkhlR+hvqVOn026Sr7QfVwv/NIoeH2K02BH0Vq5dvYTb48OsExG1Bq5eu4Y67CH1WuQqbRSp
      z9LqJpNuK73e2XGBkoUyr7/xFdLx41MdF4mecO2V12nWRvcodHLC1es36DRLpEpVXn/jDZKB
      O2jtk8QDO2TyBVL50nNafaKJiQkGkoTB4uSly1t4Pb4R8U3Uc2lzie5AYWd3D71OpN+XmPCN
      jHaKPN7+giAIbF68xKDb4Wg/zPU336DbGC3So7sBLrzxBlKryvzyGh6ThuX1DVqSzEtrXvZD
      T4oknjEeXf8Yj24yGonHYuiMRh7h0REEBAGazSYgUypVOfHvYXGPTG7tVhMFgVKpgKA3cW5l
      lmIihtW3xNTDmlutZgsEKBVLmCxOZtxGUsk086sX8DzMKMskEogGI5nUZ4BwKQOOT5KU8yly
      hRKx40MW1kcVB1VlwDtv/5Irr32VbNhPV5I4icXx792jo3FxcX388ORpJaigykOE0+LRRZGB
      rCD8Ch4d9VGbAwTTJNN2Eat3BpfdQSk9rj1exTM5y/qCh2ylyf7ODhevXv7IX+kNJi5eeYl8
      JobN5eP8xjLF3PMreOZTMRKZ4uOfTXqBriTzyDNmNGnodoeoCKiqQqraZ85t4cLaCkfBJHbH
      k9TYM50CyVKHUCRKvSVhNeuQpCF6gwm3y4nUaZDK5rA6vCiDLrIKJrON6bk5mpUSZrMJnSDQ
      6g3Q6/VYzCZsFjOKYKSaT9CVFGamJmnUqkhDBf3/396Z/rZ1pWf8x10UKVKkqH2xLVmS40Xe
      ZKfLTGeQjDv50j+sHxpMgJkpWkyatsEUMygQFGnQZNJ4YsfJ2JJoSyIpivsmbhJ3cb+8vKcf
      GNsJMrGpOGqcwM9HXp714h68512eZ2AQo8GA0aBhwDpCMhpGVmB8bITDhsTy4iJSs47BYMCo
      VcgfSpQKOaxWS38mkErD4tJSj8J7cpJGS2JuaozdzTVk3SCVSonqYZXl85eZn5vGZrPTrFZo
      NRuodEaGvoF/ux9YTHq2XLucXbnEwBHo0e0jdna2N5k8uUQxm2RuYQm/e5OJ2QVmx6xsu32c
      v3SFAbWCbWKWTq2AZXwGo0HXhwnUxXV/k3JbxZnFU3QVwbjDzsaf7mAdceD1haiUqly+fBbX
      1haTMwtk4gEOijVOnznz1HWYLcNYzEY8W1uUK4csXrxM2LXJ+Ow8O1sPOHPtOtHtBzimTmDR
      y+gtU1hMetLJBIrRzvmFx06WF5dgXlyCj4If2iX4WCLB39ea4BdnwdPRarVQFOUH8wEcq0IM
      9IixumodaqVDPJFiyGpBrVKRy6bIHhQZsli+EsApFotfOY2rxSJqo/HI8kZf7KtcLKA1DNKo
      FEFv5GFsql+FmL1okFA4hskyTNi/Q2q/yPjYKCoUdndcpA/KGNQyPn+QRPoAvWjjC4YxWUeO
      TSGmWjxg2+3FPDzKgL7/3elKDbY2N5HVA1jNgyidFptbm0joULWruDy7WOyjhLybqAxWDkt5
      zOahvkXy8pkk6eIhNosR1+YWpVobx4gNFYKwd5OuYQTRLOLZ9dOSVajlOtFkjtGRb6an3Cwf
      4NvLMz4yTLNawuP1EYgmsOnAHQij0hhIxwLEY1FkreWRoOCxXoK/SIwVDIQYH7Oz6+uRRFXq
      TU5Mj+IPRsjsxYkmUlSLRaKxCJl8EalZpVipkYiGSWYOqBZLdLoSQb+ffLFMLpdHah5SrrXo
      tOoEgwHypSp78QiBQICmJBOPhvGHIr3JiC57sRCZgxK1chHpGyQzjk3NcWpqmHg6x9JL51E1
      C9QkBbl5SKWjQd0qohka48JLC6jVWqKxFMvzU4SizxbefxJ2gxFWVy/i8x6VGGuHhXNXSCd6
      7yPk3+HkmYtk96L4wjFWr67gdd6iY5wm5nMSjSeoNvv3ZhnMVuqVAvVcDCwzVHJpFAEoMtZB
      PYW6hM5o4fLKBZKJKGq9kU79aFVtDyGEwBOMUyv1LtDGIRuXLl1Er+55tzQ6PY4RG8vnLqJT
      qRixP3aDH+sH8EViLMvQIMn0PpLUM41qlSL+QBCzyUQoFmc/FiKdOWDANoZOabPtDWPStomn
      CoRDIQSwHwtRlSEUjlDI50insxiNBhSlC6hIJfdoyYK5qRGSkTBqk4PRkV59aaOcoypryfTt
      yfgqsnsRIrk2FxZncd9fwzq9hMWgRhECuX5Ita0glC4+r4/ll5YxGNQEIklMA8cn/fG8EmM9
      JKHqCgP14h5toQYhQK1jyPR5cqBU4+NP7nFl9RpDQ5Yn9PY1+Fwkz7V+h4PDNpFwnIdVKHt+
      F7NLF1j9q7/h4vI8G2vrCLlFQ+gx6R5bHMeaDfqQGKuhk1meG6bayOEYfUxNrTcM0Gq1sFkt
      DAxa0CuCYauZen6AE5Nm9sttLGYD5uFJVLLEkM1ONVNmbGYWm1HBFc5xUqMik8vTpedSfbg0
      nWGQfCpOS+5wegGy+SrXr10lHvQji14OTaZwiCJLjI+P97EaQSyRwGIbI5tJkau0UBtzRGp5
      Bh0TaDQqhNCgUwtUAxYsA1r0ej1NSUavP74Ui0fEWPNnj9TuITHW8MjEl4ixrLYxrHq5R4x1
      +gIWdQ1r10Q+4WVguP9Kq+Cum0w6g2PYCkKg0+rwe7Y5sbiIL5CgqFRomWQsVjPZbBZNp0Y6
      m2a8cILxkT5FsVQqFpZ7ruiLQuD1+fFvb7J44RJVWcc5+yDpRIRsvsToxDSpeJQzKxe/3MX3
      lRgrHQ/BoIOp0aMxCPw5vCDG6h8viLH6mca3TLd+3Oh2u3S73Rf06H2g1Wqh1+t/MMlwiOcA
      rXpdyN/h+JIkiUaj8TVPFZHJZERXCFHOZ8WOLyRkuSN2PS6R3C88+lcpnxG+UEy06hXhdDpF
      OJ4SB+mEcDqdIl+uHdvcZakpPB6v6HSVozVUuiLg9YjDRvvhDyLk2xGVWkt02g3h8ewKuauI
      eDgompIsioWC6CqKqNVqQpa/7m319koRQkSDu8LpfCCana4I+Twimy8LIYSoVwrC6XQK55ZH
      VEs54XQ6RSKdE5m9qPD4QkJR+luHoigiEvCKcDwlFKU393Kt+ehZwOsWlXpbdDst4XZ7RKer
      iHI+K9y7QfHFEY41ElwtF7hz+w5ttAybDSSS+wzqBDc/voN9dJxyPoOkaKikM+i/Q5XIJ0WC
      wzsP+M3b/8WPf/oyb/3zm7RLSQ7aeprVCv/z3+/z8o/+EqVR5N9++w4O+wi1/SCBXIepMQf3
      bn3EkGMc+4jjUcLft413f/c2jU6TrcAB55ZO9N3O9ekfcKcqrN1zsnplhcDaTdYjedbvrbPn
      20KS6zxw7VJtyyRjMUqHDeZmp5+YDOfa+JTfvXuLH/31dd75z98zMTWLXrTwx/a59fEtrl1b
      RZaa5IslPvjwJrpmiZregsNmI70XwX33I7qOl5i09ROQbOPZCvDhe+9iMnbYCBbZuHeX66uX
      cd95D29OYf3eXZKBbTpCYcMdpVrIkA4+oGY8wfRIz0w6dpXImekZFk6fxO8PMm4fJJYt9UTy
      LIN0ZBmXy3WcU3hmLJy7yrn5aRAqrGY90f0K09PTHO5HGXKMgQK1UpaDfIWbf/wI2WCnmPDx
      6domkxMO1j+9hT++f2zzqws9f/vzG8jl/hPVAJK5Kjd+9iq2ATUKkEyXeeXGzxg1aWmojdx4
      7efIjRbaToNqvcFBJsYfb999Yp8r137MqYlhQGC3GLn5vx/QNY/TzMU5d/VlVCoYtNgZ1bf4
      i1f+jomZGcLbG2xseRnSaziog8P09GPQtXabP92PoBYV1GYr6XiGV197DZuld4ebnl8mE94h
      ld2noeh49ZUbKM0CJ6ZGOWibuHDqsej6d2DIqRCiS6dZotrSMmR6votQPBuf8Nm9u/zh5mc0
      WhJatYpYwE2q2KRVPyQV9VHTjDBu1aLR6mhLbVQq0Go1tKU2oEKrOb5tnnMM8IvXf8X44vKR
      2l04e4rf/PqXSAYrrgdOTp+d59//8ZfU1GbmhnX84vVfMXN+lasry5xcOoO+jyWs3Xqfu/fu
      8snafaQWqNQaopu3+MQdJ5WIEfJsUml1uf0gxE+uLtKUJFSo0GoFm9tutCqFSr311HFWXv4J
      15cduEMZulKDxfMrvP3r12kqRgKu+7RVBvRaNctnznFy1Mwbb7zB6OwZ3nzrX6DbJPm5YiX8
      P+QCNep1BkwmFKnJXqbAybkZyoV90JtpVPIYLXZMOg3awcEjR3m/LTxLLtCmc51zl6+hP6aS
      x+cNz5ILtLGxztXVa30JYX8jCMH6xgbXr1/vu8mxieR9n3hjXniB+scPXiTv24D4nibDvagJ
      fjqeJQ7wPOJLXiChNHjj7/+BULbMytklqvkkb771NoeylvnZya80dt7+EOPUAsY/sxeyLCO3
      6gQjcbK5AnrRIZLY63F4moz4d90UCkW6agN0O49O33gojMluP5o5pHQIRVPYbV8fQZQaZdK5
      GlaTDte2h1qjicVqQ63qPxkuGQtx3+NnZnSITz5bIxaJMDl7Co2Q8Lhd7HjcKN02u6EE8b0U
      c9NjvPP732KfWcY8cDxBd5/rPuFolEpTxVi/EVR6xFgPPH7S+0VmpyYoZmKsu3ZJZ3Mc5pJE
      Y1Gq9RZul5u61CW9l2B8YqLvZDife5Ogz4NitOO9+wGd4QVsgxqkwywf33MRiUboNitEE2n2
      MvukIn6yqTgNlRW75WimaLddY9Plwe31c3r+JEKRef+9d2kLLe1yFm8wwn7hkMlRK//xT//K
      yWtXeHjU/R8QjXahp/ecfQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Superdistrict Map' width='192'>
      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
      ii76GIguzP8B/9NTd12gm/QAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Vacancy' width='192'>
      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
      8/8Bou9UqSjDPQEAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
