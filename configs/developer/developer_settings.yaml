# capitalization rate for developer feasibility
cap_rate: 0.04

# the weight to use to combine profit vs ROC to create a probability.  A 1.0 would mean
# equal weights.  0.5 means profit is half as much as ROC
profit_vs_return_on_cost_combination_factor: 0.5

# settings for the feasibility model - 
feasibility:
  parcel_filter: (nodev != 1 and sdem != 1 and oldest_building_age > 20)
  residential_to_yearly: True
  simple_zoning: True
  # pass_through are columns not used by the developer but which go in the debug output
  pass_through:
    - oldest_building
    - total_sqft
    - total_residential_units
    - max_far
    - max_dua
    - land_cost
    - residential
    - min_max_fars
    - max_height
    - building_purchase_price
    - building_purchase_price_sqft
    - residential_sales_price_sqft
    - pda_id
    - cat_id
    - tra_id
    - ppa_id
    - sesit_id
    - coc_id
    - juris
    - county
    - superdistrict
    - geom_id
    - vmt_res_cat
    - vmt_nonres_cat

# settings that get passed to the residential developer as kwargs
residential_developer:
  target_vacancy: .03
  min_unit_size: 1000
  bldg_sqft_per_job: 400
  max_parcel_size: 150000000

# same as above for non-res
non_residential_developer:
  kwargs:
    target_vacancy: .05
    bldg_sqft_per_job: 400
  type_splits:
    Industrial: 0.0
    Retail: 0.2
    Office: 0.8

# jobs sqft per building type (for existing buildings (everything below?)
building_sqft_per_job:
  HS: 400
  HT: 400
  HM: 400
  OF: 355
  HO: 1161
  SC: 470
  IL: 661
  IW: 960
  IH: 825
  RS: 445
  RB: 445
  MR: 383
  MT: 383
  ME: 383


# this maps building type ids to general building types
# basically just reduces dimensionality
building_type_map:
  HS: Residential
  HT: Residential
  HM: Residential
  OF: Office
  HO: Hotel
  SC: School
  IL: Industrial
  IW: Industrial
  IH: Industrial
  RS: Retail
  RB: Retail
  MR: Residential
  MT: Retail
  ME: Office
  PA: Parking
  PA2: Parking


# this maps building "forms" from the developer model
# to building types so that when the developer builds a
# "form" this can be converted for storing as a type
# in the building table - in the long run, the developer
# forms and the building types should be the same and the
# developer model should account for the differences.
# travel_model_ variables are for the travel_model_summary step.
form_to_btype:
  residential:
    - HS
    - HT
    - HM
  industrial:
    - IL
    - IW
    - IH
  retail:
    - RS
    - RB
  office:
    - OF
  mixedresidential:
    - MR
  mixedoffice:
    - ME
  select_non_residential:
    - OF
    - HO
    - SC
    - IL
    - IW
    - IH
    - RS
    - RB
    - MR


# convert square meters to square feet
parcel_size_factor: 10.764


# these are the tables the get auto-merged to buildings/parcels in the hedonic and lcms
aggregation_tables:
  - nodes
  - tmnodes
  - logsums
  - buildings